[{"/mnt/Fast Projects/Web/school_argon/src/index.js":"1","/mnt/Fast Projects/Web/school_argon/src/App.js":"2","/mnt/Fast Projects/Web/school_argon/src/routers/AuthRouter.js":"3","/mnt/Fast Projects/Web/school_argon/src/pages/Login.js":"4","/mnt/Fast Projects/Web/school_argon/src/pages/admin/dashboard/Dashboard.js":"5","/mnt/Fast Projects/Web/school_argon/src/components/useForm.js":"6","/mnt/Fast Projects/Web/school_argon/src/components/controls/Controls.js":"7","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/Sidebar.js":"8","/mnt/Fast Projects/Web/school_argon/src/services/API/Call.js":"9","/mnt/Fast Projects/Web/school_argon/src/components/controls/TextInput.js":"10","/mnt/Fast Projects/Web/school_argon/src/services/API/CSRF.js":"11","/mnt/Fast Projects/Web/school_argon/src/services/API/Api.js":"12","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/createLinks.js":"13","/mnt/Fast Projects/Web/school_argon/src/routers/AdminRouter.js":"14","/mnt/Fast Projects/Web/school_argon/src/routers/createRoutes.js":"15","/mnt/Fast Projects/Web/school_argon/src/components/crud/Index.js":"16","/mnt/Fast Projects/Web/school_argon/src/components/crud/Add.js":"17","/mnt/Fast Projects/Web/school_argon/src/components/crud/Delete.js":"18","/mnt/Fast Projects/Web/school_argon/src/components/crud/Edit.js":"19","/mnt/Fast Projects/Web/school_argon/src/components/crud/List.js":"20","/mnt/Fast Projects/Web/school_argon/src/routes/routes.js":"21","/mnt/Fast Projects/Web/school_argon/src/components/controls/DatePicker.js":"22","/mnt/Fast Projects/Web/school_argon/src/components/controls/Select.js":"23","/mnt/Fast Projects/Web/school_argon/src/components/controls/FileUploadInput.js":"24","/mnt/Fast Projects/Web/school_argon/src/components/controls/InputField.js":"25","/mnt/Fast Projects/Web/school_argon/src/components/controls/CheckBoxArr.js":"26","/mnt/Fast Projects/Web/school_argon/src/components/controls/Checkbox.js":"27","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Religion.js":"28","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Session.js":"29","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/SchoolClass.js":"30","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Department.js":"31","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Subject.js":"32","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Settings.js":"33","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/PaymentCategory.js":"34","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Permissions.js":"35","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Users.js":"36","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Roles.js":"37","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/GPA.js":"38","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Grade.js":"39","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/Library.js":"40","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCrud.js":"41","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/ProductCrud.js":"42","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/Products.js":"43","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/Accounts.js":"44","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsCrud.js":"45","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Exams.js":"46","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/ExamCrud.js":"47","/mnt/Fast Projects/Web/school_argon/src/components/crud/ValidateInput.js":"48","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/Results.js":"49","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultCrud.js":"50","/mnt/Fast Projects/Web/school_argon/src/contexts/ClassDeptSessionContext.js":"51","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/AssignSubject.js":"52","/mnt/Fast Projects/Web/school_argon/src/components/crud/Query.js":"53","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsReport.js":"54","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/Students.js":"55","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsCrud.js":"56","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/AssignClassStudent.js":"57","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/Employees.js":"58","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeCrud.js":"59","/mnt/Fast Projects/Web/school_argon/src/reportWebVitals.js":"60","/mnt/Fast Projects/Web/school_argon/src/serviceWorkerRegistration.js":"61","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeTypes.js":"62","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeePosts.js":"63","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountBalance.js":"64","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/ExtendedInput.js":"65","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/StudentsExtendedInfo.js":"66","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/EmployeesExtendedInfo.js":"67","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/Payment.js":"68","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentPaymentFees.js":"69","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPayment.js":"70","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPaymentList.js":"71","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/AddStudentPayment.js":"72","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/PaymentInput.js":"73","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePayment.js":"74","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentList.js":"75","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentModal.js":"76","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/PaymentInput.js":"77","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReport.js":"78","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReceipt.js":"79","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReceiptList.js":"80","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsDocuments.js":"81","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsPhonebook.js":"82","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultExamInput.js":"83","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultPublishing.js":"84","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/PublishList.js":"85","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/PublishModal.js":"86","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/StudentsAttendanceReportDay.js":"87","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceListDay.js":"88","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceListMonth.js":"89","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceReportDay.js":"90","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceReportMonth.js":"91","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceListMonth.js":"92","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceListDay.js":"93","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/EmployeeAttendanceTable.js":"94","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceReportMonth.js":"95","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/StudentsAttendanceTable.js":"96","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/Marks.js":"97","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkList.js":"98","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkAssignModal.js":"99","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkAssignment.js":"100","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/Tabulation.js":"101","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/TabulationList.js":"102","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/TableRow.js":"103","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCategoryCrud.js":"104","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/FindBooks.js":"105","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/Books.js":"106","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/CustomBookList.js":"107","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/BooksOperation.js":"108","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssueModal.js":"109","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/SellModal.js":"110","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssuedList.js":"111","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/ReturnModal.js":"112","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssuedBookDelete.js":"113","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/ProductsOperation.js":"114","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/Products.js":"115","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/CustomProductList.js":"116","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/SellModal.js":"117","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Album.js":"118","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/WebsiteSettings.js":"119","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Pages.js":"120","/mnt/Fast Projects/Web/school_argon/src/components/controls/MyEditor.js":"121","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/SubPages.js":"122","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Gallery.js":"123"},{"size":631,"mtime":1610168291916,"results":"124","hashOfConfig":"125"},{"size":188,"mtime":1609232982827,"results":"126","hashOfConfig":"125"},{"size":1201,"mtime":1610169477987,"results":"127","hashOfConfig":"125"},{"size":3461,"mtime":1609516265592,"results":"128","hashOfConfig":"125"},{"size":772,"mtime":1609774312500,"results":"129","hashOfConfig":"125"},{"size":523,"mtime":1612532075805,"results":"130","hashOfConfig":"125"},{"size":327,"mtime":1609597407448,"results":"131","hashOfConfig":"125"},{"size":5375,"mtime":1609255738121,"results":"132","hashOfConfig":"125"},{"size":1168,"mtime":1609507348547,"results":"133","hashOfConfig":"125"},{"size":648,"mtime":1610799181614,"results":"134","hashOfConfig":"125"},{"size":174,"mtime":1609135355028,"results":"135","hashOfConfig":"125"},{"size":425,"mtime":1609397059527,"results":"136","hashOfConfig":"125"},{"size":2143,"mtime":1609521217369,"results":"137","hashOfConfig":"125"},{"size":623,"mtime":1609394479962,"results":"138","hashOfConfig":"125"},{"size":376,"mtime":1609256357557,"results":"139","hashOfConfig":"125"},{"size":7786,"mtime":1612534039111,"results":"140","hashOfConfig":"125"},{"size":6939,"mtime":1612610674453,"results":"141","hashOfConfig":"125"},{"size":2994,"mtime":1612452911417,"results":"142","hashOfConfig":"125"},{"size":7443,"mtime":1612610681449,"results":"143","hashOfConfig":"125"},{"size":3194,"mtime":1612539557588,"results":"144","hashOfConfig":"125"},{"size":14346,"mtime":1612529989709,"results":"145","hashOfConfig":"125"},{"size":1730,"mtime":1609681606134,"results":"146","hashOfConfig":"125"},{"size":1096,"mtime":1609834515310,"results":"147","hashOfConfig":"125"},{"size":1747,"mtime":1612539675036,"results":"148","hashOfConfig":"125"},{"size":3059,"mtime":1612533015127,"results":"149","hashOfConfig":"125"},{"size":1613,"mtime":1610983353536,"results":"150","hashOfConfig":"125"},{"size":583,"mtime":1612523746819,"results":"151","hashOfConfig":"125"},{"size":802,"mtime":1609600773602,"results":"152","hashOfConfig":"125"},{"size":761,"mtime":1609600767473,"results":"153","hashOfConfig":"125"},{"size":754,"mtime":1609600770462,"results":"154","hashOfConfig":"125"},{"size":1814,"mtime":1610033837762,"results":"155","hashOfConfig":"125"},{"size":792,"mtime":1609600764017,"results":"156","hashOfConfig":"125"},{"size":757,"mtime":1610349936284,"results":"157","hashOfConfig":"125"},{"size":3313,"mtime":1610799469084,"results":"158","hashOfConfig":"125"},{"size":467,"mtime":1609600788713,"results":"159","hashOfConfig":"125"},{"size":2378,"mtime":1610086261301,"results":"160","hashOfConfig":"125"},{"size":1172,"mtime":1609921832465,"results":"161","hashOfConfig":"125"},{"size":1519,"mtime":1609652074246,"results":"162","hashOfConfig":"125"},{"size":1527,"mtime":1609652957788,"results":"163","hashOfConfig":"125"},{"size":240,"mtime":1612418526347,"results":"164","hashOfConfig":"125"},{"size":1931,"mtime":1612407958973,"results":"165","hashOfConfig":"125"},{"size":1237,"mtime":1609654648592,"results":"166","hashOfConfig":"125"},{"size":155,"mtime":1612453660898,"results":"167","hashOfConfig":"125"},{"size":194,"mtime":1610265005771,"results":"168","hashOfConfig":"125"},{"size":2150,"mtime":1610799002514,"results":"169","hashOfConfig":"125"},{"size":169,"mtime":1612322570951,"results":"170","hashOfConfig":"125"},{"size":3794,"mtime":1610980919367,"results":"171","hashOfConfig":"125"},{"size":862,"mtime":1612536556812,"results":"172","hashOfConfig":"125"},{"size":131,"mtime":1611047241248,"results":"173","hashOfConfig":"125"},{"size":3778,"mtime":1611038003696,"results":"174","hashOfConfig":"125"},{"size":1302,"mtime":1609827168445,"results":"175","hashOfConfig":"125"},{"size":3272,"mtime":1610110755825,"results":"176","hashOfConfig":"125"},{"size":3556,"mtime":1612325602873,"results":"177","hashOfConfig":"125"},{"size":2341,"mtime":1610799018354,"results":"178","hashOfConfig":"125"},{"size":601,"mtime":1611331580896,"results":"179","hashOfConfig":"125"},{"size":6560,"mtime":1612609580793,"results":"180","hashOfConfig":"125"},{"size":3458,"mtime":1610113042079,"results":"181","hashOfConfig":"125"},{"size":188,"mtime":1610173817824,"results":"182","hashOfConfig":"125"},{"size":8104,"mtime":1612610309078,"results":"183","hashOfConfig":"125"},{"size":364,"mtime":1610168263892,"results":"184","hashOfConfig":"125"},{"size":5064,"mtime":1610168198179,"results":"185","hashOfConfig":"125"},{"size":818,"mtime":1610174087839,"results":"186","hashOfConfig":"125"},{"size":1289,"mtime":1610174179140,"results":"187","hashOfConfig":"125"},{"size":893,"mtime":1610266903862,"results":"188","hashOfConfig":"125"},{"size":1588,"mtime":1610984301806,"results":"189","hashOfConfig":"125"},{"size":1329,"mtime":1610286133725,"results":"190","hashOfConfig":"125"},{"size":1330,"mtime":1610349913514,"results":"191","hashOfConfig":"125"},{"size":276,"mtime":1610862388823,"results":"192","hashOfConfig":"125"},{"size":1923,"mtime":1610529879448,"results":"193","hashOfConfig":"125"},{"size":2446,"mtime":1610606190759,"results":"194","hashOfConfig":"125"},{"size":2588,"mtime":1610606086828,"results":"195","hashOfConfig":"125"},{"size":10564,"mtime":1610694513523,"results":"196","hashOfConfig":"125"},{"size":2899,"mtime":1610799414244,"results":"197","hashOfConfig":"125"},{"size":1750,"mtime":1610777850595,"results":"198","hashOfConfig":"125"},{"size":5051,"mtime":1610774917770,"results":"199","hashOfConfig":"125"},{"size":9194,"mtime":1610690499048,"results":"200","hashOfConfig":"125"},{"size":1845,"mtime":1610682872752,"results":"201","hashOfConfig":"125"},{"size":1719,"mtime":1610792277484,"results":"202","hashOfConfig":"125"},{"size":1465,"mtime":1610943759499,"results":"203","hashOfConfig":"125"},{"size":2347,"mtime":1611243663722,"results":"204","hashOfConfig":"125"},{"size":2508,"mtime":1610974616081,"results":"205","hashOfConfig":"125"},{"size":2527,"mtime":1610976022005,"results":"206","hashOfConfig":"125"},{"size":3725,"mtime":1611024248036,"results":"207","hashOfConfig":"125"},{"size":3254,"mtime":1611070127239,"results":"208","hashOfConfig":"125"},{"size":3638,"mtime":1612376131698,"results":"209","hashOfConfig":"125"},{"size":3461,"mtime":1611071504095,"results":"210","hashOfConfig":"125"},{"size":2633,"mtime":1611238026684,"results":"211","hashOfConfig":"125"},{"size":2321,"mtime":1611238210657,"results":"212","hashOfConfig":"125"},{"size":1280,"mtime":1611406859219,"results":"213","hashOfConfig":"125"},{"size":2142,"mtime":1611250562909,"results":"214","hashOfConfig":"125"},{"size":2529,"mtime":1611381281380,"results":"215","hashOfConfig":"125"},{"size":1281,"mtime":1611406880835,"results":"216","hashOfConfig":"125"},{"size":2325,"mtime":1611244609669,"results":"217","hashOfConfig":"125"},{"size":3509,"mtime":1611406936519,"results":"218","hashOfConfig":"125"},{"size":2872,"mtime":1611382004128,"results":"219","hashOfConfig":"125"},{"size":3645,"mtime":1611406902973,"results":"220","hashOfConfig":"125"},{"size":2924,"mtime":1612322443637,"results":"221","hashOfConfig":"125"},{"size":2991,"mtime":1612322443118,"results":"222","hashOfConfig":"125"},{"size":2672,"mtime":1612322442920,"results":"223","hashOfConfig":"125"},{"size":12259,"mtime":1612375755003,"results":"224","hashOfConfig":"125"},{"size":2635,"mtime":1612323052389,"results":"225","hashOfConfig":"125"},{"size":3306,"mtime":1612374898836,"results":"226","hashOfConfig":"125"},{"size":969,"mtime":1612376011095,"results":"227","hashOfConfig":"125"},{"size":676,"mtime":1612407560295,"results":"228","hashOfConfig":"125"},{"size":1780,"mtime":1612412014787,"results":"229","hashOfConfig":"125"},{"size":4584,"mtime":1612452971555,"results":"230","hashOfConfig":"125"},{"size":4980,"mtime":1612452254085,"results":"231","hashOfConfig":"125"},{"size":2919,"mtime":1612418522416,"results":"232","hashOfConfig":"125"},{"size":7433,"mtime":1612452271913,"results":"233","hashOfConfig":"125"},{"size":8010,"mtime":1612452288141,"results":"234","hashOfConfig":"125"},{"size":3166,"mtime":1612452873144,"results":"235","hashOfConfig":"125"},{"size":5860,"mtime":1612452099980,"results":"236","hashOfConfig":"125"},{"size":2975,"mtime":1612452693470,"results":"237","hashOfConfig":"125"},{"size":2909,"mtime":1612453694572,"results":"238","hashOfConfig":"125"},{"size":3178,"mtime":1612453337077,"results":"239","hashOfConfig":"125"},{"size":4326,"mtime":1612453676429,"results":"240","hashOfConfig":"125"},{"size":8107,"mtime":1612453431385,"results":"241","hashOfConfig":"125"},{"size":669,"mtime":1612461065569,"results":"242","hashOfConfig":"125"},{"size":170,"mtime":1612529978720,"results":"243","hashOfConfig":"125"},{"size":1255,"mtime":1612524106308,"results":"244","hashOfConfig":"125"},{"size":1302,"mtime":1612521417971,"results":"245","hashOfConfig":"125"},{"size":1874,"mtime":1612530141925,"results":"246","hashOfConfig":"125"},{"size":1855,"mtime":1612539818302,"results":"247","hashOfConfig":"125"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},"rbgfi1",{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"250"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"250"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"250"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"250"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"250"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"250"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"250"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"250"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"250"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"250"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"250"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"250"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"250"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"250"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"250"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"250"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"250"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"250"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"250"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"250"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"250"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"250"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"250"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"250"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"250"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"250"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"250"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"250"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"250"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"250"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"250"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"250"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"250"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"250"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"250"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"250"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"250"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"250"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"250"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"250"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"250"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"250"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"250"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"250"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"250"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"250"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"250"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"250"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"250"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"250"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"250"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"250"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"250"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"250"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"250"},"/mnt/Fast Projects/Web/school_argon/src/index.js",[],["550","551"],"/mnt/Fast Projects/Web/school_argon/src/App.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/AuthRouter.js",["552"],"import React from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router\"; /*\r\nimport AdminDashboard from \"../pages/admin/AdminDashboard\";\r\nimport StudentDashboard from \"../pages/student/StudentDashboard\";\r\nimport TeacherDashboard from \"../pages/teacher/TeacherDashboard\";*/\r\nimport Login from \"../pages/Login\";\r\nimport AdminDashboard from \"../pages/admin/dashboard/Dashboard\";\r\n\r\nexport default function AuthRouter() {\r\n  const token = localStorage.getItem(\"token\", \"\");\r\n  const user_type = localStorage.getItem(\"user_type\", \"\");\r\n  const allowed_user_types = [\"admin\", \"student\", \"teacher\"];\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          {token != \"\" && allowed_user_types.includes(user_type) ? (\r\n            <Redirect to={\"/\" + user_type + \"/dashboard\"} />\r\n          ) : (\r\n            <Login />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/admin\">\r\n          <AdminDashboard />\r\n        </Route>\r\n        {/*\r\n        <Route path=\"/student\">\r\n          <StudentDashboard />\r\n        </Route>\r\n        <Route path=\"/teacher\">\r\n          <TeacherDashboard />\r\n        </Route>\r\n        */}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","/mnt/Fast Projects/Web/school_argon/src/pages/Login.js",[],"/mnt/Fast Projects/Web/school_argon/src/pages/admin/dashboard/Dashboard.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/useForm.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Controls.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/Sidebar.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/Call.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/TextInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/CSRF.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/Api.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/createLinks.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/AdminRouter.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/createRoutes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/Index.js",["553"],"import React, { useState } from \"react\";\n\nimport { Card, CardHeader, Container, Row } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport { Call } from \"services/API/Call\";\nimport Add from \"./Add\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport List from \"./List\";\nimport Query from \"./Query\";\n\nfunction Index(props) {\n  const {\n    title,\n    add_data = [],\n    add_initial_values = [],\n    CustomListComponent = undefined,\n    custom_list = undefined,\n    custom_update = undefined,\n    setCustomUpdate = undefined,\n    query_list = undefined,\n    custom_loading = undefined,\n    modal_size = \"sm\",\n    list_url,\n    list_head,\n    add = false,\n    edit = false,\n    remove = false,\n    edit_data = [],\n    query_title,\n    query_data,\n    indexed = true,\n    file = false,\n    ...other\n  } = props;\n  const [openAdd, setOpenAdd] = useState(false);\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [list, setList] = useState([]);\n  const [deleteInfo, setDeleteInfo] = useState(\"\");\n  const [editInfo, setEditInfo] = useState({});\n  const [update, setUpdate] = useState(true);\n  const [loading, setloading] = useState(false);\n  const [query, setquery] = useState(\"\");\n  const [query_tags, setQueryTags] = useState([]);\n  const [querying, setQuerying] = useState(false);\n\n  React.useEffect(() => {\n    if (custom_list === undefined) {\n      if (typeof query_list == \"object\") {\n        if (query.length > 0) {\n          setloading(true);\n          setQuerying(true);\n          Call({\n            method: \"get\",\n            url: list_url + query,\n          })\n            .then((res) => {\n              setList(res);\n              setQuerying(false);\n              setloading(false);\n            })\n            .catch((error) => {\n              setQuerying(false);\n              setloading(false);\n            });\n        }\n      } else {\n        setloading(true);\n        Call({\n          method: \"get\",\n          url: list_url,\n        })\n          .then((res) => {\n            setList(res);\n            setloading(false);\n          })\n          .catch((error) => {\n            setQuerying(false);\n            setloading(false);\n          });\n      }\n    } else {\n      if (setCustomUpdate !== undefined) setCustomUpdate(!custom_update);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [update, list_url]);\n  React.useEffect(() => {\n    if (Object.keys(editInfo).length > 0) setOpenEdit(true);\n    else setOpenEdit(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editInfo]);\n  return (\n    <>\n      <Container fluid>\n        {query_list != null && query_list.length > 0 ? (\n          <Row className=\"mt-5 mb-5\">\n            <div className=\"col\">\n              <Card\n                className=\"bg-default shadow\"\n                style={{ maxWidth: \"450px\", margin: \"auto\" }}\n              >\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">{query_title}</h3>\n                </CardHeader>\n                <CardBody>\n                  <Query\n                    query_list={query_list}\n                    initial_values={query_data}\n                    query={query}\n                    setquery={setquery}\n                    update={update}\n                    setUpdate={setUpdate}\n                    setQueryTags={setQueryTags}\n                    querying={querying}\n                  />\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        ) : null}\n\n        <Row className=\"mt-5 mb-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">{title}</h3>\n                {add ? (\n                  <Button\n                    color=\"primary\"\n                    style={{ display: \"flex\", alignItems: \"center\" }}\n                    onClick={() => setOpenAdd(!openAdd)}\n                  >\n                    Add New Record\n                    <i\n                      className=\"ni ni-fat-add\"\n                      style={{ fontSize: \"1.5rem\" }}\n                    />\n                  </Button>\n                ) : null}\n                <div\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    marginTop: \"1rem\",\n                  }}\n                >\n                  {query_tags.length > 0\n                    ? query_tags.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            maxWidth: \"250px\",\n                            marginRight: \"1rem\",\n                          }}\n                        >\n                          {element.title} : {element.value}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </CardHeader>\n              {CustomListComponent == undefined ? (\n                <List\n                  setOpenDelete={setOpenDelete}\n                  setOpenEdit={setOpenEdit}\n                  setDeleteInfo={setDeleteInfo}\n                  setEditInfo={setEditInfo}\n                  list={custom_list === undefined ? list : custom_list}\n                  list_head={list_head}\n                  edit={edit}\n                  remove={remove}\n                  loading={\n                    custom_loading !== undefined ? custom_loading : loading\n                  }\n                  indexed={indexed}\n                  {...other}\n                />\n              ) : (\n                <CustomListComponent\n                  list={list}\n                  list_head={list_head}\n                  query_tags={query_tags}\n                  loading={loading}\n                  url={list_url}\n                  setOpenDelete={setOpenDelete}\n                  setOpenEdit={setOpenEdit}\n                  setDeleteInfo={setDeleteInfo}\n                  setEditInfo={setEditInfo}\n                  update={update}\n                  setupdate={setUpdate}\n                  edit={edit}\n                  remove={remove}\n                  indexed={indexed}\n                  {...other}\n                />\n              )}\n            </Card>\n          </div>\n        </Row>\n        {edit && Object.keys(editInfo).length > 0 ? (\n          <Edit\n            open={openEdit}\n            setOpenEdit={setOpenEdit}\n            edit_values={editInfo}\n            update={update}\n            setUpdate={setUpdate}\n            edit_data={edit_data}\n            url={list_url}\n            file={file}\n            setEditInfo={setEditInfo}\n            modal_size={modal_size}\n          />\n        ) : null}\n        {add ? (\n          <Add\n            url={list_url}\n            open={openAdd}\n            setOpenAdd={setOpenAdd}\n            add_data={add_data}\n            initial_values={add_initial_values}\n            update={update}\n            setUpdate={setUpdate}\n            modal_size={modal_size}\n            file={file}\n          />\n        ) : null}\n\n        {remove ? (\n          <Delete\n            open={openDelete}\n            setOpenDelete={setOpenDelete}\n            id={deleteInfo}\n            update={update}\n            setUpdate={setUpdate}\n            url={list_url}\n          />\n        ) : null}\n      </Container>\n    </>\n  );\n}\n\nexport default Index;\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/Add.js",["554","555","556","557","558","559"],"/mnt/Fast Projects/Web/school_argon/src/components/crud/Delete.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/Edit.js",["560","561","562","563","564","565"],"/mnt/Fast Projects/Web/school_argon/src/components/crud/List.js",["566"],"import React from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function List(props) {\n  const {\n    setOpenEdit,\n    setOpenDelete,\n    setDeleteInfo,\n    setEditInfo,\n    list,\n    list_head,\n    edit = false,\n    remove = false,\n    loading,\n    indexed = true,\n  } = props;\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n          {remove ? <th scope=\"col\">Delete</th> : null}\n          {edit ? <th scope=\"col\">Edit</th> : null}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.type != \"image\" ? (\n                    element[item.identifier]\n                  ) : (\n                    <img\n                      src={\n                        process.env.REACT_APP_IMAGE_PATH +\n                        \"/\" +\n                        element[item.identifier]\n                      }\n                      alt=\"Gallery IMG\"\n                      style={{ width: \"80px\", objectFit: \"cover\" }}\n                    />\n                  )}\n                </th>\n              ))}\n\n              <DeleteButton\n                remove={remove}\n                id={element.id}\n                setOpenDelete={setOpenDelete}\n                setDeleteInfo={setDeleteInfo}\n              />\n              <EditButton\n                edit={edit}\n                element={element}\n                setOpenEdit={setOpenEdit}\n                setEditInfo={setEditInfo}\n              />\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\n  return remove ? (\n    <td>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          setOpenDelete(true);\n          setDeleteInfo(id);\n        }}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </td>\n  ) : null;\n}\n\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\n  const change = () => {\n    setEditInfo(element);\n  };\n  return edit ? (\n    <td>\n      <Button color=\"primary\" onClick={change}>\n        <i className=\"fas fa-pencil-alt\" />\n      </Button>\n    </td>\n  ) : null;\n}\n","/mnt/Fast Projects/Web/school_argon/src/routes/routes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/DatePicker.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Select.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/FileUploadInput.js",["567","568","569"],"import React, { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport FormFeedback from \"reactstrap/lib/FormFeedback\";\nimport Label from \"reactstrap/lib/Label\";\n\nexport default function TextInput(props) {\n  const {\n    name,\n    value,\n    placeholder,\n    invalid_msg = \"\",\n    valid_msg = \"\",\n    handleChange,\n    error,\n    multiple = false,\n    ...other\n  } = props;\n  const [images, setImages] = useState([]);\n  const showFile = (e) => {\n    let new_img = [];\n    if (e.target.files.length > 0)\n      Array.from(e.target.files).map((el) =>\n        new_img.push(URL.createObjectURL(el))\n      );\n    setImages(new_img);\n  };\n  React.useEffect(() => {\n    if (value.length == 0) setImages([]);\n  }, [value]);\n  return (\n    <FormGroup>\n      <small className=\"text-muted\">{placeholder}</small>\n      <div className=\"d-flex space-between flex-wrap\">\n        {images.length > 0\n          ? images.map((el, idx) => (\n              <img\n                src={el}\n                width=\"50\"\n                height={50}\n                alt=\"img\"\n                key={idx}\n                style={{ objectFit: \"cover\", margin: \"0.2rem\" }}\n              />\n            ))\n          : null}\n      </div>\n      <Input\n        type=\"file\"\n        id=\"exampleFile\"\n        name={name}\n        accept=\"image/*\"\n        onChange={(e) => {\n          if (multiple) {\n            handleChange({ target: { name, value: e.target.files } });\n          } else {\n            handleChange({ target: { name, value: e.target.files[0] } });\n          }\n          showFile(e);\n        }}\n        multiple={multiple}\n        {...other}\n      />\n      <small className=\"text-danger\">{error ? invalid_msg : valid_msg}</small>\n    </FormGroup>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/controls/InputField.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/CheckBoxArr.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Checkbox.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Religion.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Session.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/SchoolClass.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Department.js",["570"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function Department() {\n  const { class_list, session_list } = useContext(ClassDeptSessionContext);\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const add_data = [\n    {\n      placeholder: \"Department Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      required: true,\n      options: class_list,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      required: true,\n      options: session_list,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Department List\"\n        list_url=\"/settings/department\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Department\", identifier: \"name\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Session\", identifier: \"session\" },\n        ]}\n        query_data={{ class_id: -1, session_id: -1 }}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{ name: \"\", class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Subject.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Settings.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/PaymentCategory.js",["571"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function PaymentCategory() {\n  const [info_type, setInfoType] = React.useState(\"\");\n  return (\n    <div>\n      <Index\n        title=\"Payment Category List\"\n        list_url=\"/settings/payment_category\"\n        list_head={[\n          { title: \"Payment Category\", identifier: \"category_name\" },\n          { title: \"Info Type\", identifier: \"info_type\" },\n          { title: \"Info Options\", identifier: \"info_options\" },\n          { title: \"Default Amount\", identifier: \"default_amount\" },\n          { title: \"Recurring Type\", identifier: \"recurring_type\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                text: \"Selection\",\n                value: \"select\",\n              },\n              {\n                text: \"Text Area\",\n                value: \"textarea\",\n              },\n            ],\n            setState: setInfoType,\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: info_type == \"select\",\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"select\",\n            name: \"recurring_type\",\n            options: [\n              {\n                text: \"Monthly\",\n                value: \"Monthly\",\n              },\n              {\n                text: \"Occasion Based\",\n                value: \"Ocassion Based\",\n              },\n            ],\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                name: \"Selection\",\n                id: 1,\n              },\n              {\n                name: \"Text\",\n                id: 2,\n              },\n            ],\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: true,\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"number\",\n            name: \"recurring_type\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{\n          category_name: \"\",\n          info_type: \"\",\n          info_options: \"\",\n          default_amount: \"\",\n          recurring_type: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Permissions.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Users.js",["572"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Users() {\n  const [roles_list, setRolesList] = useState([]);\n  const user_type_list = [\n    { value: \"admin\", text: \"admin\" },\n    { value: \"teacher\", text: \"teacher\" },\n    { value: \"student\", text: \"student\" },\n  ];\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/role\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.name;\n        });\n        setRolesList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"User Type\",\n      type: \"select\",\n      name: \"user_type\",\n      options: [\n        { value: \"admin\", text: \"admin\" },\n        { value: \"teacher\", text: \"teacher\" },\n        { value: \"student\", text: \"student\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      required: true,\n    },\n    {\n      placeholder: \"User Role\",\n      type: \"select\",\n      name: \"role\",\n      options: roles_list,\n      required: true,\n    },\n    {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"User List\"\n        list_url=\"/settings/user\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"User Type\",\n            type: \"select\",\n            name: \"user_type\",\n            options: user_type_list,\n            required: true,\n          },\n        ]}\n        query_data={{ user_type: -1 }}\n        list_head={[\n          { title: \"Name\", identifier: \"name\" },\n          { title: \"Username\", identifier: \"username\" },\n          { title: \"User Type\", identifier: \"user_type\" },\n          { title: \"Roles\", identifier: \"role_name\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          name: \"\",\n          username: \"\",\n          user_type: \"\",\n          password: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Roles.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/GPA.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Grade.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/Library.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/ProductCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/Products.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/Accounts.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Exams.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/ExamCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/ValidateInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/Results.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultCrud.js",["573","574","575","576","577","578","579"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport ResultExamInput from \"./ResultExamInput\";\n\nexport default function ResultCrud() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n\n  const [exam_list, setExamList] = useState([]);\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => setExamList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n  const add_data = [\n    {\n      placeholder: \"Result Name\",\n      type: \"text\",\n      name: \"result_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      required: true,\n      options: session_list,\n      setState: setSession,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      required: true,\n      options: class_list,\n      setState: setClass,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      setState: setDepartment,\n      options: department_list.filter(\n        (element) =>\n          element.class_id == class_id && element.session_id == session_id\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Exams\",\n      type: \"custom\",\n      name: \"exams\",\n      options: exam_list,\n      required: true,\n      customInput: ResultExamInput,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Results List\"\n        list_url=\"/results/result\"\n        list_head={[\n          { title: \"Result name\", identifier: \"result_name\" },\n          { title: \"Exams\", identifier: \"exams\" },\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n        ]}\n        add={true}\n        remove={true}\n        add_data={add_data}\n        add_initial_values={{\n          result_name: \"\",\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          exams: [],\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/contexts/ClassDeptSessionContext.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/AssignSubject.js",["580","581"],"/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function AssignSubject() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [subject_list, setSubjectList] = useState([]);\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const [selected_query_session, setQuerySession] = useState(\"\");\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/subject\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"name\"] = element.subject_name;\n        });\n        setSubjectList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) => element.class_id == selected_class\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Subjects\",\n      type: \"checkboxarr\",\n      name: \"subjects\",\n      options: subject_list,\n      required: true,\n    },\n  ];\n  React.useEffect(() => {\n    console.log(selected_query_class);\n  }, [selected_query_class]);\n  return (\n    <div>\n      <Index\n        title=\"Assigned Subjects\"\n        list_url=\"/settings/assign_subject\"\n        query_title=\"Get Assigned Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setQuerySession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_query_class &&\n                element.session_id == selected_query_session\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{ class_id: -1, department_id: -1 }}\n        list_head={[\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n          { title: \"Subject\", identifier: \"name\" },\n        ]}\n        add={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ class_id: \"\", department_id: \"\", subjects: \"[]\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/Query.js",["582","583","584"],"/* eslint-disable eqeqeq */\nimport InputField from \"components/controls/InputField\";\nimport { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport { Form } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { ValidateInput } from \"./ValidateInput\";\n\nexport default function Query(props) {\n  const {\n    setquery,\n    query_list,\n    querying,\n    initial_values,\n    update,\n    setUpdate,\n    setQueryTags,\n  } = props;\n  const [calling, setCalling] = useState(false);\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(query_list).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      let query_to_set = \"?\";\n      let query_tag_to_set = [];\n      query_list.map((element, index) => {\n        if (values[element.name] != -1 && values[element.name] != \"\") {\n          query_to_set += element.name + \"=\" + values[element.name] + \"&\";\n          let value =\n            element.type == \"select\" &&\n            values[element.name] != -1 &&\n            element.options.length > 0\n              ? element.options.filter(\n                  (option) => option.value == values[element.name]\n                )[0][\"text\"]\n              : values[element.name];\n          let id =\n            element.type == \"select\" &&\n            values[element.name] != -1 &&\n            element.options.length > 0\n              ? element.options.filter(\n                  (option) => option.value == values[element.name]\n                )[0][\"value\"]\n              : values[element.name];\n          query_tag_to_set = [\n            ...query_tag_to_set,\n            { title: element.placeholder, value, id },\n          ];\n        }\n      });\n      setquery(query_to_set);\n      setQueryTags(query_tag_to_set);\n      setUpdate(!update);\n    } else setCalling(false);\n  };\n  return (\n    <>\n      <Form role=\"form\" onSubmit={handleSubmit}>\n        {query_list.length > 0\n          ? query_list.map((element, index) => (\n              <InputField\n                key={index}\n                type={element.type}\n                name={element.name}\n                placeholder={element.placeholder}\n                options={element.options}\n                value={values[element.name]}\n                error={errors[element.name]}\n                handleChange={handleInputChange}\n                setState={element.setState}\n                disabled={querying}\n              />\n            ))\n          : null}\n        <div className=\"text-center\" style={{ clear: \"left\" }}>\n          <Button\n            className=\"my-4\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={querying}\n          >\n            {querying ? (\n              <Spinner animation=\"border\" variant=\"dark\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsReport.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/Students.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsCrud.js",["585","586","587"],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/AssignClassStudent.js",["588","589","590","591"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function AccountsCrud() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const add_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      required: true,\n    },\n\n    {\n      placeholder: \"Student ID\",\n      type: \"text\",\n      name: \"student_id\",\n      required: true,\n    },\n    {\n      placeholder: \"Student Role\",\n      type: \"number\",\n      name: \"role\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student List\"\n        list_url=\"/students/student_assignment\"\n        list_head={[\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n        ]}\n        add={true}\n        remove={true}\n        add_data={add_data}\n        add_initial_values={{\n          student_id: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/Employees.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeCrud.js",["592","593","594","595","596"],"/mnt/Fast Projects/Web/school_argon/src/reportWebVitals.js",[],"/mnt/Fast Projects/Web/school_argon/src/serviceWorkerRegistration.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeTypes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeePosts.js",["597"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function EmployeePosts() {\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.id;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  });\n  const send_data = [\n    {\n      placeholder: \"Employee Type\",\n      type: \"select\",\n      name: \"employee_type_id\",\n      options: employee_type_list,\n      required: true,\n    },\n    {\n      placeholder: \"Employee Post\",\n      type: \"text\",\n      name: \"employee_post\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Post List\"\n        list_url=\"/employees/employee_post\"\n        list_head={[{ title: \"Employee Post\", identifier: \"employee_post\" }]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ employee_post: \"\", employee_type_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountBalance.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/ExtendedInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/StudentsExtendedInfo.js",["598"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function StudentsExtendedInfo() {\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Students Extended Info List\"\n        list_url=\"/settings/students_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/EmployeesExtendedInfo.js",["599"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function TeachersExtendedInfo() {\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Extended Info List\"\n        list_url=\"/settings/employees_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/Payment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentPaymentFees.js",["600"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function StudentPaymentFees() {\n  const [payment_category_list, setPaymentCategoryList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/payment_category?use=true\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.category_name;\n        });\n        setPaymentCategoryList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const add_data = [\n    {\n      placeholder: \"Student ID\",\n      type: \"text\",\n      name: \"student_id\",\n      required: true,\n    },\n    {\n      placeholder: \"Payment Category\",\n      type: \"select\",\n      name: \"payment_category_id\",\n      options: payment_category_list,\n      required: true,\n    },\n    {\n      placeholder: \"Default Fees\",\n      type: \"text\",\n      name: \"student_default_fees\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student Payment Fees List\"\n        list_url=\"/students/assign_fees\"\n        query_title=\"Query Student Payment Fees\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"std_id\",\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Student ID\", identifier: \"std_id\" },\n          { title: \"Student Name\", identifier: \"student_name\" },\n          { title: \"Payment\", identifier: \"payment_category\" },\n          { title: \"Default Fees\", identifier: \"student_default_fees\" },\n        ]}\n        query_data={{ std_id: \"\" }}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{ name: \"\", class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPayment.js",["601","602"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport StudentPaymentList from \"./StudentPaymentList\";\n\nexport default function StudentPayment() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        title=\"Student Payment\"\n        list_url=\"/students/student_assignment\"\n        CustomListComponent={StudentPaymentList}\n        query_title=\"Query Student List\"\n        list_head={[\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n        ]}\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPaymentList.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/AddStudentPayment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/PaymentInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePayment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentList.js",["603","604","605"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport DuePaymentModal from \"./DuePaymentModal\";\n\nexport default function DuePaymentList(props) {\n  const {\n    list,\n    list_head,\n    loading,\n    update,\n    setupdate,\n    remove,\n    edit,\n    setOpenEdit,\n    setOpenDelete,\n    setDeleteInfo,\n    setEditInfo,\n  } = props;\n  const [open, setopen] = useState(false);\n  const [values, setvalues] = useState([]);\n\n  const [query_data, setQueryData] = useState({});\n  const handleChange = (element) => {\n    if (values.filter((val) => val.id == element.id).length > 0) {\n      const new_val = values.filter((val) => val.id != element.id);\n      setvalues(new_val);\n    } else {\n      setvalues([\n        ...values,\n        {\n          id: element.id,\n          payment_id: element.payment_id,\n          payment_category: \"Due: \" + element.payment_category,\n          payment_info: element.payment_info,\n          payment_amount: element.fees,\n          paid_amount: \"\",\n        },\n      ]);\n    }\n    setQueryData({\n      student_identifier: element.student_identifier,\n      student_id: element.student_id,\n      student_name: element.student_name,\n      session_id: element.session_id,\n      session: element.session,\n    });\n  };\n  React.useEffect(() => {\n    setQueryData({});\n    setvalues([]);\n  }, [loading]);\n  return (\n    <>\n      {list.length > 0 && values.length > 0 ? (\n        <Button\n          color=\"warning\"\n          style={{\n            maxWidth: \"200px\",\n            marginLeft: \"1.5rem\",\n            marginBottom: \"1.5rem\",\n          }}\n          onClick={() => {\n            setopen(true);\n            console.log(values);\n          }}\n        >\n          Pay Due\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">#</th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            {remove ? <th scope=\"col\">Delete</th> : null}\n            {edit ? <th scope=\"col\">Edit</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <th>\n                  <InputField\n                    key={index}\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    name={index}\n                    checked={\n                      values.filter((val) => val.id == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(element);\n                    }}\n                  />\n                </th>\n                <th scope=\"row\">{index + 1}</th>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"normal\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <DeleteButton\n                  remove={remove}\n                  id={element.id}\n                  setOpenDelete={setOpenDelete}\n                  setDeleteInfo={setDeleteInfo}\n                />\n                <EditButton\n                  edit={edit}\n                  element={element}\n                  setOpenEdit={setOpenEdit}\n                  setEditInfo={setEditInfo}\n                />\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {list.length > 0 ? (\n        <DuePaymentModal\n          data={values}\n          setPaymentModal={setopen}\n          open={open}\n          query_data={query_data}\n          url=\"/payments/student_due/pay\"\n          setupdate={setupdate}\n          update={update}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\n  return remove ? (\n    <td>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          setOpenDelete(true);\n          setDeleteInfo(id);\n        }}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </td>\n  ) : null;\n}\n\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\n  const change = () => {\n    setEditInfo(element);\n  };\n  return edit ? (\n    <td>\n      <Button color=\"primary\" onClick={change}>\n        <i className=\"fas fa-pencil-alt\" />\n      </Button>\n    </td>\n  ) : null;\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentModal.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/PaymentInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReport.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReceipt.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReceiptList.js",["606","607","608","609","610","611","612"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function PaymentReceiptList(props) {\n  const {\n    setOpenDelete,\n    setDeleteInfo,\n    list,\n    list_head,\n    remove = false,\n    loading,\n    indexed = true,\n  } = props;\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n          <th>Receipt</th>\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? <th scope=\"row\">{index + 1}</th> : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {element[item.identifier]}\n                </th>\n              ))}\n\n              {console.log(element.id)}\n              {index == 0 || list[index - 1].id != element.id ? (\n                <td rowSpan={list.filter((val) => val.id == element.id).length}>\n                  <Button\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      window.open(\n                        \"/admin/print/receipt/\" + element.id,\n                        \"Print Receipt\",\n                        \"height=600,width=800\"\n                      );\n                      return false;\n                    }}\n                  >\n                    Receipt No: {element.id} <i className=\"fas fa-directions\" />\n                  </Button>\n                </td>\n              ) : null}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsDocuments.js",["613","614"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function StudentsDocuments() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        title=\"Student List\"\n        list_url=\"/students/student_assignment\"\n        list_head={[\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n        ]}\n        add_initial_values={{\n          student_id: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsPhonebook.js",["615","616"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function StudentsPhonebook() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        title=\"Student Phonebook\"\n        list_url=\"/students/student_assignment\"\n        list_head={[\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Primary Phone\",\n            identifier: \"primary_phone\",\n          },\n          {\n            title: \"Secondary Phone\",\n            identifier: \"secondary_phone\",\n          },\n        ]}\n        add_initial_values={{\n          student_id: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultExamInput.js",["617","618","619","620","621","622","623","624","625"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from \"react\";\nimport { FormGroup, InputGroupText } from \"reactstrap\";\nimport Input from \"reactstrap/lib/Input\";\nimport InputGroup from \"reactstrap/lib/InputGroup\";\nimport InputGroupAddon from \"reactstrap/lib/InputGroupAddon\";\n\nexport default function ResultExamInput(props) {\n  const {\n    name,\n    placeholder,\n    handleChange,\n    invalid_msg = \"\",\n    valid_msg = \"\",\n    options = [],\n    value = \"[]\",\n    error,\n  } = props;\n  const [checked_value, setCheckedValue] = useState([]);\n  const check = (id, percentage = 100, percentile = false) => {\n    if (percentile) {\n      let vals = [...checked_value];\n      vals.map((val, index) => {\n        if (val.exam_id == id) {\n          val[\"exam_percentage\"] = percentage;\n        }\n      });\n      setCheckedValue(vals);\n    } else {\n      const index = checked_value.filter((val) => val.exam_id == id);\n      if (index.length > 0) {\n        let new_val = checked_value.filter((val) => val.exam_id != id);\n        setCheckedValue(new_val);\n      } else\n        setCheckedValue([\n          ...checked_value,\n          { exam_id: id, exam_percentage: percentage },\n        ]);\n    }\n  };\n\n  React.useEffect(() => {\n    console.log(checked_value);\n    let event = {\n      target: { value: checked_value, name: name },\n    };\n    handleChange(event);\n  }, [checked_value]);\n\n  React.useEffect(() => {\n    setCheckedValue(value);\n  }, []);\n\n  return (\n    <>\n      <div className=\"text-dark\">{placeholder}:</div>\n      {options.map((element, index) => (\n        <div\n          className=\"bg-dark mb-3 p-3\"\n          style={{ borderRadius: 10 }}\n          key={index}\n        >\n          <div>\n            <div\n              className=\"custom-control custom-checkbox mb-3 mr-3\"\n              key={index}\n            >\n              <input\n                className=\"custom-control-input\"\n                id={index}\n                type=\"checkbox\"\n                onChange={() => check(element.id, 100)}\n                checked={\n                  value.filter((val) => val.exam_id == element.id).length > 0\n                }\n              />\n              <label\n                className=\"custom-control-label text-white\"\n                htmlFor={index}\n              >\n                {element.name}\n              </label>\n            </div>\n          </div>\n          <div>\n            <FormGroup>\n              <InputGroup className=\"mb-4\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i\n                      className=\" fas fa-percent\"\n                      style={{ fontSize: \"9px\" }}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"number\"\n                  name=\"percentage\"\n                  placeholder=\"Percentage (%)\"\n                  onChange={(e) => {\n                    check(element.id, e.target.value, true);\n                  }}\n                  disabled={\n                    value.filter((val) => val.exam_id == element.id).length == 0\n                  }\n                  value={\n                    value.filter((val) => val.exam_id == element.id).length > 0\n                      ? value.filter((val) => val.exam_id == element.id)[0][\n                          \"exam_percentage\"\n                        ]\n                      : \"\"\n                  }\n                  max={100}\n                  min={0}\n                />\n              </InputGroup>\n            </FormGroup>\n          </div>\n        </div>\n      ))}\n\n      <small className=\"text-danger\">{error ? invalid_msg : valid_msg}</small>\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultPublishing.js",["626","627","628","629","630","631","632","633"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport PublishList from \"./PublishList\";\n\nexport default function ResultPublishing() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [selected_session, setSelectedSession] = useState();\n\n  const [result_list, setResultList] = useState([]);\n\n  React.useEffect(() => {\n    if (\n      selected_class != -1 &&\n      selected_session != -1 &&\n      selected_department != -1\n    ) {\n      Call({\n        method: \"get\",\n        url:\n          \"results/result?result=true&session_id=\" +\n          selected_session +\n          \"&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department,\n      })\n        .then((res) => setResultList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Results List\"\n        list_url=\"/results/result_publishing\"\n        list_head={[\n          { title: \"Student ID\", identifier: \"student_identifier\" },\n          { title: \"Student name\", identifier: \"student_name\" },\n          { title: \"Result\", identifier: \"result_name\" },\n          { title: \"Result Status\", identifier: \"result_status\" },\n        ]}\n        CustomListComponent={PublishList}\n        add_initial_values={{\n          result_name: \"\",\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          exams: [],\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: true,\n            setState: setSelectedDepartment,\n          },\n          {\n            placeholder: \"Result\",\n            type: \"select\",\n            name: \"result_id\",\n            options: result_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session &&\n                element.department_id == selected_department\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/PublishList.js",["634","635","636","637","638"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport PublishModal from \"./PublishModal\";\n\nexport default function PublishList(props) {\n  const { list, list_head, loading, update, setupdate } = props;\n  const [open, setopen] = useState(false);\n  const [values, setvalues] = useState([]);\n  const [all_value, setAll] = useState([]);\n\n  const handleChange = (element) => {\n    const index = values.indexOf(element.id);\n    if (index != -1) {\n      let new_val = [...values];\n      new_val.splice(index, 1);\n      setvalues(new_val);\n    } else {\n      setvalues([...values, element.id]);\n    }\n  };\n  React.useEffect(() => {\n    setvalues([]);\n    let val = [];\n    if (list.length > 0) list.map((element) => val.push(element.id));\n    setAll(val);\n  }, [loading]);\n  return (\n    <>\n      {list.length > 0 && values.length > 0 ? (\n        <Button\n          color=\"warning\"\n          style={{\n            maxWidth: \"200px\",\n            marginLeft: \"1.5rem\",\n            marginBottom: \"1.5rem\",\n            fontSize: \"12px\",\n          }}\n          onClick={() => {\n            setopen(true);\n          }}\n        >\n          Publish/Unpublish Result\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">\n              <InputField\n                type=\"checkbox\"\n                placeholder=\"\"\n                name=\"all\"\n                checked={all_value.sort() == values.sort()}\n                handleChange={() => {\n                  if (values == all_value) setvalues([]);\n                  else setvalues(all_value);\n                }}\n              />\n            </th>\n            <th scope=\"col\">#</th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <th>\n                  <InputField\n                    key={index}\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    name={index}\n                    checked={values.indexOf(element.id) != -1}\n                    handleChange={() => {\n                      handleChange(element);\n                    }}\n                  />\n                </th>\n                <th scope=\"row\">{index + 1}</th>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"normal\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {list.length > 0 ? (\n        <PublishModal\n          data={values}\n          setopen={setopen}\n          open={open}\n          url=\"/results/result_publishing\"\n          setupdate={setupdate}\n          update={update}\n        />\n      ) : null}\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/PublishModal.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/StudentsAttendanceReportDay.js",["639","640"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport AttendanceListDay from \"./AttendanceListDay\";\nexport default function StudentsAttendanceReportDay() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n  return (\n    <div>\n      <Index\n        title=\"Student Phonebook\"\n        list_url=\"/students/student_attendance\"\n        list_head={[\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Attendance\",\n            identifier: \"attendance_status\",\n          },\n          {\n            title: \"Access Time\",\n            identifier: \"access_time\",\n          },\n        ]}\n        CustomListComponent={AttendanceListDay}\n        query_title=\"Query Student Attendance\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n          date: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceListDay.js",["641","642","643"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function AttendanceList(props) {\n  const { query_tags, list, list_head, loading, indexed = true } = props;\n  const date =\n    query_tags.length > 0\n      ? query_tags.filter((element) => element.title == \"Date\")[0][\"value\"]\n      : \"\";\n  const [updated_list, setUpdatedList] = useState([]);\n  React.useEffect(() => {\n    if (list.length > 0) {\n      var merged = [];\n\n      list.forEach(function (item) {\n        var idx;\n        var found = merged.some(function (el, i) {\n          idx = el.student_id === item.student_id ? i : null;\n          return el.student_id === item.student_id;\n        });\n        if (!found) {\n          merged.push(item);\n        } else if (idx !== null) {\n          merged[idx][\"access_time\"] += \"\\n\" + item.access_time;\n        }\n      });\n      setUpdatedList(merged);\n    }\n  }, [list]);\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          updated_list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.identifier != \"date\" ? element[item.identifier] : date}\n                </th>\n              ))}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceListMonth.js",["644","645","646"],"import React, { useState } from \"react\";\n\nimport EmployeeAttendanceTable from \"./StudentsAttendanceTable\";\n\nconst months = {\n  January: 1,\n  February: 2,\n  March: 3,\n  April: 4,\n  May: 5,\n  June: 6,\n  July: 7,\n  August: 8,\n  September: 9,\n  October: 10,\n  November: 11,\n  December: 12,\n};\nexport default function AttendanceList(props) {\n  const { query_tags, list, loading, indexed = true } = props;\n  const [head, sethead] = useState([]);\n  const [slice_length, setSliceLength] = useState(5);\n  const [year, setyear] = useState(\"\");\n  const [month, setmonth] = useState(\"\");\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      setyear(query_tags.filter((el) => el.title == \"Year\")[0].value);\n      setmonth(months[query_tags.filter((el) => el.title == \"Month\")[0].value]);\n    }\n    sethead(Object.keys(list));\n  }, [list, query_tags]);\n  return (\n    <>\n      {[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\n        <EmployeeAttendanceTable\n          key={i}\n          list={list}\n          top={head.slice(\n            (i + 1) * slice_length - slice_length,\n            (i + 1) * slice_length\n          )}\n          loading={loading}\n          year={year}\n          month={month}\n          indexed={indexed}\n        />\n      ))}\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceReportDay.js",["647"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport AttendanceListDay from \"./AttendanceListDay\";\nexport default function AttendanceReportDay() {\n  const [employee_type_list, setEmployeeTypelist] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypelist(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div>\n      <Index\n        title=\"Employee Attendance Day\"\n        list_url=\"/employees/employee_attendance\"\n        list_head={[\n          {\n            title: \"Employee ID\",\n            identifier: \"employee_id\",\n          },\n          {\n            title: \"Employee Type\",\n            identifier: \"employee_type\",\n          },\n          {\n            title: \"Employee Name\",\n            identifier: \"employee_name\",\n          },\n          {\n            title: \"Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Attendance\",\n            identifier: \"attendance_status\",\n          },\n          {\n            title: \"Access Time\",\n            identifier: \"access_time\",\n          },\n        ]}\n        CustomListComponent={AttendanceListDay}\n        query_title=\"Query Employee Attendance\"\n        query_list={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n        ]}\n        query_data={{\n          employee_type: -1,\n          employee_id: \"\",\n          date: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceReportMonth.js",["648"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport AttendanceListMonth from \"./AttendanceListMonth\";\nexport default function AttendanceReportMonth() {\n  const { session_list } = useContext(ClassDeptSessionContext);\n  const [employee_type_list, setEmployeeTypelist] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypelist(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div className=\"employee_attendance\">\n      <Index\n        title=\"Employee Attendance Month\"\n        list_url=\"/employees/employee_monthly_attendance\"\n        CustomListComponent={AttendanceListMonth}\n        query_title=\"Query Employee Attendance\"\n        query_list={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Year\",\n            type: \"select\",\n            name: \"year\",\n            options: session_list,\n            required: true,\n          },\n          {\n            placeholder: \"Month\",\n            type: \"select\",\n            name: \"month\",\n            options: [\n              { text: \"January\", value: \"01\" },\n              { text: \"February\", value: \"02\" },\n              { text: \"March\", value: \"03\" },\n              { text: \"April\", value: \"04\" },\n              { text: \"May\", value: \"05\" },\n              { text: \"June\", value: \"06\" },\n              { text: \"July\", value: \"07\" },\n              { text: \"August\", value: \"08\" },\n              { text: \"September\", value: \"09\" },\n              { text: \"October\", value: \"10\" },\n              { text: \"November\", value: \"11\" },\n              { text: \"December\", value: \"12\" },\n            ],\n            required: true,\n          },\n        ]}\n        query_data={{\n          employee_type: -1,\n          employee_id: \"\",\n          year: -1,\n          month: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceListMonth.js",["649","650","651"],"import React, { useState } from \"react\";\n\nimport EmployeeAttendanceTable from \"./EmployeeAttendanceTable\";\n\nconst months = {\n  January: 1,\n  February: 2,\n  March: 3,\n  April: 4,\n  May: 5,\n  June: 6,\n  July: 7,\n  August: 8,\n  September: 9,\n  October: 10,\n  November: 11,\n  December: 12,\n};\nexport default function AttendanceList(props) {\n  const { query_tags, list, loading, indexed = true } = props;\n  const [head, sethead] = useState([]);\n  const [slice_length, setSliceLength] = useState(5);\n  const [year, setyear] = useState(\"\");\n  const [month, setmonth] = useState(\"\");\n\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      setyear(query_tags.filter((el) => el.title == \"Year\")[0].value);\n      setmonth(months[query_tags.filter((el) => el.title == \"Month\")[0].value]);\n    }\n    sethead(Object.keys(list));\n  }, [list, query_tags]);\n  return (\n    <>\n      {[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\n        <EmployeeAttendanceTable\n          key={i}\n          list={list}\n          top={head.slice(\n            (i + 1) * slice_length - slice_length,\n            (i + 1) * slice_length\n          )}\n          loading={loading}\n          year={year}\n          month={month}\n          indexed={indexed}\n        />\n      ))}\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/AttendanceListDay.js",["652","653","654"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function AttendanceList(props) {\n  const { query_tags, list, list_head, loading, indexed = true } = props;\n  const date =\n    query_tags.length > 0\n      ? query_tags.filter((element) => element.title == \"Date\")[0][\"value\"]\n      : \"\";\n  const [updated_list, setUpdatedList] = useState([]);\n  React.useEffect(() => {\n    if (list.length > 0) {\n      var merged = [];\n\n      list.forEach(function (item) {\n        var idx;\n        var found = merged.some(function (el, i) {\n          idx = el.employee_id === item.employee_id ? i : null;\n          return el.employee_id === item.employee_id;\n        });\n        if (!found) {\n          merged.push(item);\n        } else if (idx !== null) {\n          merged[idx][\"access_time\"] += \"\\n\" + item.access_time;\n        }\n      });\n      setUpdatedList(merged);\n    }\n  }, [list]);\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          updated_list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.identifier != \"date\" ? element[item.identifier] : date}\n                </th>\n              ))}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/attendance/EmployeeAttendanceTable.js",["655","656","657","658","659"],"import React, { useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"./style.css\";\nimport uuid from \"react-uuid\";\nexport default function EmployeeAttendanceTable(props) {\n  const { list, loading, top, indexed = true, year, month } = props;\n  const [days, setDays] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    month = month < 10 ? \"0\" + month : month;\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n  }, [list]);\n  return (\n    <Table\n      className=\"align-items-center table-light table-flush\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\" rowSpan=\"2\" style={{ width: \"75px\" }}>\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Employees\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th key={uuid()} rowSpan=\"2\">\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n              <small>Present: {Object.keys(list[item]).length}</small>\n              <br />\n              <small>\n                Absent: {days.length - Object.keys(list[item]).length}\n              </small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr>\n              <td style={{ width: \"75px\" }}>{item}</td>\n              {top.map((element, index) => (\n                <td>\n                  <small\n                    className=\"text-muted\"\n                    style={{ fontSize: \"8px\", lineHeight: \"0.1\" }}\n                  >\n                    {item}\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : list[element][item] == \"Present\" ? (\n                    <>\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/AttendanceReportMonth.js",["660","661"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport AttendanceListMonth from \"./AttendanceListMonth\";\nexport default function AttendanceReportMonth() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n  return (\n    <div className=\"employee_attendance\">\n      <Index\n        title=\"Students Attendance Month\"\n        list_url=\"/students/student_monthly_attendance\"\n        CustomListComponent={AttendanceListMonth}\n        query_title=\"Query Student Attendance\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Year\",\n            type: \"select\",\n            name: \"year\",\n            options: session_list,\n            required: true,\n          },\n          {\n            placeholder: \"Month\",\n            type: \"select\",\n            name: \"month\",\n            options: [\n              { text: \"January\", value: \"01\" },\n              { text: \"February\", value: \"02\" },\n              { text: \"March\", value: \"03\" },\n              { text: \"April\", value: \"04\" },\n              { text: \"May\", value: \"05\" },\n              { text: \"June\", value: \"06\" },\n              { text: \"July\", value: \"07\" },\n              { text: \"August\", value: \"08\" },\n              { text: \"September\", value: \"09\" },\n              { text: \"October\", value: \"10\" },\n              { text: \"November\", value: \"11\" },\n              { text: \"December\", value: \"12\" },\n            ],\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n          year: -1,\n          month: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/attendance/StudentsAttendanceTable.js",["662","663","664","665","666"],"import React, { useContext, useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"./style.css\";\nimport uuid from \"react-uuid\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nexport default function StudentsAttendanceTable(props) {\n  const { session_list } = useContext(ClassDeptSessionContext);\n  const { list, loading, top, year, month } = props;\n  const [days, setDays] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    month = month < 10 ? \"0\" + month : month;\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n  }, [list]);\n  return (\n    <Table\n      className=\"align-items-center table-light table-flush\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\" rowSpan=\"2\" style={{ width: \"75px\" }}>\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Employees\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th key={uuid()} rowSpan=\"2\">\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n              <small>Present: {Object.keys(list[item]).length}</small>\n              <br />\n              <small>\n                Absent: {days.length - Object.keys(list[item]).length}\n              </small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr>\n              <td style={{ width: \"75px\" }}>{item}</td>\n              {top.map((element, index) => (\n                <td>\n                  <small\n                    className=\"text-muted\"\n                    style={{ fontSize: \"8px\", lineHeight: \"0.1\" }}\n                  >\n                    {item}\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : list[element][item] == \"Present\" ? (\n                    <>\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/Marks.js",["667"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport MarkList from \"./MarkList\";\n\nexport default function Marks() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Assignment\"\n        list_url=\"/exams/exam_subjects\"\n        list_head={[\n          { title: \"Subject\", identifier: \"subject\" },\n          { title: \"Exam\", identifier: \"exam\" },\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n        ]}\n        CustomListComponent={MarkList}\n        query_title=\"Query Exam Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n      />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkList.js",["668"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport MarkAssignModal from \"./MarkAssignModal\";\n\nexport default function MarkList(props) {\n  const { list, list_head, loading, indexed = true, query_tags } = props;\n  const [open, setopen] = useState(false);\n  const [data, setdata] = useState({});\n  const [tags, settags] = useState({});\n\n  return (\n    <>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            {indexed ? <th scope=\"col\">#</th> : null}\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            <th>Assign Mark</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                {indexed ? (\n                  <th scope=\"row\" key={index}>\n                    {index + 1}\n                  </th>\n                ) : null}\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <th>\n                  <Button\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={() => {\n                      setdata({\n                        session_id: element.session_id,\n                        class_id: element.class_id,\n                        exam_id: element.exam_id,\n                        department_id: element.department_id,\n                        subject_id: element.subject_id,\n                      });\n                      settags([\n                        { title: \"Class\", value: element.class },\n                        { title: \"Department\", value: element.department },\n                        { title: \"Session\", value: element.session },\n                        { title: \"Exam\", value: element.exam },\n                        { title: \"Subject\", value: element.subject },\n                      ]);\n                      setopen(true);\n                    }}\n                  >\n                    Assign Marks\n                  </Button>\n                </th>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <MarkAssignModal open={open} setopen={setopen} data={data} tags={tags} />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkAssignModal.js",["669","670","671","672","673","674","675","676","677","678"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nimport MarkAssignment from \"./MarkAssignment\";\nexport default function MarkAssignModal(props) {\n  const { url, open, setopen, data, update, setUpdate, tags } = props;\n\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"lg\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Add\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0  p-0\">\n            <CardHeader className=\"bg-transparent p-3\">\n              {tags.length > 0\n                ? tags.map((el, idx) => (\n                    <Button color=\"success\" size=\"sm\" key={idx}>\n                      {el.title} : {el.value}\n                    </Button>\n                  ))\n                : null}\n            </CardHeader>\n            <CardBody className=\"py-lg-4 pl-0  pr-0\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <MarkAssignment data={data} />\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/MarkAssignment/MarkAssignment.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697"],"import InputField from \"components/controls/InputField\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Form from \"reactstrap/lib/Form\";\nimport Input from \"reactstrap/lib/Input\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Toast from \"reactstrap/lib/Toast\";\nimport ToastBody from \"reactstrap/lib/ToastBody\";\nimport ToastHeader from \"reactstrap/lib/ToastHeader\";\nimport { Call } from \"services/API/Call\";\n\nexport default function MarkAssignment({ data }) {\n  const { exam_id, session_id, department_id, class_id, subject_id } = data;\n  const [calling, setCalling] = useState(true);\n  const [student_list, setStudentList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [fail, setFail] = useState(false);\n  const deleteField = (idx) => {\n    let new_fields = [...mark_fields];\n    let new_data = [...form_data];\n    new_fields.splice(idx, 1);\n    new_data.map((el) => el.marks.splice(idx, 1));\n    setMarkFields(new_fields);\n    setFormData(new_data);\n  };\n  const validate = () => {\n    let status = false;\n    status = mark_fields.every((el) => {\n      return el.mark_name != \"\" && el.total_mark != \"\";\n    });\n    if (!status) return false;\n    status = form_data.every((el) =>\n      el.marks.length > 0\n        ? el.marks.every((element) => {\n            return (\n              element.title != \"\" &&\n              element.title != null &&\n              element.value != \"\" &&\n              element.value != null\n            );\n          })\n        : false\n    );\n    if (!status) return false;\n    return true;\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setCalling(true);\n      Call({\n        method: \"post\",\n        url: \"exams/marks\",\n        data: {\n          mark_structure_id,\n          exam_id,\n          session_id,\n          department_id,\n          class_id,\n          subject_id,\n          total_exam_mark,\n          mark_data: form_data,\n          mark_structure: mark_fields,\n        },\n      })\n        .then((res) => {\n          setCalling(false);\n          setShow(true);\n          setTimeout(() => setShow(false), 1500);\n          console.log(res);\n        })\n        .catch((err) => {\n          setCalling(false);\n          setFail(true);\n          setTimeout(() => setFail(false), 1500);\n          console.log(err);\n        });\n    }\n  };\n  const [form_data, setFormData] = useState([]);\n  const [mark_fields, setMarkFields] = useState([]);\n  const [mark_structure_id, setMarkStructureID] = useState(\"\");\n  const [total_exam_mark, setTotalExamMark] = useState();\n  React.useEffect(() => {\n    Call({\n      method: \"get\",\n      url:\n        \"exams/mark_structure?exam_id=\" + exam_id + \"&subject_id=\" + subject_id,\n    })\n      .then((res) => {\n        if (res[0] != null) {\n          const structure = JSON.parse(res[0].structure);\n\n          let t_xm_mrk = res.reduce(\n            (cb, val) =>\n              (cb =\n                parseInt(cb) +\n                parseInt(val.total_mark != \"\" ? val.total_mark : 0)),\n            0\n          );\n          setTotalExamMark(t_xm_mrk);\n          setMarkStructureID(res[0].id);\n          setMarkFields(\n            structure != undefined || structure != null ? structure : []\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n    Call({\n      method: \"get\",\n      url:\n        \"exams/student_marks?exam_id=\" +\n        exam_id +\n        \"&session_id=\" +\n        session_id +\n        \"&department_id=\" +\n        department_id +\n        \"&class_id=\" +\n        class_id +\n        \"&subject_id=\" +\n        subject_id,\n    })\n      .then((res) => {\n        let new_form_data = [];\n        res.map((el, idx) => {\n          const t_mark = JSON.parse(el.marks == null ? \"[]\" : el.marks).reduce(\n            (cb, val) =>\n              (cb = parseInt(cb) + parseInt(val.value != \"\" ? val.value : 0)),\n            0\n          );\n          new_form_data.push({\n            id: el.id,\n            student_id: el.student_id,\n            exam_id: el.exam_id,\n            subject_id: el.subject_id,\n            subject_type: false,\n            absent: false,\n            total_mark: t_mark,\n            marks: JSON.parse(el.marks == null ? \"[]\" : el.marks),\n          });\n        });\n        setFormData(new_form_data);\n        setStudentList(res);\n\n        setCalling(false);\n      })\n      .catch((err) => {\n        setCalling(false);\n        console.log(err);\n      });\n  }, []);\n  return (\n    <Form role=\"form\" onSubmit={handleSubmit}>\n      <Table className=\"align-items-center\" responsive>\n        <thead className=\"thead-light\">\n          <tr>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              #\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              ID\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Name\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Optional\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Absent\n            </th>\n            <th\n              colSpan={mark_fields.length + 1}\n              className=\"text-center\"\n              style={{ padding: \"0.1rem\" }}\n            >\n              Marks (Total Mark :{\" \"}\n              {mark_fields.reduce(\n                (cb, val) =>\n                  (cb =\n                    parseInt(cb) +\n                    parseInt(val.total_mark != \"\" ? val.total_mark : 0)),\n                0\n              )}\n              )\n            </th>\n          </tr>\n          <tr>\n            {mark_fields.length > 0\n              ? mark_fields.map((el, idx) => (\n                  <th key={idx} style={{ padding: \"0.1rem\" }}>\n                    <Button\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={() => deleteField(idx)}\n                    >\n                      <i className=\"fas fa-times\" />\n                    </Button>\n                    <InputField\n                      style={{ minWidth: \"110px\" }}\n                      type=\"text\"\n                      placeholder=\"Mark Name\"\n                      handleChange={(e) => {\n                        let new_val = [...mark_fields];\n                        new_val[idx].mark_name = e.target.value;\n                        let new_data = [...form_data];\n                        new_data.map(\n                          (element, index) =>\n                            (element[\"marks\"][idx].title = e.target.value)\n                        );\n                        setFormData(new_data);\n                        setMarkFields(new_val);\n                      }}\n                      value={mark_fields[idx].mark_name}\n                      error={mark_fields[idx].mark_name == \"\"}\n                      disabled={calling}\n                    />\n                    <InputField\n                      style={{ minWidth: \"50px\" }}\n                      type=\"text\"\n                      placeholder=\"Total Mark\"\n                      handleChange={(e) => {\n                        let new_val = [...mark_fields];\n                        new_val[idx].total_mark = e.target.value;\n                        let t_xm_mrk = mark_fields.reduce(\n                          (cb, val) =>\n                            (cb =\n                              parseInt(cb) +\n                              parseInt(\n                                val.total_mark != \"\" ? val.total_mark : 0\n                              )),\n                          0\n                        );\n                        setTotalExamMark(t_xm_mrk);\n                        setMarkFields(new_val);\n                      }}\n                      value={mark_fields[idx].total_mark}\n                      error={mark_fields[idx].total_mark == \"\"}\n                      disabled={calling}\n                    />\n                  </th>\n                ))\n              : null}\n            <th className=\"text-center\">\n              <Button\n                color=\"info\"\n                size=\"sm\"\n                onClick={() => {\n                  setMarkFields([\n                    ...mark_fields,\n                    { mark_name: \"\", total_mark: \"\" },\n                  ]);\n                  let new_data = [...form_data];\n                  new_data.map((el, idx) => {\n                    el[\"marks\"] = [\n                      ...el[\"marks\"],\n                      {\n                        title: \"\",\n                        value: \"0\",\n                      },\n                    ];\n                  });\n                  setFormData(new_data);\n                }}\n                disabled={calling}\n              >\n                <i className=\"fas fa-plus\" />\n              </Button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {student_list.length > 0\n            ? student_list.map((el, idx) => (\n                <tr key={idx}>\n                  <td>{idx + 1}</td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    {el[\"student_identifier\"]}\n                  </td>\n                  <td style={{ padding: \"0.1rem\" }}>{el[\"student_name\"]}</td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    <InputField\n                      type=\"checkbox\"\n                      checked={form_data[idx].subject_type}\n                      handleChange={() => {\n                        let new_data = [...form_data];\n                        new_data[idx].subject_type = !new_data[idx]\n                          .subject_type;\n                        setFormData(new_data);\n                      }}\n                    />\n                  </td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    <InputField\n                      type=\"checkbox\"\n                      checked={form_data[idx].absent}\n                      handleChange={() => {\n                        let new_data = [...form_data];\n                        new_data[idx].absent = !new_data[idx].absent;\n                        setFormData(new_data);\n                      }}\n                    />\n                  </td>\n\n                  {mark_fields.map((element, index) => (\n                    <td key={index} style={{ padding: \"0.1rem\" }}>\n                      <InputField\n                        style={{ minWidth: \"80px\" }}\n                        type=\"text\"\n                        placeholder={mark_fields[index].mark_name}\n                        handleChange={(e) => {\n                          let new_data = [...form_data];\n                          new_data[idx][\"marks\"][index].value = e.target.value;\n                          new_data[idx].total_mark = new_data[idx][\n                            \"marks\"\n                          ].reduce(\n                            (cb, val) =>\n                              (cb =\n                                parseInt(cb) +\n                                parseInt(val.value != \"\" ? val.value : 0)),\n                            0\n                          );\n                          setFormData(new_data);\n                        }}\n                        value={form_data[idx][\"marks\"][index].value}\n                        error={form_data[idx][\"marks\"][index].value === \"\"}\n                        disabled={calling}\n                      />\n                    </td>\n                  ))}\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <div style={{ width: \"100%\", padding: \"1.5rem\", textAlign: \"center\" }}>\n        <Button color=\"primary\" type=\"submit\" disabled={calling}>\n          {calling ? <Spinner animation=\"border\" variant=\"dark\" /> : \"Submit\"}\n        </Button>\n      </div>\n      <Alert\n        color=\"success\"\n        isOpen={show}\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\n        fade={true}\n      >\n        Successfully Assigned Marks!\n      </Alert>\n      <Alert\n        color=\"danger\"\n        isOpen={fail}\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\n        fade={true}\n      >\n        Failed To Assign Marks!\n      </Alert>\n    </Form>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/Tabulation.js",["698"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport TabulationList from \"./TabulationList\";\n\nexport default function Tabulation() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Tabulation Sheet\"\n        list_url=\"/exams/marks\"\n        CustomListComponent={TabulationList}\n        query_title=\"Query Exam Marks\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n      />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/TabulationList.js",["699","700","701","702","703","704","705","706"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport TableRow from \"./TableRow\";\n\nexport default function TabulationList(props) {\n  const { list = [], list_head, loading, indexed = true, query_tags } = props;\n  const [open, setopen] = useState(false);\n  const [data, setdata] = useState({});\n  const [student_list, setStudentList] = useState([]);\n  const [subject_cols, setSubjectCols] = useState([]);\n  const groupBy = (items, key) =>\n    items.reduce((result, item) => {\n      item[\"marks\"] =\n        item[\"marks\"] != null && typeof item[\"marks\"] == \"string\"\n          ? JSON.parse(item[\"marks\"])\n          : [];\n      return {\n        ...result,\n        [item[key]]: [...(result[item[key]] || []), item],\n      };\n    }, {});\n\n  React.useEffect(() => {\n    let exam_id =\n      query_tags.length > 0\n        ? query_tags.filter((el) => el.title == \"Exams\")[0][\"id\"]\n        : null;\n    if (exam_id != null)\n      Call({\n        method: \"get\",\n        url: \"exams/mark_structure?exam=1&exam_id=\" + exam_id,\n      })\n        .then((res) => {\n          let new_list = groupBy(list, \"student_identifier\");\n          setStudentList(new_list);\n          setSubjectCols(res);\n        })\n        .catch((err) => console.log(err));\n  }, [query_tags, list]);\n  return (\n    <>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th rowSpan=\"3\">ID</th>\n            <th rowSpan=\"3\">Student Name</th>\n          </tr>\n          <tr>\n            {subject_cols.map((el, index) => (\n              <th\n                colSpan={\n                  el.structure != null ? JSON.parse(el.structure).length : 1\n                }\n                style={{ textAlign: \"center\" }}\n                key={index}\n              >\n                {el.subject_name}\n              </th>\n            ))}\n          </tr>\n          <tr>\n            {subject_cols.map((el, idx) =>\n              el.structure != null ? (\n                JSON.parse(el.structure).map((element, index) => (\n                  <th\n                    style={{ textAlign: \"center\", fontSize: \"7px\" }}\n                    key={uuid()}\n                  >\n                    {element.mark_name}\n                  </th>\n                ))\n              ) : (\n                <th key={uuid()}> </th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : Object.values(student_list).length > 0 ? (\n            Object.values(student_list).map((element, index) => {\n              return (\n                <TableRow key={index} info={element} subjects={subject_cols} />\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Tabulation/TableRow.js",["707","708"],"import React from \"react\";\nimport uuid from \"react-uuid\";\n\nexport default function TableRow(props) {\n  const { info, subjects } = props;\n  console.log(\"now\");\n  const subjectMark = (com_subject_id) => {\n    return info.filter((element) => element.subject_id == com_subject_id);\n  };\n  return (\n    <tr>\n      <td>{info[0].student_identifier}</td>\n      <td>{info[0].student_name}</td>\n      {subjects.map((el, idx) =>\n        subjectMark(el.subject_id).length > 0 ? (\n          subjectMark(el.subject_id)[0].marks != undefined ? (\n            subjectMark(el.subject_id)[0].marks.map((element) => (\n              <th key={uuid()} className=\"text-center\">\n                {element.value}\n              </th>\n            ))\n          ) : (\n            <th key={uuid()} className=\"text-center\">\n              A\n            </th>\n          )\n        ) : (\n          <th key={uuid()} className=\"text-center\">\n            A\n          </th>\n        )\n      )}\n    </tr>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCategoryCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/FindBooks.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/Books.js",["709","710","711","712","713","714"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Index from \"components/crud/Index\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport CustomBookList from \"./CustomBookList\";\nimport IssuedList from \"./IssuedList\";\n\nexport default function Books(props) {\n  const { update, loading, indexed = true, query_tags } = props;\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      console.log(query_tags);\n      let id = query_tags.filter(\n        (el) => el.title == \"Student ID\" || el.title == \"Student\"\n      )[0].value;\n      id = id.split(\" \");\n      id = id[0];\n      Call({ method: \"get\", url: \"students/student?student_id=\" + id })\n        .then((res) => {\n          if (res.length > 0) setStudentInfo(res[0]);\n          else setStudentInfo({});\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [query_tags, update]);\n  return (\n    <>\n      {Object.values(student_info).length > 0 ? (\n        <>\n          <div className=\"mb-3 ml-3\">\n            <p className=\"text-white\">User Info: </p>\n            <div className=\"d-flex space-between flex-wrap\">\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student Name: {student_info.student_name}\n              </Button>\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student ID: {student_info.student_id}\n              </Button>\n            </div>\n          </div>\n          {query_tags.length > 0 ? (\n            <>\n              <Index\n                title=\"Issued Books List\"\n                list_url={`/library/issue_books?book_issued_to_id=${student_info.id}`}\n                CustomListComponent={IssuedList}\n                list_head={[\n                  {\n                    title: \"Book\",\n                    identifier: \"book_name\",\n                  },\n                  {\n                    title: \"Issued Date\",\n                    identifier: \"book_issued_date\",\n                  },\n                  {\n                    title: \"To Return Date\",\n                    identifier: \"book_return_date\",\n                  },\n                  {\n                    title: \"To Return Date\",\n                    identifier: \"book_return_date\",\n                  },\n                  {\n                    title: \"Status\",\n                    identifier: \"issue_status\",\n                  },\n                ]}\n                book_issuer_data={{\n                  book_issuer_type: \"student\",\n                  book_issued_to_id: student_info.student_id,\n                  book_issued_to_name: student_info.student_name,\n                }}\n              />\n              <Index\n                title=\"Books List\"\n                list_url=\"/library/books?all=true\"\n                CustomListComponent={CustomBookList}\n                list_head={[\n                  {\n                    title: \"Book\",\n                    identifier: \"book_name\",\n                  },\n                  {\n                    title: \"Category\",\n                    identifier: \"category_name\",\n                  },\n                  {\n                    title: \"Author\",\n                    identifier: \"author_name\",\n                  },\n                  {\n                    title: \"Shelf\",\n                    identifier: \"shelf_no\",\n                  },\n                  {\n                    title: \"Price\",\n                    identifier: \"price\",\n                  },\n                  {\n                    title: \"Stock\",\n                    identifier: \"stock\",\n                  },\n                ]}\n                book_issuer_data={{\n                  book_issuer_type: \"student\",\n                  book_issued_to_id: student_info.student_id,\n                  book_issued_to_name: student_info.student_name,\n                }}\n              />\n            </>\n          ) : (\n            <div className=\"w-100 text-center\">\n              <Spinner color=\"white\" />\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/CustomBookList.js",["715","716","717"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport IssueModal from \"./IssueModal\";\nimport SellModal from \"./SellModal\";\n\nexport default function CustomBookList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    book_issuer_data,\n  } = props;\n  const [values, setvalues] = React.useState([]);\n  const [price, setPrice] = React.useState([]);\n  const [val_to_show, setValToShow] = React.useState([]);\n  const [issue, setIssue] = useState(false);\n  const [sell, setSell] = useState(false);\n  const handleChange = (id, book_name, prc) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    let new_val_to_show = [...val_to_show];\n    let new_price = [...price];\n    if (index != -1) {\n      new_val.splice(index, 1);\n      new_val_to_show.splice(index, 1);\n      new_price.splice(index, 1);\n    } else {\n      new_val.push(id);\n      new_val_to_show.push(id + \". \" + book_name);\n      new_price.push(prc);\n    }\n    setvalues(new_val);\n    setPrice(new_price);\n    setValToShow(new_val_to_show);\n  };\n  return (\n    <>\n      <div className=\"mb-3 ml-3\">\n        <p className=\"text-white\">Selected Books: </p>\n        <div className=\"d-flex space-between flex-wrap\">\n          {val_to_show.length > 0\n            ? val_to_show.map((element, index) => (\n                <Button\n                  key={index}\n                  color=\"success\"\n                  size=\"sm\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginRight: \"1rem\",\n                  }}\n                >\n                  {element}\n                </Button>\n              ))\n            : null}\n        </div>\n      </div>\n      <div className=\"d-flex\">\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"warning\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setIssue(true);\n            }}\n          >\n            Issue Book\n          </Button>\n        ) : null}\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"info\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setSell(true);\n            }}\n          >\n            Sell Book\n          </Button>\n        ) : null}\n      </div>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={\n                      values.filter((val) => val == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(\n                        element.id,\n                        element.book_name,\n                        element.price\n                      );\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <IssueModal\n        open={issue}\n        setopen={setIssue}\n        books_ids={values}\n        books_show={val_to_show}\n        book_issuer_data={book_issuer_data}\n        update={update}\n        setUpdate={setupdate}\n      />\n      <SellModal\n        open={sell}\n        setopen={setSell}\n        books_ids={values}\n        books_show={val_to_show}\n        book_issuer_data={book_issuer_data}\n        price={price}\n        update={update}\n        setUpdate={setupdate}\n      />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/BooksOperation.js",["718","719","720","721","722","723","724","725","726","727"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport Books from \"./Books\";\n\nexport default function BooksOperation() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [student_list, setStudentList] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Issue Books\"\n        custom_list={[]}\n        CustomListComponent={Books}\n        query_title=\"Query Student\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            required: false,\n            options: session_list,\n            setState: setSelectedSession,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            required: selected_session != -1,\n            options: class_list,\n            setState: setSelectedClass,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            required: selected_session != -1,\n            setState: setSelectedDepartment,\n            options: department_list.filter((element) => {\n              return (\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n              );\n            }),\n          },\n          {\n            placeholder: \"Student\",\n            type: \"select\",\n            name: \"student\",\n            required:\n              selected_session != -1 ||\n              selected_class != -1 ||\n              selected_department != -1,\n            options: student_list,\n          },\n        ]}\n        query_data={{\n          student_id: \"\",\n          session_id: -1,\n          class_id: -1,\n          department_id: -1,\n          student: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssueModal.js",["728","729","730","731","732","733","734"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    books_show,\n    books_ids,\n    book_issuer_data,\n  } = props;\n  const [book_ids, setBookIds] = useState([]);\n  const [book_to_show, setBookToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState({\n    book_issued_date: \"\",\n    book_return_date: \"\",\n  });\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setBookIds(books_ids.length > 0 ? books_ids : []);\n    setBookToShow(books_show.length > 0 ? books_show : []);\n  }, [books_ids]);\n  const alert_message_time = 2500;\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { ...values, ...book_issuer_data, book_ids };\n      const request = {\n        method: \"post\",\n        url: \"library/issue_books\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Books: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {book_to_show.length > 0\n                    ? book_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...book_ids];\n                            new_val.splice(index, 1);\n                            setBookIds(new_val);\n                            new_val = [...book_to_show];\n                            new_val.splice(index, 1);\n                            setBookToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"Issued Date\"\n                    name=\"book_issued_date\"\n                    value={values[\"book_issued_date\"]}\n                    error={values[\"book_issued_date\"] == \"\"}\n                    handleChange={handleChange}\n                  />\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"To Return Date\"\n                    name=\"book_return_date\"\n                    value={values.book_return_date}\n                    error={\n                      values.book_return_date == \"\" ||\n                      values.book_return_date == undefined ||\n                      values.book_return_date == null\n                    }\n                    handleChange={handleChange}\n                  />\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/SellModal.js",["735","736","737","738","739"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    books_show,\n    books_ids,\n    book_issuer_data,\n    price,\n  } = props;\n  const [book_ids, setBookIds] = useState([]);\n  const [book_to_show, setBookToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState([]);\n  const alert_message_time = 2500;\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setBookIds(books_ids.length > 0 ? books_ids : []);\n    setBookToShow(books_show.length > 0 ? books_show : []);\n    let val = [];\n    books_show.map((el, idx) =>\n      val.push({\n        book_id: books_ids[idx],\n        info: el,\n        amount: price[idx],\n        quantity: 1,\n        price: price[idx],\n      })\n    );\n    setValues(val);\n  }, [books_ids]);\n\n  const handleChange = (e, idx) => {\n    const { name, value } = e.target;\n    let new_val = [...values];\n    new_val[idx][\"quantity\"] = value;\n    new_val[idx][\"amount\"] = parseInt(value) * parseInt(price[idx]);\n    setValues(new_val);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { values, ...book_issuer_data };\n      const request = {\n        method: \"post\",\n        url: \"library/sell_books\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Books: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {book_to_show.length > 0\n                    ? book_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...book_ids];\n                            new_val.splice(index, 1);\n                            setBookIds(new_val);\n                            new_val = [...book_to_show];\n                            new_val.splice(index, 1);\n                            setBookToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  {values.length > 0\n                    ? values.map((el, idx) => (\n                        <div className=\"bg-dark my-2 p-3\">\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Book\"\n                            value={el.info}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Price\"\n                            value={el.amount}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"number\"\n                            placeholder=\"Quantity\"\n                            value={el.quantity}\n                            handleChange={(e) => handleChange(e, idx)}\n                            disabled={calling}\n                            min={0}\n                            max={100}\n                          />\n                        </div>\n                      ))\n                    : null}\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssuedList.js",["740"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport ReturnModal from \"./ReturnModal\";\nimport uuid from \"react-uuid\";\nimport IssuedBookDelete from \"./IssuedBookDelete\";\n\nexport default function IssuedList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    book_issuer_data,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [del, setDelete] = useState(false);\n  const [del_info, setDeleteInfo] = useState(false);\n  const [book, setBook] = useState({});\n  return (\n    <>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            {indexed ? <th scope=\"col\">#</th> : null}\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            <th>Return</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                {indexed ? (\n                  <th scope=\"row\" key={index}>\n                    {index + 1}\n                  </th>\n                ) : null}\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <th>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => {\n                      setBook(element);\n                      setOpen(true);\n                    }}\n                  >\n                    Return\n                  </Button>\n                </th>\n                <td>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => {\n                      setDelete(true);\n                      setDeleteInfo(element.id);\n                    }}\n                  >\n                    <i className=\"fas fa-trash\" />\n                  </Button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {book != undefined && book != null ? (\n        <ReturnModal\n          update={update}\n          setUpdate={setupdate}\n          open={open}\n          setopen={setOpen}\n          book={book}\n          book_issuer_data={book_issuer_data}\n        />\n      ) : null}\n      <IssuedBookDelete\n        open={del}\n        setOpenDelete={setDelete}\n        id={del_info}\n        update={update}\n        setUpdate={setupdate}\n        url=\"library/issue_books\"\n      />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/ReturnModal.js",["741","742","743"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nexport default function ReturnModal(props) {\n  const { open, setopen, book, book_issuer_data, update, setUpdate } = props;\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [returned_at, setReturnedAt] = useState(\"\");\n  const alert_message_time = 2500;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (returned_at != \"\" && returned_at != null && returned_at != undefined) {\n      const data = { returned_at };\n      const request = {\n        method: \"put\",\n        url: \"library/issue_books/\" + book.id,\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"Book\"\n                    name=\"book_name\"\n                    value={book[\"book_name\"]}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"Issued Date\"\n                    name=\"book_issued_date\"\n                    value={book[\"book_issued_date\"]}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"To Return Date\"\n                    name=\"book_return_date\"\n                    value={book.book_return_date}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"Returned Date\"\n                    name=\"returned_at\"\n                    value={returned_at}\n                    handleChange={(e) => setReturnedAt(e.target.value)}\n                    disabled={calling}\n                  />\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BookOperation/IssuedBookDelete.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/ProductsOperation.js",["744","745","746","747","748","749","750","751","752","753"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport Products from \"./Products\";\n\nexport default function ProductsOperation() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [student_list, setStudentList] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Issue Products\"\n        CustomListComponent={Products}\n        query_title=\"Query Student\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            required: false,\n            options: session_list,\n            setState: setSelectedSession,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            required: selected_session != -1,\n            options: class_list,\n            setState: setSelectedClass,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            required: selected_session != -1,\n            setState: setSelectedDepartment,\n            options: department_list.filter((element) => {\n              return (\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n              );\n            }),\n          },\n          {\n            placeholder: \"Student\",\n            type: \"select\",\n            name: \"student\",\n            required:\n              selected_session != -1 ||\n              selected_class != -1 ||\n              selected_department != -1,\n            options: student_list,\n          },\n        ]}\n        query_data={{\n          student_id: \"\",\n          session_id: -1,\n          class_id: -1,\n          department_id: -1,\n          student: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/Products.js",["754","755","756","757","758","759"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Index from \"components/crud/Index\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport CustomProductList from \"./CustomProductList\";\n\nexport default function Products(props) {\n  const { update, loading, indexed = true, query_tags } = props;\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      console.log(query_tags);\n      let id = query_tags.filter(\n        (el) => el.title == \"Student ID\" || el.title == \"Student\"\n      )[0].value;\n      id = id.split(\" \");\n      id = id[0];\n      Call({ method: \"get\", url: \"students/student?student_id=\" + id })\n        .then((res) => {\n          if (res.length > 0) setStudentInfo(res[0]);\n          else setStudentInfo({});\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [query_tags, update]);\n  return (\n    <>\n      {Object.values(student_info).length > 0 ? (\n        <>\n          <div className=\"mb-3 ml-3\">\n            <p className=\"text-white\">User Info: </p>\n            <div className=\"d-flex space-between flex-wrap\">\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student Name: {student_info.student_name}\n              </Button>\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student ID: {student_info.student_id}\n              </Button>\n            </div>\n          </div>\n          {query_tags.length > 0 ? (\n            <>\n              <Index\n                title=\"Products List\"\n                list_url=\"/products/product?all=true\"\n                CustomListComponent={CustomProductList}\n                list_head={[\n                  {\n                    title: \"Product\",\n                    identifier: \"product_name\",\n                  },\n                  {\n                    title: \"Info\",\n                    identifier: \"product_info\",\n                  },\n                  {\n                    title: \"Price\",\n                    identifier: \"price\",\n                  },\n                  {\n                    title: \"Stock\",\n                    identifier: \"stock\",\n                  },\n                ]}\n                product_issuer_data={{\n                  product_issuer_type: \"student\",\n                  product_issued_to_id: student_info.student_id,\n                  product_issued_to_name: student_info.student_name,\n                }}\n              />\n            </>\n          ) : (\n            <div className=\"w-100 text-center\">\n              <Spinner color=\"white\" />\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/CustomProductList.js",["760","761","762","763","764"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport SellModal from \"./SellModal\";\n\nexport default function CustomProductList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    product_issuer_data,\n  } = props;\n  const [values, setvalues] = React.useState([]);\n  const [price, setPrice] = React.useState([]);\n  const [val_to_show, setValToShow] = React.useState([]);\n  const [issue, setIssue] = useState(false);\n  const [sell, setSell] = useState(false);\n  const handleChange = (id, product_name, prc) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    let new_val_to_show = [...val_to_show];\n    let new_price = [...price];\n    if (index != -1) {\n      new_val.splice(index, 1);\n      new_val_to_show.splice(index, 1);\n      new_price.splice(index, 1);\n    } else {\n      new_val.push(id);\n      new_val_to_show.push(id + \". \" + product_name);\n      new_price.push(prc);\n    }\n    setvalues(new_val);\n    setPrice(new_price);\n    setValToShow(new_val_to_show);\n  };\n  return (\n    <>\n      <div className=\"mb-3 ml-3\">\n        <p className=\"text-white\">Selected Products: </p>\n        <div className=\"d-flex space-between flex-wrap\">\n          {val_to_show.length > 0\n            ? val_to_show.map((element, index) => (\n                <Button\n                  key={index}\n                  color=\"success\"\n                  size=\"sm\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginRight: \"1rem\",\n                  }}\n                >\n                  {element}\n                </Button>\n              ))\n            : null}\n        </div>\n      </div>\n      <div className=\"d-flex\">\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"info\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setSell(true);\n            }}\n          >\n            Sell Product\n          </Button>\n        ) : null}\n      </div>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={\n                      values.filter((val) => val == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(\n                        element.id,\n                        element.product_name,\n                        element.price\n                      );\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <SellModal\n        open={sell}\n        setopen={setSell}\n        products_ids={values}\n        products_show={val_to_show}\n        product_issuer_data={product_issuer_data}\n        price={price}\n        update={update}\n        setUpdate={setupdate}\n      />\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/product_operation/SellModal.js",["765","766","767","768","769"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    products_show,\n    products_ids,\n    product_issuer_data,\n    price,\n  } = props;\n  const [product_ids, setProductIds] = useState([]);\n  const [product_to_show, setProductToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState([]);\n  const alert_message_time = 2500;\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setProductIds(products_ids.length > 0 ? products_ids : []);\n    setProductToShow(products_show.length > 0 ? products_show : []);\n    let val = [];\n    products_show.map((el, idx) =>\n      val.push({\n        product_id: products_ids[idx],\n        info: el,\n        amount: price[idx],\n        quantity: 1,\n        price: price[idx],\n      })\n    );\n    setValues(val);\n  }, [products_ids]);\n\n  const handleChange = (e, idx) => {\n    const { name, value } = e.target;\n    let new_val = [...values];\n    new_val[idx][\"quantity\"] = value;\n    new_val[idx][\"amount\"] = parseInt(value) * parseInt(price[idx]);\n    setValues(new_val);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { values, ...product_issuer_data };\n      const request = {\n        method: \"post\",\n        url: \"products/sell_products\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Products\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {product_issuer_data.product_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {product_issuer_data.product_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Products: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {product_to_show.length > 0\n                    ? product_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...product_ids];\n                            new_val.splice(index, 1);\n                            setProductIds(new_val);\n                            new_val = [...product_to_show];\n                            new_val.splice(index, 1);\n                            setProductToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  {values.length > 0\n                    ? values.map((el, idx) => (\n                        <div className=\"bg-dark my-2 p-3\">\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Product\"\n                            value={el.info}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Price\"\n                            value={el.amount}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"number\"\n                            placeholder=\"Quantity\"\n                            value={el.quantity}\n                            handleChange={(e) => handleChange(e, idx)}\n                            disabled={calling}\n                            min={0}\n                            max={100}\n                          />\n                        </div>\n                      ))\n                    : null}\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Album.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/WebsiteSettings.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Pages.js",["770","771"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\n\nexport default function Pages() {\n  const send_data = [\n    {\n      placeholder: \"Page Title\",\n      type: \"text\",\n      name: \"page_title\",\n      required: true,\n    },\n    {\n      placeholder: \"Page Content\",\n      type: \"textarea\",\n      name: \"page_content\",\n      customInput: MyEditor,\n      required: true,\n    },\n    {\n      placeholder: \"Page Status\",\n      type: \"select\",\n      name: \"active\",\n      options: [\n        { text: \"Active\", value: 1 },\n        { text: \"Inactive\", value: 0 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Page List\"\n        list_url=\"/website_settings/pages\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"page_title\",\n          },\n          {\n            title: \"Page Status\",\n            identifier: \"page_status\",\n          },\n        ]}\n        add={true}\n        modal_size=\"lg\"\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ page_title: \"\", page_content: \"\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/controls/MyEditor.js",["772","773"],"import React, { Component } from \"react\";\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  convertFromHTML,\n  convertToHTML,\n} from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\n\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"./editor.css\";\nimport draftToHtml from \"draftjs-to-html\";\nclass MyEditor extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.value);\n    this.state = {\n      editorState: EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML(draftToHtml(props.value))\n        )\n      ),\n    };\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({ editorState });\n    console.log(editorState);\n    this.props.handleChange({\n      target: {\n        name: this.props.name,\n        value: convertToRaw(editorState.getCurrentContent()),\n      },\n    });\n  };\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div>\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"rich-editor demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n          placeholder=\"The message goes here...\"\n        />\n      </div>\n    );\n  }\n}\nexport { MyEditor };\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/SubPages.js",["774"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function SubPages() {\n  const [page_list, setPageList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"website_settings/pages?option=true\" })\n      .then((res) => setPageList(res))\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Sub Page Title\",\n      type: \"text\",\n      name: \"page_title\",\n      required: true,\n    },\n    {\n      placeholder: \"Sub Page Content\",\n      type: \"textarea\",\n      name: \"page_content\",\n      customInput: MyEditor,\n      required: true,\n    },\n    {\n      placeholder: \"Parent Page\",\n      type: \"select\",\n      name: \"page_parent\",\n      options: page_list,\n      required: true,\n    },\n    {\n      placeholder: \"Page Status\",\n      type: \"select\",\n      name: \"active\",\n      options: [\n        { text: \"Active\", value: 1 },\n        { text: \"Inactive\", value: 0 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Sub Pages List\"\n        list_url=\"/website_settings/sub_pages\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"page_title\",\n          },\n          {\n            title: \"Parent page\",\n            identifier: \"page_parent_title\",\n          },\n          {\n            title: \"Status\",\n            identifier: \"page_status\",\n          },\n        ]}\n        add={true}\n        modal_size=\"lg\"\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          page_title: \"\",\n          page_content: \"\",\n          page_parent: -1,\n          active: -1,\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/website/Gallery.js",["775","776"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Gallery() {\n  const [album_list, setAlbumList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"website_settings/albums?option=true\" })\n      .then((res) => setAlbumList(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const send_data = [\n    {\n      placeholder: \"Image\",\n      type: \"file\",\n      name: \"image[]\",\n      required: true,\n      multiple: true,\n    },\n    {\n      placeholder: \"Caption\",\n      type: \"textarea\",\n      name: \"caption\",\n      required: false,\n    },\n    {\n      placeholder: \"Album\",\n      type: \"select\",\n      name: \"parent_album_id\",\n      options: album_list,\n      required: false,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Caption\",\n      type: \"textarea\",\n      name: \"caption\",\n      required: false,\n    },\n    {\n      placeholder: \"Album\",\n      type: \"select\",\n      name: \"parent_album_id\",\n      options: album_list,\n      required: false,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Gallery\"\n        list_url=\"/website_settings/gallery\"\n        list_head={[\n          {\n            title: \"Image\",\n            identifier: \"image_name\",\n            type: \"image\",\n          },\n          {\n            title: \"Parent Album\",\n            identifier: \"album_name\",\n          },\n          {\n            title: \"Caption\",\n            identifier: \"caption\",\n          },\n        ]}\n        file={true}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={edit_data}\n        add_initial_values={{ \"image[]\": {}, caption: \"\", parent_album_id: -1 }}\n      />\n    </div>\n  );\n}\n",{"ruleId":"777","replacedBy":"778"},{"ruleId":"779","replacedBy":"780"},{"ruleId":"781","severity":1,"message":"782","line":22,"column":18,"nodeType":"783","messageId":"784","endLine":22,"endColumn":20},{"ruleId":"781","severity":1,"message":"785","line":169,"column":36,"nodeType":"783","messageId":"784","endLine":169,"endColumn":38},{"ruleId":"786","severity":1,"message":"787","line":61,"column":38,"nodeType":"788","messageId":"789","endLine":61,"endColumn":40},{"ruleId":"781","severity":1,"message":"782","line":65,"column":32,"nodeType":"783","messageId":"784","endLine":65,"endColumn":34},{"ruleId":"781","severity":1,"message":"785","line":149,"column":46,"nodeType":"783","messageId":"784","endLine":149,"endColumn":48},{"ruleId":"781","severity":1,"message":"782","line":159,"column":42,"nodeType":"783","messageId":"784","endLine":159,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":165,"column":42,"nodeType":"783","messageId":"784","endLine":165,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":183,"column":42,"nodeType":"783","messageId":"784","endLine":183,"endColumn":44},{"ruleId":"786","severity":1,"message":"787","line":63,"column":28,"nodeType":"788","messageId":"789","endLine":63,"endColumn":30},{"ruleId":"781","severity":1,"message":"782","line":69,"column":37,"nodeType":"783","messageId":"784","endLine":69,"endColumn":39},{"ruleId":"781","severity":1,"message":"785","line":166,"column":46,"nodeType":"783","messageId":"784","endLine":166,"endColumn":48},{"ruleId":"781","severity":1,"message":"782","line":176,"column":42,"nodeType":"783","messageId":"784","endLine":176,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":182,"column":42,"nodeType":"783","messageId":"784","endLine":182,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":200,"column":42,"nodeType":"783","messageId":"784","endLine":200,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":50,"column":30,"nodeType":"783","messageId":"784","endLine":50,"endColumn":32},{"ruleId":"790","severity":1,"message":"791","line":3,"column":8,"nodeType":"792","messageId":"793","endLine":3,"endColumn":20},{"ruleId":"790","severity":1,"message":"794","line":4,"column":8,"nodeType":"792","messageId":"793","endLine":4,"endColumn":13},{"ruleId":"781","severity":1,"message":"785","line":28,"column":22,"nodeType":"783","messageId":"784","endLine":28,"endColumn":24},{"ruleId":"790","severity":1,"message":"795","line":8,"column":10,"nodeType":"792","messageId":"793","endLine":8,"endColumn":30},{"ruleId":"781","severity":1,"message":"785","line":49,"column":33,"nodeType":"783","messageId":"784","endLine":49,"endColumn":35},{"ruleId":"786","severity":1,"message":"787","line":15,"column":27,"nodeType":"788","messageId":"789","endLine":15,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":20,"column":20,"nodeType":"783","messageId":"784","endLine":20,"endColumn":22},{"ruleId":"781","severity":1,"message":"782","line":20,"column":38,"nodeType":"783","messageId":"784","endLine":20,"endColumn":40},{"ruleId":"781","severity":1,"message":"782","line":20,"column":61,"nodeType":"783","messageId":"784","endLine":20,"endColumn":63},{"ruleId":"781","severity":1,"message":"785","line":65,"column":28,"nodeType":"783","messageId":"784","endLine":65,"endColumn":30},{"ruleId":"781","severity":1,"message":"785","line":65,"column":62,"nodeType":"783","messageId":"784","endLine":65,"endColumn":64},{"ruleId":"781","severity":1,"message":"785","line":124,"column":34,"nodeType":"783","messageId":"784","endLine":124,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":125,"column":36,"nodeType":"783","messageId":"784","endLine":125,"endColumn":38},{"ruleId":"790","severity":1,"message":"796","line":13,"column":10,"nodeType":"792","messageId":"793","endLine":13,"endColumn":26},{"ruleId":"786","severity":1,"message":"787","line":21,"column":27,"nodeType":"788","messageId":"789","endLine":21,"endColumn":29},{"ruleId":"790","severity":1,"message":"797","line":20,"column":10,"nodeType":"792","messageId":"793","endLine":20,"endColumn":17},{"ruleId":"790","severity":1,"message":"798","line":21,"column":57,"nodeType":"792","messageId":"793","endLine":21,"endColumn":66},{"ruleId":"786","severity":1,"message":"787","line":50,"column":39,"nodeType":"788","messageId":"789","endLine":50,"endColumn":41},{"ruleId":"786","severity":1,"message":"787","line":18,"column":27,"nodeType":"788","messageId":"789","endLine":18,"endColumn":29},{"ruleId":"781","severity":1,"message":"785","line":109,"column":28,"nodeType":"783","messageId":"784","endLine":109,"endColumn":30},{"ruleId":"781","severity":1,"message":"785","line":110,"column":30,"nodeType":"783","messageId":"784","endLine":110,"endColumn":32},{"ruleId":"781","severity":1,"message":"785","line":35,"column":28,"nodeType":"783","messageId":"784","endLine":35,"endColumn":30},{"ruleId":"781","severity":1,"message":"785","line":36,"column":30,"nodeType":"783","messageId":"784","endLine":36,"endColumn":32},{"ruleId":"781","severity":1,"message":"785","line":119,"column":34,"nodeType":"783","messageId":"784","endLine":119,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":120,"column":36,"nodeType":"783","messageId":"784","endLine":120,"endColumn":38},{"ruleId":"786","severity":1,"message":"787","line":17,"column":27,"nodeType":"788","messageId":"789","endLine":17,"endColumn":29},{"ruleId":"786","severity":1,"message":"787","line":26,"column":27,"nodeType":"788","messageId":"789","endLine":26,"endColumn":29},{"ruleId":"786","severity":1,"message":"787","line":35,"column":27,"nodeType":"788","messageId":"789","endLine":35,"endColumn":29},{"ruleId":"781","severity":1,"message":"785","line":75,"column":44,"nodeType":"783","messageId":"784","endLine":75,"endColumn":46},{"ruleId":"781","severity":1,"message":"785","line":153,"column":44,"nodeType":"783","messageId":"784","endLine":153,"endColumn":46},{"ruleId":"786","severity":1,"message":"787","line":11,"column":27,"nodeType":"788","messageId":"789","endLine":11,"endColumn":29},{"ruleId":"781","severity":1,"message":"785","line":30,"column":22,"nodeType":"783","messageId":"784","endLine":30,"endColumn":24},{"ruleId":"781","severity":1,"message":"785","line":30,"column":22,"nodeType":"783","messageId":"784","endLine":30,"endColumn":24},{"ruleId":"786","severity":1,"message":"787","line":10,"column":27,"nodeType":"788","messageId":"789","endLine":10,"endColumn":29},{"ruleId":"781","severity":1,"message":"785","line":69,"column":34,"nodeType":"783","messageId":"784","endLine":69,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":70,"column":36,"nodeType":"783","messageId":"784","endLine":70,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":28,"column":39,"nodeType":"783","messageId":"784","endLine":28,"endColumn":41},{"ruleId":"781","severity":1,"message":"782","line":29,"column":53,"nodeType":"783","messageId":"784","endLine":29,"endColumn":55},{"ruleId":"781","severity":1,"message":"785","line":103,"column":53,"nodeType":"783","messageId":"784","endLine":103,"endColumn":55},{"ruleId":"790","severity":1,"message":"799","line":1,"column":17,"nodeType":"792","messageId":"793","endLine":1,"endColumn":25},{"ruleId":"790","severity":1,"message":"800","line":10,"column":5,"nodeType":"792","messageId":"793","endLine":10,"endColumn":18},{"ruleId":"790","severity":1,"message":"801","line":11,"column":5,"nodeType":"792","messageId":"793","endLine":11,"endColumn":18},{"ruleId":"790","severity":1,"message":"802","line":14,"column":5,"nodeType":"792","messageId":"793","endLine":14,"endColumn":11},{"ruleId":"781","severity":1,"message":"785","line":47,"column":22,"nodeType":"783","messageId":"784","endLine":47,"endColumn":24},{"ruleId":"781","severity":1,"message":"782","line":47,"column":49,"nodeType":"783","messageId":"784","endLine":47,"endColumn":51},{"ruleId":"781","severity":1,"message":"785","line":48,"column":58,"nodeType":"783","messageId":"784","endLine":48,"endColumn":60},{"ruleId":"781","severity":1,"message":"785","line":74,"column":34,"nodeType":"783","messageId":"784","endLine":74,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":75,"column":36,"nodeType":"783","messageId":"784","endLine":75,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":74,"column":34,"nodeType":"783","messageId":"784","endLine":74,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":75,"column":36,"nodeType":"783","messageId":"784","endLine":75,"endColumn":38},{"ruleId":"786","severity":1,"message":"787","line":23,"column":29,"nodeType":"788","messageId":"789","endLine":23,"endColumn":31},{"ruleId":"781","severity":1,"message":"785","line":24,"column":25,"nodeType":"783","messageId":"784","endLine":24,"endColumn":27},{"ruleId":"781","severity":1,"message":"785","line":30,"column":63,"nodeType":"783","messageId":"784","endLine":30,"endColumn":65},{"ruleId":"781","severity":1,"message":"782","line":32,"column":65,"nodeType":"783","messageId":"784","endLine":32,"endColumn":67},{"ruleId":"781","severity":1,"message":"785","line":74,"column":53,"nodeType":"783","messageId":"784","endLine":74,"endColumn":55},{"ruleId":"781","severity":1,"message":"785","line":104,"column":55,"nodeType":"783","messageId":"784","endLine":104,"endColumn":57},{"ruleId":"781","severity":1,"message":"785","line":104,"column":77,"nodeType":"783","messageId":"784","endLine":104,"endColumn":79},{"ruleId":"781","severity":1,"message":"785","line":107,"column":55,"nodeType":"783","messageId":"784","endLine":107,"endColumn":57},{"ruleId":"781","severity":1,"message":"785","line":108,"column":59,"nodeType":"783","messageId":"784","endLine":108,"endColumn":61},{"ruleId":"781","severity":1,"message":"782","line":19,"column":22,"nodeType":"783","messageId":"784","endLine":19,"endColumn":24},{"ruleId":"781","severity":1,"message":"782","line":20,"column":24,"nodeType":"783","messageId":"784","endLine":20,"endColumn":26},{"ruleId":"781","severity":1,"message":"782","line":21,"column":27,"nodeType":"783","messageId":"784","endLine":21,"endColumn":29},{"ruleId":"781","severity":1,"message":"785","line":81,"column":34,"nodeType":"783","messageId":"784","endLine":81,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":82,"column":36,"nodeType":"783","messageId":"784","endLine":82,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":93,"column":34,"nodeType":"783","messageId":"784","endLine":93,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":94,"column":36,"nodeType":"783","messageId":"784","endLine":94,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":95,"column":39,"nodeType":"783","messageId":"784","endLine":95,"endColumn":41},{"ruleId":"781","severity":1,"message":"782","line":17,"column":15,"nodeType":"783","messageId":"784","endLine":17,"endColumn":17},{"ruleId":"803","severity":1,"message":"804","line":30,"column":6,"nodeType":"805","endLine":30,"endColumn":15,"suggestions":"806"},{"ruleId":"781","severity":1,"message":"785","line":57,"column":43,"nodeType":"783","messageId":"784","endLine":57,"endColumn":45},{"ruleId":"781","severity":1,"message":"785","line":59,"column":30,"nodeType":"783","messageId":"784","endLine":59,"endColumn":32},{"ruleId":"781","severity":1,"message":"782","line":86,"column":57,"nodeType":"783","messageId":"784","endLine":86,"endColumn":59},{"ruleId":"781","severity":1,"message":"785","line":67,"column":34,"nodeType":"783","messageId":"784","endLine":67,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":68,"column":36,"nodeType":"783","messageId":"784","endLine":68,"endColumn":38},{"ruleId":"790","severity":1,"message":"807","line":2,"column":8,"nodeType":"792","messageId":"793","endLine":2,"endColumn":14},{"ruleId":"781","severity":1,"message":"785","line":12,"column":54,"nodeType":"783","messageId":"784","endLine":12,"endColumn":56},{"ruleId":"781","severity":1,"message":"782","line":61,"column":36,"nodeType":"783","messageId":"784","endLine":61,"endColumn":38},{"ruleId":"790","severity":1,"message":"808","line":22,"column":24,"nodeType":"792","messageId":"793","endLine":22,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":27,"column":50,"nodeType":"783","messageId":"784","endLine":27,"endColumn":52},{"ruleId":"781","severity":1,"message":"785","line":28,"column":58,"nodeType":"783","messageId":"784","endLine":28,"endColumn":60},{"ruleId":"786","severity":1,"message":"787","line":10,"column":27,"nodeType":"788","messageId":"789","endLine":10,"endColumn":29},{"ruleId":"786","severity":1,"message":"787","line":12,"column":27,"nodeType":"788","messageId":"789","endLine":12,"endColumn":29},{"ruleId":"790","severity":1,"message":"808","line":22,"column":24,"nodeType":"792","messageId":"793","endLine":22,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":28,"column":50,"nodeType":"783","messageId":"784","endLine":28,"endColumn":52},{"ruleId":"781","severity":1,"message":"785","line":29,"column":58,"nodeType":"783","messageId":"784","endLine":29,"endColumn":60},{"ruleId":"790","severity":1,"message":"807","line":2,"column":8,"nodeType":"792","messageId":"793","endLine":2,"endColumn":14},{"ruleId":"781","severity":1,"message":"785","line":12,"column":54,"nodeType":"783","messageId":"784","endLine":12,"endColumn":56},{"ruleId":"781","severity":1,"message":"782","line":61,"column":36,"nodeType":"783","messageId":"784","endLine":61,"endColumn":38},{"ruleId":"790","severity":1,"message":"807","line":3,"column":8,"nodeType":"792","messageId":"793","endLine":3,"endColumn":14},{"ruleId":"790","severity":1,"message":"809","line":8,"column":31,"nodeType":"792","messageId":"793","endLine":8,"endColumn":38},{"ruleId":"803","severity":1,"message":"810","line":25,"column":6,"nodeType":"805","endLine":25,"endColumn":12,"suggestions":"811"},{"ruleId":"781","severity":1,"message":"785","line":78,"column":41,"nodeType":"783","messageId":"784","endLine":78,"endColumn":43},{"ruleId":"781","severity":1,"message":"785","line":86,"column":43,"nodeType":"783","messageId":"784","endLine":86,"endColumn":45},{"ruleId":"781","severity":1,"message":"785","line":41,"column":34,"nodeType":"783","messageId":"784","endLine":41,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":42,"column":36,"nodeType":"783","messageId":"784","endLine":42,"endColumn":38},{"ruleId":"790","severity":1,"message":"807","line":3,"column":8,"nodeType":"792","messageId":"793","endLine":3,"endColumn":14},{"ruleId":"790","severity":1,"message":"812","line":9,"column":11,"nodeType":"792","messageId":"793","endLine":9,"endColumn":23},{"ruleId":"803","severity":1,"message":"810","line":27,"column":6,"nodeType":"805","endLine":27,"endColumn":12,"suggestions":"813"},{"ruleId":"781","severity":1,"message":"785","line":80,"column":41,"nodeType":"783","messageId":"784","endLine":80,"endColumn":43},{"ruleId":"781","severity":1,"message":"785","line":88,"column":43,"nodeType":"783","messageId":"784","endLine":88,"endColumn":45},{"ruleId":"786","severity":1,"message":"787","line":31,"column":24,"nodeType":"788","messageId":"789","endLine":31,"endColumn":26},{"ruleId":"790","severity":1,"message":"814","line":10,"column":53,"nodeType":"792","messageId":"793","endLine":10,"endColumn":63},{"ruleId":"790","severity":1,"message":"815","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":17},{"ruleId":"790","severity":1,"message":"816","line":8,"column":8,"nodeType":"792","messageId":"793","endLine":8,"endColumn":12},{"ruleId":"790","severity":1,"message":"817","line":10,"column":8,"nodeType":"792","messageId":"793","endLine":10,"endColumn":15},{"ruleId":"790","severity":1,"message":"818","line":11,"column":10,"nodeType":"792","messageId":"793","endLine":11,"endColumn":14},{"ruleId":"790","severity":1,"message":"819","line":12,"column":10,"nodeType":"792","messageId":"793","endLine":12,"endColumn":23},{"ruleId":"790","severity":1,"message":"820","line":15,"column":11,"nodeType":"792","messageId":"793","endLine":15,"endColumn":14},{"ruleId":"790","severity":1,"message":"821","line":15,"column":37,"nodeType":"792","messageId":"793","endLine":15,"endColumn":43},{"ruleId":"790","severity":1,"message":"822","line":15,"column":45,"nodeType":"792","messageId":"793","endLine":15,"endColumn":54},{"ruleId":"790","severity":1,"message":"823","line":17,"column":23,"nodeType":"792","messageId":"793","endLine":17,"endColumn":37},{"ruleId":"790","severity":1,"message":"824","line":18,"column":26,"nodeType":"792","messageId":"793","endLine":18,"endColumn":43},{"ruleId":"790","severity":1,"message":"825","line":6,"column":8,"nodeType":"792","messageId":"793","endLine":6,"endColumn":13},{"ruleId":"790","severity":1,"message":"826","line":9,"column":8,"nodeType":"792","messageId":"793","endLine":9,"endColumn":13},{"ruleId":"790","severity":1,"message":"827","line":10,"column":8,"nodeType":"792","messageId":"793","endLine":10,"endColumn":17},{"ruleId":"790","severity":1,"message":"828","line":11,"column":8,"nodeType":"792","messageId":"793","endLine":11,"endColumn":19},{"ruleId":"781","severity":1,"message":"782","line":31,"column":27,"nodeType":"783","messageId":"784","endLine":31,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":31,"column":50,"nodeType":"783","messageId":"784","endLine":31,"endColumn":52},{"ruleId":"781","severity":1,"message":"782","line":38,"column":29,"nodeType":"783","messageId":"784","endLine":38,"endColumn":31},{"ruleId":"781","severity":1,"message":"782","line":40,"column":29,"nodeType":"783","messageId":"784","endLine":40,"endColumn":31},{"ruleId":"781","severity":1,"message":"782","line":100,"column":41,"nodeType":"783","messageId":"784","endLine":100,"endColumn":43},{"ruleId":"781","severity":1,"message":"782","line":106,"column":23,"nodeType":"783","messageId":"784","endLine":106,"endColumn":25},{"ruleId":"786","severity":1,"message":"787","line":127,"column":27,"nodeType":"788","messageId":"789","endLine":127,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":130,"column":55,"nodeType":"783","messageId":"784","endLine":130,"endColumn":57},{"ruleId":"803","severity":1,"message":"829","line":153,"column":6,"nodeType":"805","endLine":153,"endColumn":8,"suggestions":"830"},{"ruleId":"781","severity":1,"message":"782","line":184,"column":45,"nodeType":"783","messageId":"784","endLine":184,"endColumn":47},{"ruleId":"781","severity":1,"message":"785","line":217,"column":57,"nodeType":"783","messageId":"784","endLine":217,"endColumn":59},{"ruleId":"781","severity":1,"message":"782","line":232,"column":48,"nodeType":"783","messageId":"784","endLine":232,"endColumn":50},{"ruleId":"781","severity":1,"message":"785","line":240,"column":58,"nodeType":"783","messageId":"784","endLine":240,"endColumn":60},{"ruleId":"786","severity":1,"message":"787","line":256,"column":42,"nodeType":"788","messageId":"789","endLine":256,"endColumn":44},{"ruleId":"781","severity":1,"message":"782","line":322,"column":52,"nodeType":"783","messageId":"784","endLine":322,"endColumn":54},{"ruleId":"786","severity":1,"message":"787","line":31,"column":24,"nodeType":"788","messageId":"789","endLine":31,"endColumn":26},{"ruleId":"790","severity":1,"message":"807","line":2,"column":8,"nodeType":"792","messageId":"793","endLine":2,"endColumn":14},{"ruleId":"790","severity":1,"message":"831","line":11,"column":22,"nodeType":"792","messageId":"793","endLine":11,"endColumn":31},{"ruleId":"790","severity":1,"message":"809","line":11,"column":42,"nodeType":"792","messageId":"793","endLine":11,"endColumn":49},{"ruleId":"790","severity":1,"message":"832","line":12,"column":10,"nodeType":"792","messageId":"793","endLine":12,"endColumn":14},{"ruleId":"790","severity":1,"message":"833","line":12,"column":16,"nodeType":"792","messageId":"793","endLine":12,"endColumn":23},{"ruleId":"790","severity":1,"message":"834","line":13,"column":10,"nodeType":"792","messageId":"793","endLine":13,"endColumn":14},{"ruleId":"790","severity":1,"message":"835","line":13,"column":16,"nodeType":"792","messageId":"793","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"785","line":31,"column":46,"nodeType":"783","messageId":"784","endLine":31,"endColumn":48},{"ruleId":"781","severity":1,"message":"785","line":8,"column":56,"nodeType":"783","messageId":"784","endLine":8,"endColumn":58},{"ruleId":"781","severity":1,"message":"782","line":16,"column":47,"nodeType":"783","messageId":"784","endLine":16,"endColumn":49},{"ruleId":"790","severity":1,"message":"836","line":4,"column":8,"nodeType":"792","messageId":"793","endLine":4,"endColumn":13},{"ruleId":"790","severity":1,"message":"837","line":7,"column":8,"nodeType":"792","messageId":"793","endLine":7,"endColumn":12},{"ruleId":"790","severity":1,"message":"838","line":13,"column":19,"nodeType":"792","messageId":"793","endLine":13,"endColumn":26},{"ruleId":"790","severity":1,"message":"809","line":13,"column":28,"nodeType":"792","messageId":"793","endLine":13,"endColumn":35},{"ruleId":"781","severity":1,"message":"785","line":19,"column":26,"nodeType":"783","messageId":"784","endLine":19,"endColumn":28},{"ruleId":"781","severity":1,"message":"785","line":19,"column":54,"nodeType":"783","messageId":"784","endLine":19,"endColumn":56},{"ruleId":"790","severity":1,"message":"809","line":18,"column":5,"nodeType":"792","messageId":"793","endLine":18,"endColumn":12},{"ruleId":"781","severity":1,"message":"782","line":31,"column":15,"nodeType":"783","messageId":"784","endLine":31,"endColumn":17},{"ruleId":"781","severity":1,"message":"785","line":125,"column":50,"nodeType":"783","messageId":"784","endLine":125,"endColumn":52},{"ruleId":"781","severity":1,"message":"782","line":17,"column":24,"nodeType":"783","messageId":"784","endLine":17,"endColumn":26},{"ruleId":"781","severity":1,"message":"782","line":18,"column":22,"nodeType":"783","messageId":"784","endLine":18,"endColumn":24},{"ruleId":"781","severity":1,"message":"782","line":19,"column":27,"nodeType":"783","messageId":"784","endLine":19,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":61,"column":40,"nodeType":"783","messageId":"784","endLine":61,"endColumn":42},{"ruleId":"781","severity":1,"message":"782","line":69,"column":40,"nodeType":"783","messageId":"784","endLine":69,"endColumn":42},{"ruleId":"781","severity":1,"message":"785","line":73,"column":34,"nodeType":"783","messageId":"784","endLine":73,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":74,"column":36,"nodeType":"783","messageId":"784","endLine":74,"endColumn":38},{"ruleId":"781","severity":1,"message":"782","line":83,"column":32,"nodeType":"783","messageId":"784","endLine":83,"endColumn":34},{"ruleId":"781","severity":1,"message":"782","line":84,"column":30,"nodeType":"783","messageId":"784","endLine":84,"endColumn":32},{"ruleId":"781","severity":1,"message":"782","line":85,"column":35,"nodeType":"783","messageId":"784","endLine":85,"endColumn":37},{"ruleId":"790","severity":1,"message":"815","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":17},{"ruleId":"790","severity":1,"message":"819","line":13,"column":10,"nodeType":"792","messageId":"793","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"782","line":34,"column":56,"nodeType":"783","messageId":"784","endLine":34,"endColumn":58},{"ruleId":"803","severity":1,"message":"839","line":39,"column":6,"nodeType":"805","endLine":39,"endColumn":17,"suggestions":"840"},{"ruleId":"781","severity":1,"message":"785","line":160,"column":55,"nodeType":"783","messageId":"784","endLine":160,"endColumn":57},{"ruleId":"781","severity":1,"message":"785","line":169,"column":47,"nodeType":"783","messageId":"784","endLine":169,"endColumn":49},{"ruleId":"781","severity":1,"message":"785","line":170,"column":47,"nodeType":"783","messageId":"784","endLine":170,"endColumn":49},{"ruleId":"790","severity":1,"message":"815","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":17},{"ruleId":"790","severity":1,"message":"819","line":13,"column":10,"nodeType":"792","messageId":"793","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"782","line":33,"column":56,"nodeType":"783","messageId":"784","endLine":33,"endColumn":58},{"ruleId":"803","severity":1,"message":"841","line":49,"column":6,"nodeType":"805","endLine":49,"endColumn":17,"suggestions":"842"},{"ruleId":"790","severity":1,"message":"843","line":52,"column":13,"nodeType":"792","messageId":"793","endLine":52,"endColumn":17},{"ruleId":"781","severity":1,"message":"782","line":89,"column":13,"nodeType":"783","messageId":"784","endLine":89,"endColumn":15},{"ruleId":"790","severity":1,"message":"815","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":17},{"ruleId":"781","severity":1,"message":"782","line":23,"column":21,"nodeType":"783","messageId":"784","endLine":23,"endColumn":23},{"ruleId":"781","severity":1,"message":"782","line":23,"column":65,"nodeType":"783","messageId":"784","endLine":23,"endColumn":67},{"ruleId":"781","severity":1,"message":"782","line":17,"column":24,"nodeType":"783","messageId":"784","endLine":17,"endColumn":26},{"ruleId":"781","severity":1,"message":"782","line":18,"column":22,"nodeType":"783","messageId":"784","endLine":18,"endColumn":24},{"ruleId":"781","severity":1,"message":"782","line":19,"column":27,"nodeType":"783","messageId":"784","endLine":19,"endColumn":29},{"ruleId":"781","severity":1,"message":"782","line":60,"column":40,"nodeType":"783","messageId":"784","endLine":60,"endColumn":42},{"ruleId":"781","severity":1,"message":"782","line":68,"column":40,"nodeType":"783","messageId":"784","endLine":68,"endColumn":42},{"ruleId":"781","severity":1,"message":"785","line":72,"column":34,"nodeType":"783","messageId":"784","endLine":72,"endColumn":36},{"ruleId":"781","severity":1,"message":"785","line":73,"column":36,"nodeType":"783","messageId":"784","endLine":73,"endColumn":38},{"ruleId":"781","severity":1,"message":"782","line":82,"column":32,"nodeType":"783","messageId":"784","endLine":82,"endColumn":34},{"ruleId":"781","severity":1,"message":"782","line":83,"column":30,"nodeType":"783","messageId":"784","endLine":83,"endColumn":32},{"ruleId":"781","severity":1,"message":"782","line":84,"column":35,"nodeType":"783","messageId":"784","endLine":84,"endColumn":37},{"ruleId":"790","severity":1,"message":"836","line":4,"column":8,"nodeType":"792","messageId":"793","endLine":4,"endColumn":13},{"ruleId":"790","severity":1,"message":"837","line":7,"column":8,"nodeType":"792","messageId":"793","endLine":7,"endColumn":12},{"ruleId":"790","severity":1,"message":"838","line":12,"column":19,"nodeType":"792","messageId":"793","endLine":12,"endColumn":26},{"ruleId":"790","severity":1,"message":"809","line":12,"column":28,"nodeType":"792","messageId":"793","endLine":12,"endColumn":35},{"ruleId":"781","severity":1,"message":"785","line":18,"column":26,"nodeType":"783","messageId":"784","endLine":18,"endColumn":28},{"ruleId":"781","severity":1,"message":"785","line":18,"column":54,"nodeType":"783","messageId":"784","endLine":18,"endColumn":56},{"ruleId":"790","severity":1,"message":"809","line":17,"column":5,"nodeType":"792","messageId":"793","endLine":17,"endColumn":12},{"ruleId":"790","severity":1,"message":"844","line":23,"column":10,"nodeType":"792","messageId":"793","endLine":23,"endColumn":15},{"ruleId":"790","severity":1,"message":"845","line":23,"column":17,"nodeType":"792","messageId":"793","endLine":23,"endColumn":25},{"ruleId":"781","severity":1,"message":"782","line":30,"column":15,"nodeType":"783","messageId":"784","endLine":30,"endColumn":17},{"ruleId":"781","severity":1,"message":"785","line":108,"column":50,"nodeType":"783","messageId":"784","endLine":108,"endColumn":52},{"ruleId":"790","severity":1,"message":"815","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":17},{"ruleId":"790","severity":1,"message":"819","line":13,"column":10,"nodeType":"792","messageId":"793","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"782","line":33,"column":56,"nodeType":"783","messageId":"784","endLine":33,"endColumn":58},{"ruleId":"803","severity":1,"message":"846","line":49,"column":6,"nodeType":"805","endLine":49,"endColumn":20,"suggestions":"847"},{"ruleId":"790","severity":1,"message":"843","line":52,"column":13,"nodeType":"792","messageId":"793","endLine":52,"endColumn":17},{"ruleId":"790","severity":1,"message":"848","line":3,"column":17,"nodeType":"792","messageId":"793","endLine":3,"endColumn":24},{"ruleId":"790","severity":1,"message":"799","line":3,"column":26,"nodeType":"792","messageId":"793","endLine":3,"endColumn":34},{"ruleId":"790","severity":1,"message":"849","line":5,"column":3,"nodeType":"792","messageId":"793","endLine":5,"endColumn":17},{"ruleId":"790","severity":1,"message":"850","line":8,"column":3,"nodeType":"792","messageId":"793","endLine":8,"endColumn":16},{"ruleId":"790","severity":1,"message":"848","line":3,"column":17,"nodeType":"792","messageId":"793","endLine":3,"endColumn":24},{"ruleId":"790","severity":1,"message":"851","line":2,"column":10,"nodeType":"792","messageId":"793","endLine":2,"endColumn":18},{"ruleId":"790","severity":1,"message":"848","line":3,"column":17,"nodeType":"792","messageId":"793","endLine":3,"endColumn":24},"no-native-reassign",["852"],"no-negated-in-lhs",["853"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'FormFeedback' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'selected_query_class' is assigned a value but never used.","'selected_session' is assigned a value but never used.","'calling' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'useState' is defined but never used.","'setOpenDelete' is assigned a value but never used.","'setDeleteInfo' is assigned a value but never used.","'remove' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.","ArrayExpression",["854"],"'Button' is defined but never used.","'setSliceLength' is assigned a value but never used.","'indexed' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'month' and 'year'. Either include them or remove the dependency array.",["855"],"'session_list' is assigned a value but never used.",["856"],"'query_tags' is assigned a value but never used.","'useForm' is defined but never used.","'Form' is defined but never used.","'Spinner' is defined but never used.","'Call' is defined but never used.","'ValidateInput' is defined but never used.","'url' is assigned a value but never used.","'update' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","'setFailMessage' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'Input' is defined but never used.","'Toast' is defined but never used.","'ToastBody' is defined but never used.","'ToastHeader' is defined but never used.","React Hook React.useEffect has missing dependencies: 'class_id', 'department_id', 'exam_id', 'session_id', and 'subject_id'. Either include them or remove the dependency array.",["857"],"'list_head' is assigned a value but never used.","'open' is assigned a value but never used.","'setopen' is assigned a value but never used.","'data' is assigned a value but never used.","'setdata' is assigned a value but never used.","'Table' is defined but never used.","'uuid' is defined but never used.","'loading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'books_show'. Either include it or remove the dependency array.",["858"],"React Hook React.useEffect has missing dependencies: 'books_show' and 'price'. Either include them or remove the dependency array.",["859"],"'name' is assigned a value but never used.","'issue' is assigned a value but never used.","'setIssue' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'price' and 'products_show'. Either include them or remove the dependency array.",["860"],"'useMemo' is defined but never used.","'convertFromRaw' is defined but never used.","'convertToHTML' is defined but never used.","'MyEditor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"861","fix":"862"},{"desc":"863","fix":"864"},{"desc":"863","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},"Update the dependencies array to be: [list, loading]",{"range":"874","text":"875"},"Update the dependencies array to be: [list, month, year]",{"range":"876","text":"877"},{"range":"878","text":"877"},"Update the dependencies array to be: [class_id, department_id, exam_id, session_id, subject_id]",{"range":"879","text":"880"},"Update the dependencies array to be: [books_ids, books_show]",{"range":"881","text":"882"},"Update the dependencies array to be: [books_ids, books_show, price]",{"range":"883","text":"884"},"Update the dependencies array to be: [price, products_ids, products_show]",{"range":"885","text":"886"},[966,975],"[list, loading]",[824,830],"[list, month, year]",[960,966],[4559,4561],"[class_id, department_id, exam_id, session_id, subject_id]",[1397,1408],"[books_ids, books_show]",[1618,1629],"[books_ids, books_show, price]",[1666,1680],"[price, products_ids, products_show]"]