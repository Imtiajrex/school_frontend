[{"/mnt/Fast Projects/Web/school_argon/src/index.js":"1","/mnt/Fast Projects/Web/school_argon/src/App.js":"2","/mnt/Fast Projects/Web/school_argon/src/routers/AuthRouter.js":"3","/mnt/Fast Projects/Web/school_argon/src/pages/Login.js":"4","/mnt/Fast Projects/Web/school_argon/src/pages/admin/dashboard/Dashboard.js":"5","/mnt/Fast Projects/Web/school_argon/src/components/useForm.js":"6","/mnt/Fast Projects/Web/school_argon/src/components/controls/Controls.js":"7","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/Sidebar.js":"8","/mnt/Fast Projects/Web/school_argon/src/services/API/Call.js":"9","/mnt/Fast Projects/Web/school_argon/src/components/controls/TextInput.js":"10","/mnt/Fast Projects/Web/school_argon/src/services/API/CSRF.js":"11","/mnt/Fast Projects/Web/school_argon/src/services/API/Api.js":"12","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/createLinks.js":"13","/mnt/Fast Projects/Web/school_argon/src/routers/AdminRouter.js":"14","/mnt/Fast Projects/Web/school_argon/src/routers/createRoutes.js":"15","/mnt/Fast Projects/Web/school_argon/src/components/crud/Index.js":"16","/mnt/Fast Projects/Web/school_argon/src/components/crud/Add.js":"17","/mnt/Fast Projects/Web/school_argon/src/components/crud/Delete.js":"18","/mnt/Fast Projects/Web/school_argon/src/components/crud/Edit.js":"19","/mnt/Fast Projects/Web/school_argon/src/components/crud/List.js":"20","/mnt/Fast Projects/Web/school_argon/src/routes/routes.js":"21","/mnt/Fast Projects/Web/school_argon/src/components/controls/DatePicker.js":"22","/mnt/Fast Projects/Web/school_argon/src/components/controls/Select.js":"23","/mnt/Fast Projects/Web/school_argon/src/components/controls/FileUploadInput.js":"24","/mnt/Fast Projects/Web/school_argon/src/components/controls/InputField.js":"25","/mnt/Fast Projects/Web/school_argon/src/components/controls/CheckBoxArr.js":"26","/mnt/Fast Projects/Web/school_argon/src/components/controls/Checkbox.js":"27","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Religion.js":"28","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Session.js":"29","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/SchoolClass.js":"30","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Department.js":"31","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Subject.js":"32","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Settings.js":"33","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/PaymentCategory.js":"34","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Permissions.js":"35","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Users.js":"36","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Roles.js":"37","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/GPA.js":"38","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Grade.js":"39","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/Library.js":"40","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCrud.js":"41","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/ProductCrud.js":"42","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/Products.js":"43","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/Accounts.js":"44","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsCrud.js":"45","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Exams.js":"46","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/ExamCrud.js":"47","/mnt/Fast Projects/Web/school_argon/src/components/crud/ValidateInput.js":"48","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/Results.js":"49","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultCrud.js":"50","/mnt/Fast Projects/Web/school_argon/src/contexts/ClassDeptSessionContext.js":"51","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/AssignSubject.js":"52","/mnt/Fast Projects/Web/school_argon/src/components/crud/Query.js":"53","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsReport.js":"54","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/Students.js":"55","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsCrud.js":"56","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/AssignClassStudent.js":"57","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/Employees.js":"58","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeCrud.js":"59","/mnt/Fast Projects/Web/school_argon/src/reportWebVitals.js":"60","/mnt/Fast Projects/Web/school_argon/src/serviceWorkerRegistration.js":"61","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeTypes.js":"62","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeePosts.js":"63","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountBalance.js":"64","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/ExtendedInput.js":"65","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/StudentsExtendedInfo.js":"66","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/EmployeesExtendedInfo.js":"67","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/Payment.js":"68","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentPaymentFees.js":"69","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPayment.js":"70","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPaymentList.js":"71","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/AddStudentPayment.js":"72","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/PaymentInput.js":"73","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePayment.js":"74","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentList.js":"75","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentModal.js":"76","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/PaymentInput.js":"77","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReport.js":"78"},{"size":631,"mtime":1610168291916,"results":"79","hashOfConfig":"80"},{"size":188,"mtime":1609232982827,"results":"81","hashOfConfig":"80"},{"size":1201,"mtime":1610169477987,"results":"82","hashOfConfig":"80"},{"size":3461,"mtime":1609516265592,"results":"83","hashOfConfig":"80"},{"size":772,"mtime":1609774312500,"results":"84","hashOfConfig":"80"},{"size":523,"mtime":1609518238777,"results":"85","hashOfConfig":"80"},{"size":327,"mtime":1609597407448,"results":"86","hashOfConfig":"80"},{"size":5375,"mtime":1609255738121,"results":"87","hashOfConfig":"80"},{"size":1168,"mtime":1609507348547,"results":"88","hashOfConfig":"80"},{"size":632,"mtime":1609518967906,"results":"89","hashOfConfig":"80"},{"size":174,"mtime":1609135355028,"results":"90","hashOfConfig":"80"},{"size":425,"mtime":1609397059527,"results":"91","hashOfConfig":"80"},{"size":2143,"mtime":1609521217369,"results":"92","hashOfConfig":"80"},{"size":623,"mtime":1609394479962,"results":"93","hashOfConfig":"80"},{"size":376,"mtime":1609256357557,"results":"94","hashOfConfig":"80"},{"size":7505,"mtime":1610775081392,"results":"95","hashOfConfig":"80"},{"size":5483,"mtime":1610349062360,"results":"96","hashOfConfig":"80"},{"size":2965,"mtime":1609523453941,"results":"97","hashOfConfig":"80"},{"size":5842,"mtime":1610776620653,"results":"98","hashOfConfig":"80"},{"size":2663,"mtime":1610797301368,"results":"99","hashOfConfig":"80"},{"size":13181,"mtime":1610778219675,"results":"100","hashOfConfig":"80"},{"size":1730,"mtime":1609681606134,"results":"101","hashOfConfig":"80"},{"size":1096,"mtime":1609834515310,"results":"102","hashOfConfig":"80"},{"size":670,"mtime":1610097279586,"results":"103","hashOfConfig":"80"},{"size":2997,"mtime":1610350313419,"results":"104","hashOfConfig":"80"},{"size":1613,"mtime":1609828697644,"results":"105","hashOfConfig":"80"},{"size":581,"mtime":1610607276984,"results":"106","hashOfConfig":"80"},{"size":802,"mtime":1609600773602,"results":"107","hashOfConfig":"80"},{"size":761,"mtime":1609600767473,"results":"108","hashOfConfig":"80"},{"size":754,"mtime":1609600770462,"results":"109","hashOfConfig":"80"},{"size":1814,"mtime":1610033837762,"results":"110","hashOfConfig":"80"},{"size":792,"mtime":1609600764017,"results":"111","hashOfConfig":"80"},{"size":757,"mtime":1610349936284,"results":"112","hashOfConfig":"80"},{"size":3304,"mtime":1610466482225,"results":"113","hashOfConfig":"80"},{"size":467,"mtime":1609600788713,"results":"114","hashOfConfig":"80"},{"size":2378,"mtime":1610086261301,"results":"115","hashOfConfig":"80"},{"size":1172,"mtime":1609921832465,"results":"116","hashOfConfig":"80"},{"size":1519,"mtime":1609652074246,"results":"117","hashOfConfig":"80"},{"size":1527,"mtime":1609652957788,"results":"118","hashOfConfig":"80"},{"size":59,"mtime":1609653706169,"results":"119","hashOfConfig":"80"},{"size":1616,"mtime":1609653768023,"results":"120","hashOfConfig":"80"},{"size":1237,"mtime":1609654648592,"results":"121","hashOfConfig":"80"},{"size":65,"mtime":1609654253163,"results":"122","hashOfConfig":"80"},{"size":194,"mtime":1610265005771,"results":"123","hashOfConfig":"80"},{"size":2218,"mtime":1610789917560,"results":"124","hashOfConfig":"80"},{"size":56,"mtime":1609681872656,"results":"125","hashOfConfig":"80"},{"size":2527,"mtime":1609857667824,"results":"126","hashOfConfig":"80"},{"size":532,"mtime":1609839219698,"results":"127","hashOfConfig":"80"},{"size":62,"mtime":1609766296347,"results":"128","hashOfConfig":"80"},{"size":1536,"mtime":1609767250685,"results":"129","hashOfConfig":"80"},{"size":1302,"mtime":1609827168445,"results":"130","hashOfConfig":"80"},{"size":3272,"mtime":1610110755825,"results":"131","hashOfConfig":"80"},{"size":3190,"mtime":1610114258163,"results":"132","hashOfConfig":"80"},{"size":1209,"mtime":1610791059139,"results":"133","hashOfConfig":"80"},{"size":218,"mtime":1610529187635,"results":"134","hashOfConfig":"80"},{"size":6540,"mtime":1610349815084,"results":"135","hashOfConfig":"80"},{"size":3458,"mtime":1610113042079,"results":"136","hashOfConfig":"80"},{"size":188,"mtime":1610173817824,"results":"137","hashOfConfig":"80"},{"size":6002,"mtime":1610353776358,"results":"138","hashOfConfig":"80"},{"size":364,"mtime":1610168263892,"results":"139","hashOfConfig":"80"},{"size":5064,"mtime":1610168198179,"results":"140","hashOfConfig":"80"},{"size":818,"mtime":1610174087839,"results":"141","hashOfConfig":"80"},{"size":1289,"mtime":1610174179140,"results":"142","hashOfConfig":"80"},{"size":893,"mtime":1610266903862,"results":"143","hashOfConfig":"80"},{"size":1633,"mtime":1610353231711,"results":"144","hashOfConfig":"80"},{"size":1329,"mtime":1610286133725,"results":"145","hashOfConfig":"80"},{"size":1330,"mtime":1610349913514,"results":"146","hashOfConfig":"80"},{"size":213,"mtime":1610778212187,"results":"147","hashOfConfig":"80"},{"size":1923,"mtime":1610529879448,"results":"148","hashOfConfig":"80"},{"size":2446,"mtime":1610606190759,"results":"149","hashOfConfig":"80"},{"size":2588,"mtime":1610606086828,"results":"150","hashOfConfig":"80"},{"size":10564,"mtime":1610694513523,"results":"151","hashOfConfig":"80"},{"size":2887,"mtime":1610606086022,"results":"152","hashOfConfig":"80"},{"size":1750,"mtime":1610777850595,"results":"153","hashOfConfig":"80"},{"size":5051,"mtime":1610774917770,"results":"154","hashOfConfig":"80"},{"size":9194,"mtime":1610690499048,"results":"155","hashOfConfig":"80"},{"size":1845,"mtime":1610682872752,"results":"156","hashOfConfig":"80"},{"size":1719,"mtime":1610792277484,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"rbgfi1",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"160"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"160"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"160"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"160"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"160"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"160"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"160"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"/mnt/Fast Projects/Web/school_argon/src/index.js",[],["335","336"],"/mnt/Fast Projects/Web/school_argon/src/App.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/AuthRouter.js",["337"],"import React from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router\"; /*\r\nimport AdminDashboard from \"../pages/admin/AdminDashboard\";\r\nimport StudentDashboard from \"../pages/student/StudentDashboard\";\r\nimport TeacherDashboard from \"../pages/teacher/TeacherDashboard\";*/\r\nimport Login from \"../pages/Login\";\r\nimport AdminDashboard from \"../pages/admin/dashboard/Dashboard\";\r\n\r\nexport default function AuthRouter() {\r\n  const token = localStorage.getItem(\"token\", \"\");\r\n  const user_type = localStorage.getItem(\"user_type\", \"\");\r\n  const allowed_user_types = [\"admin\", \"student\", \"teacher\"];\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          {token != \"\" && allowed_user_types.includes(user_type) ? (\r\n            <Redirect to={\"/\" + user_type + \"/dashboard\"} />\r\n          ) : (\r\n            <Login />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/admin\">\r\n          <AdminDashboard />\r\n        </Route>\r\n        {/*\r\n        <Route path=\"/student\">\r\n          <StudentDashboard />\r\n        </Route>\r\n        <Route path=\"/teacher\">\r\n          <TeacherDashboard />\r\n        </Route>\r\n        */}\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","/mnt/Fast Projects/Web/school_argon/src/pages/Login.js",[],"/mnt/Fast Projects/Web/school_argon/src/pages/admin/dashboard/Dashboard.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/useForm.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Controls.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/Sidebar.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/Call.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/TextInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/CSRF.js",[],"/mnt/Fast Projects/Web/school_argon/src/services/API/Api.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/createLinks.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/AdminRouter.js",[],"/mnt/Fast Projects/Web/school_argon/src/routers/createRoutes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/Index.js",["338"],"import React, { useState } from \"react\";\n\nimport { Card, CardHeader, Container, Row } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport { Call } from \"services/API/Call\";\nimport Add from \"./Add\";\nimport Delete from \"./Delete\";\nimport Edit from \"./Edit\";\nimport List from \"./List\";\nimport Query from \"./Query\";\n\nfunction Index(props) {\n  const {\n    title,\n    add_data = [],\n    add_initial_values = [],\n    CustomListComponent = undefined,\n    custom_list = undefined,\n    custom_update = undefined,\n    setCustomUpdate = undefined,\n    query_list = undefined,\n    custom_loading = undefined,\n    modal_size = \"sm\",\n    list_url,\n    list_head,\n    add = false,\n    edit = false,\n    remove = false,\n    edit_data = [],\n    query_title,\n    query_data,\n  } = props;\n  const [openAdd, setOpenAdd] = useState(false);\n  const [openEdit, setOpenEdit] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [list, setList] = useState([]);\n  const [deleteInfo, setDeleteInfo] = useState(\"\");\n  const [editInfo, setEditInfo] = useState({});\n  const [update, setUpdate] = useState(true);\n  const [loading, setloading] = useState(false);\n  const [query, setquery] = useState(\"\");\n  const [query_tags, setQueryTags] = useState([]);\n  const [querying, setQuerying] = useState(false);\n\n  React.useEffect(() => {\n    if (custom_list === undefined) {\n      if (typeof query_list == \"object\") {\n        if (query.length > 0) {\n          setloading(true);\n          setQuerying(true);\n          Call({\n            method: \"get\",\n            url: list_url + query,\n          })\n            .then((res) => {\n              setList(res);\n              setQuerying(false);\n              setloading(false);\n            })\n            .catch((error) => {\n              setQuerying(false);\n              setloading(false);\n            });\n        }\n      } else {\n        setloading(true);\n        Call({\n          method: \"get\",\n          url: list_url,\n        })\n          .then((res) => {\n            setList(res);\n            setloading(false);\n          })\n          .catch((error) => {\n            setQuerying(false);\n            setloading(false);\n          });\n      }\n    } else {\n      if (setCustomUpdate !== undefined) setCustomUpdate(!custom_update);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [update]);\n  React.useEffect(() => {\n    if (Object.keys(editInfo).length > 0) setOpenEdit(true);\n    else setOpenEdit(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editInfo]);\n  return (\n    <>\n      <Container fluid>\n        {query_list != null && query_list.length > 0 ? (\n          <Row className=\"mt-5 mb-5\">\n            <div className=\"col\">\n              <Card\n                className=\"bg-default shadow\"\n                style={{ maxWidth: \"450px\", margin: \"auto\" }}\n              >\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">{query_title}</h3>\n                </CardHeader>\n                <CardBody>\n                  <Query\n                    query_list={query_list}\n                    initial_values={query_data}\n                    query={query}\n                    setquery={setquery}\n                    update={update}\n                    setUpdate={setUpdate}\n                    setQueryTags={setQueryTags}\n                    querying={querying}\n                  />\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        ) : null}\n\n        <Row className=\"mt-5 mb-5\">\n          <div className=\"col\">\n            <Card className=\"bg-default shadow\">\n              <CardHeader className=\"bg-transparent border-0\">\n                <h3 className=\"text-white mb-0\">{title}</h3>\n                {add ? (\n                  <Button\n                    color=\"primary\"\n                    style={{ display: \"flex\", alignItems: \"center\" }}\n                    onClick={() => setOpenAdd(!openAdd)}\n                  >\n                    Add New Record\n                    <i\n                      className=\"ni ni-fat-add\"\n                      style={{ fontSize: \"1.5rem\" }}\n                    />\n                  </Button>\n                ) : null}\n                <div\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    marginTop: \"1rem\",\n                  }}\n                >\n                  {query_tags.length > 0\n                    ? query_tags.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            maxWidth: \"250px\",\n                            marginRight: \"1rem\",\n                          }}\n                        >\n                          {element.title} : {element.value}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </CardHeader>\n              {CustomListComponent == undefined ? (\n                <List\n                  setOpenDelete={setOpenDelete}\n                  setOpenEdit={setOpenEdit}\n                  setDeleteInfo={setDeleteInfo}\n                  setEditInfo={setEditInfo}\n                  list={custom_list === undefined ? list : custom_list}\n                  list_head={list_head}\n                  edit={edit}\n                  remove={remove}\n                  loading={\n                    custom_loading !== undefined ? custom_loading : loading\n                  }\n                />\n              ) : (\n                <CustomListComponent\n                  list={list}\n                  list_head={list_head}\n                  loading={loading}\n                  url={list_url}\n                  setOpenDelete={setOpenDelete}\n                  setOpenEdit={setOpenEdit}\n                  setDeleteInfo={setDeleteInfo}\n                  setEditInfo={setEditInfo}\n                  update={update}\n                  setupdate={setUpdate}\n                  edit={edit}\n                  remove={remove}\n                />\n              )}\n            </Card>\n          </div>\n        </Row>\n        {edit && Object.keys(editInfo).length > 0 ? (\n          <Edit\n            open={openEdit}\n            setOpenEdit={setOpenEdit}\n            edit_values={editInfo}\n            update={update}\n            setUpdate={setUpdate}\n            edit_data={edit_data}\n            url={list_url}\n            setEditInfo={setEditInfo}\n            modal_size={modal_size}\n          />\n        ) : null}\n        {add ? (\n          <Add\n            url={list_url}\n            open={openAdd}\n            setOpenAdd={setOpenAdd}\n            add_data={add_data}\n            initial_values={add_initial_values}\n            update={update}\n            setUpdate={setUpdate}\n            modal_size={modal_size}\n          />\n        ) : null}\n\n        {remove ? (\n          <Delete\n            open={openDelete}\n            setOpenDelete={setOpenDelete}\n            id={deleteInfo}\n            update={update}\n            setUpdate={setUpdate}\n            url={list_url}\n          />\n        ) : null}\n      </Container>\n    </>\n  );\n}\n\nexport default Index;\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/Add.js",["339"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"../controls/InputField\";\nimport { ValidateInput } from \"./ValidateInput\";\nexport default function Add(props) {\n  const {\n    url,\n    open,\n    setOpenAdd,\n    add_data,\n    initial_values,\n    update,\n    setUpdate,\n    modal_size,\n  } = props;\n\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(add_data).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const alert_message_time = 2500;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { ...values };\n      const request = { method: \"post\", url: url, data: data };\n      Call(request)\n        .then((res) => {\n          setUpdate(!update);\n          setSuccessMessage(res.message);\n          setCalling(false);\n          resetForm();\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size={modal_size}\n        isOpen={open}\n        toggle={() => setOpenAdd(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Add\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setOpenAdd(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                {add_data.map((element, index) => {\n                  return element.customInput == undefined ? (\n                    <InputField\n                      key={index}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={calling}\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  ) : (\n                    <element.customInput\n                      key={index}\n                      title={element.title}\n                      children={element.children}\n                      this_value={values[element.name]}\n                      this_name={element.name}\n                      handleChange={handleInputChange}\n                      disabled={calling}\n                    />\n                  );\n                })}\n\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/Delete.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/Edit.js",["340","341"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"../controls/InputField\";\nimport { ValidateInput } from \"./ValidateInput\";\n\nexport default function Edit(props) {\n  const {\n    url,\n    open,\n    setOpenEdit,\n    edit_values,\n    update,\n    setUpdate,\n    setEditInfo,\n    edit_data,\n    modal_size,\n  } = props;\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const id = edit_values.id;\n  const { values, handleInputChange, errors, setErrors } = useForm(edit_values);\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(edit_data).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      return Object.values(temp).every((x) => x === false);\n  };\n\n  const alert_message_time = 2500;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setCalling(true);\n    if (validate()) {\n      const data = { ...values };\n      const request = { method: \"put\", url: url + \"/\" + id, data: data };\n      Call(request)\n        .then((res) => {\n          console.log(res);\n          setUpdate(!update);\n          setSuccessMessage(res.message);\n\n          setCalling(false);\n          setTimeout(() => {\n            if (open) setSuccessMessage(\"\");\n          }, alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setCalling(false);\n          setTimeout(() => {\n            if (open) setFailMessage(\"\");\n          }, alert_message_time);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size={modal_size}\n        isOpen={open}\n        toggle={() => {\n          if (open) setEditInfo({});\n          setOpenEdit(false);\n        }}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Edit\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => {\n              if (open) setEditInfo({});\n              setOpenEdit(false);\n            }}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                {edit_data.map((element, index) => {\n                  return element.customInput == undefined ? (\n                    <InputField\n                      key={index}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  ) : (\n                    <element.customInput\n                      key={index}\n                      title={element.title}\n                      children={element.children}\n                      this_value={values[element.name]}\n                      this_name={element.name}\n                      handleChange={handleInputChange}\n                      disabled={calling}\n                    />\n                  );\n                })}\n\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/List.js",[],"/mnt/Fast Projects/Web/school_argon/src/routes/routes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/DatePicker.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Select.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/FileUploadInput.js",["342"],"import React from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport FormFeedback from \"reactstrap/lib/FormFeedback\";\nimport Label from \"reactstrap/lib/Label\";\n\nexport default function TextInput(props) {\n  const {\n    name,\n    value,\n    placeholder,\n    invalid_msg = \"\",\n    valid_msg = \"\",\n    handleChange,\n    error,\n    ...other\n  } = props;\n  return (\n    <FormGroup>\n      <small className=\"text-muted\">{placeholder}</small>\n      <Input\n        type=\"file\"\n        name=\"file\"\n        id=\"exampleFile\"\n        accept=\"image/*\"\n        {...other}\n      />\n      <FormFeedback>{error ? invalid_msg : valid_msg}</FormFeedback>\n    </FormGroup>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/controls/InputField.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/CheckBoxArr.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/controls/Checkbox.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Religion.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Session.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/SchoolClass.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Department.js",["343"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function Department() {\n  const { class_list, session_list } = useContext(ClassDeptSessionContext);\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const add_data = [\n    {\n      placeholder: \"Department Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      required: true,\n      options: class_list,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      required: true,\n      options: session_list,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Department List\"\n        list_url=\"/settings/department\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Department\", identifier: \"name\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Session\", identifier: \"session\" },\n        ]}\n        query_data={{ class_id: -1, session_id: -1 }}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{ name: \"\", class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Subject.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Settings.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/PaymentCategory.js",["344"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function PaymentCategory() {\n  const [info_type, setInfoType] = React.useState(\"\");\n  return (\n    <div>\n      <Index\n        title=\"Payment Category List\"\n        list_url=\"/settings/payment_category\"\n        list_head={[\n          { title: \"Payment Category\", identifier: \"category_name\" },\n          { title: \"Info Type\", identifier: \"info_type\" },\n          { title: \"Info Options\", identifier: \"info_options\" },\n          { title: \"Default Amount\", identifier: \"default_amount\" },\n          { title: \"Recurring Type\", identifier: \"recurring_type\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                text: \"Selection\",\n                value: \"select\",\n              },\n              {\n                text: \"Text\",\n                value: \"text\",\n              },\n            ],\n            setState: setInfoType,\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: info_type == \"select\",\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"select\",\n            name: \"recurring_type\",\n            options: [\n              {\n                text: \"Monthly\",\n                value: \"Monthly\",\n              },\n              {\n                text: \"Occasion Based\",\n                value: \"Ocassion Based\",\n              },\n            ],\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                name: \"Selection\",\n                id: 1,\n              },\n              {\n                name: \"Text\",\n                id: 2,\n              },\n            ],\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: true,\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"number\",\n            name: \"recurring_type\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{\n          category_name: \"\",\n          info_type: \"\",\n          info_options: \"\",\n          default_amount: \"\",\n          recurring_type: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Permissions.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Users.js",["345"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Users() {\n  const [roles_list, setRolesList] = useState([]);\n  const user_type_list = [\n    { value: \"admin\", text: \"admin\" },\n    { value: \"teacher\", text: \"teacher\" },\n    { value: \"student\", text: \"student\" },\n  ];\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/role\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.name;\n        });\n        setRolesList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"User Type\",\n      type: \"select\",\n      name: \"user_type\",\n      options: [\n        { value: \"admin\", text: \"admin\" },\n        { value: \"teacher\", text: \"teacher\" },\n        { value: \"student\", text: \"student\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      required: true,\n    },\n    {\n      placeholder: \"User Role\",\n      type: \"select\",\n      name: \"role\",\n      options: roles_list,\n      required: true,\n    },\n    {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"User List\"\n        list_url=\"/settings/user\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"User Type\",\n            type: \"select\",\n            name: \"user_type\",\n            options: user_type_list,\n            required: true,\n          },\n        ]}\n        query_data={{ user_type: -1 }}\n        list_head={[\n          { title: \"Name\", identifier: \"name\" },\n          { title: \"Username\", identifier: \"username\" },\n          { title: \"User Type\", identifier: \"user_type\" },\n          { title: \"Roles\", identifier: \"role_name\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          name: \"\",\n          username: \"\",\n          user_type: \"\",\n          password: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Roles.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/GPA.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/Grade.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/Library.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/library/BooksCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/ProductCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/products/Products.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/Accounts.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/Exams.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/exams/ExamCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/crud/ValidateInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/Results.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/results/ResultCrud.js",[],"/mnt/Fast Projects/Web/school_argon/src/contexts/ClassDeptSessionContext.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/AssignSubject.js",["346","347"],"/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function AssignSubject() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [subject_list, setSubjectList] = useState([]);\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const [selected_query_session, setQuerySession] = useState(\"\");\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/subject\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"name\"] = element.subject_name;\n        });\n        setSubjectList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) => element.class_id == selected_class\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Subjects\",\n      type: \"checkboxarr\",\n      name: \"subjects\",\n      options: subject_list,\n      required: true,\n    },\n  ];\n  React.useEffect(() => {\n    console.log(selected_query_class);\n  }, [selected_query_class]);\n  return (\n    <div>\n      <Index\n        title=\"Assigned Subjects\"\n        list_url=\"/settings/assign_subject\"\n        query_title=\"Get Assigned Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setQuerySession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_query_class &&\n                element.session_id == selected_query_session\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{ class_id: -1, department_id: -1 }}\n        list_head={[\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n          { title: \"Subject\", identifier: \"name\" },\n        ]}\n        add={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ class_id: \"\", department_id: \"\", subjects: \"[]\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/crud/Query.js",["348","349","350"],"/* eslint-disable eqeqeq */\nimport InputField from \"components/controls/InputField\";\nimport { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport { Form } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { ValidateInput } from \"./ValidateInput\";\n\nexport default function Query(props) {\n  const {\n    setquery,\n    query_list,\n    querying,\n    initial_values,\n    update,\n    setUpdate,\n    setQueryTags,\n  } = props;\n  const [calling, setCalling] = useState(false);\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(query_list).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      let query_to_set = \"?\";\n      let query_tag_to_set = [];\n      query_list.map((element, index) => {\n        if (values[element.name] != -1 && values[element.name] != \"\") {\n          query_to_set += element.name + \"=\" + values[element.name] + \"&\";\n          let value =\n            element.type == \"select\" && values[element.name] != -1\n              ? element.options.filter(\n                  (option) => option.value == values[element.name]\n                )[0][\"text\"]\n              : values[element.name];\n          query_tag_to_set = [\n            ...query_tag_to_set,\n            { title: element.placeholder, value: value },\n          ];\n        }\n      });\n      setquery(query_to_set);\n      setQueryTags(query_tag_to_set);\n      setUpdate(!update);\n    } else setCalling(false);\n  };\n  return (\n    <>\n      <Form role=\"form\" onSubmit={handleSubmit}>\n        {query_list.length > 0\n          ? query_list.map((element, index) => (\n              <InputField\n                key={index}\n                type={element.type}\n                name={element.name}\n                placeholder={element.placeholder}\n                options={element.options}\n                value={values[element.name]}\n                error={errors[element.name]}\n                handleChange={handleInputChange}\n                setState={element.setState}\n                disabled={querying}\n              />\n            ))\n          : null}\n        <div className=\"text-center\" style={{ clear: \"left\" }}>\n          <Button\n            className=\"my-4\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={querying}\n          >\n            {querying ? (\n              <Spinner animation=\"border\" variant=\"dark\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountsReport.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/Students.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentsCrud.js",["351","352","353"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport ExtendedInput from \"./ExtendedInput\";\n\nexport default function AccountsCrud() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n  const [religion_list, setreligion_list] = useState([]);\n  const [extended_info, setextended_info] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/religion\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.religion_name;\n          element[\"value\"] = element.religion_name;\n        });\n        setreligion_list(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ method: \"get\", url: \"/settings/students_extended_info?use=true\" })\n      .then((res) => {\n        setextended_info(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  React.useEffect(() => console.log(extended_info), [extended_info]);\n\n  const add_data = [\n    {\n      placeholder: \"Student Name\",\n      type: \"text\",\n      name: \"student_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Student Image\",\n      type: \"file\",\n      name: \"student_image\",\n      required: false,\n    },\n    {\n      placeholder: \"Gender\",\n      type: \"select\",\n      name: \"gender\",\n      options: [\n        { text: \"Male\", value: \"Male\" },\n        { text: \"Female\", value: \"Female\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Religion\",\n      type: \"select\",\n      name: \"religion\",\n      options: religion_list,\n      required: true,\n    },\n    {\n      placeholder: \"Age\",\n      type: \"number\",\n      name: \"age\",\n      required: true,\n    },\n    {\n      placeholder: \"Primary Phone\",\n      type: \"text\",\n      name: \"primary_phone\",\n      required: true,\n    },\n    {\n      placeholder: \"Secondary Phone\",\n      type: \"text\",\n      name: \"secondary_phone\",\n      required: false,\n    },\n    {\n      placeholder: \"Student Email\",\n      type: \"email\",\n      name: \"student_email\",\n      required: false,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Student Role\",\n      type: \"number\",\n      name: \"role\",\n      required: true,\n    },\n    {\n      customInput: ExtendedInput,\n      title: \"Student's Additional Info\",\n      name: \"extended_info\",\n      children: extended_info,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Student Name\",\n      type: \"text\",\n      name: \"student_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Student Image\",\n      type: \"file\",\n      name: \"student_image\",\n      required: false,\n    },\n    {\n      placeholder: \"Gender\",\n      type: \"select\",\n      name: \"gender\",\n      options: [\n        { text: \"Male\", value: \"Male\" },\n        { text: \"Female\", value: \"Female\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Religion\",\n      type: \"select\",\n      name: \"religion\",\n      options: religion_list,\n      required: true,\n    },\n    {\n      placeholder: \"Age\",\n      type: \"number\",\n      name: \"age\",\n      required: true,\n    },\n    {\n      placeholder: \"Primary Phone\",\n      type: \"text\",\n      name: \"primary_phone\",\n      required: true,\n    },\n    {\n      placeholder: \"Secondary Phone\",\n      type: \"text\",\n      name: \"secondary_phone\",\n      required: false,\n    },\n    {\n      placeholder: \"Student Email\",\n      type: \"email\",\n      name: \"student_email\",\n      required: false,\n    },\n    {\n      customInput: ExtendedInput,\n      title: \"Student's Additional Info\",\n      name: \"extended_info\",\n      children: extended_info,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student List\"\n        list_url=\"/students/student\"\n        list_head={[\n          {\n            title: \"Student ID\",\n            identifier: \"student_id\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Age\",\n            identifier: \"age\",\n          },\n          {\n            title: \"Gender\",\n            identifier: \"gender\",\n          },\n          {\n            title: \"Religion\",\n            identifier: \"religion\",\n          },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={edit_data}\n        add_initial_values={{\n          student_name: \"\",\n          student_image: \"\",\n          gender: -1,\n          religion: -1,\n          age: \"\",\n          primary_phone: \"\",\n          secondary_phone: \"\",\n          student_email: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n          extended_info: {},\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Religion\",\n            type: \"select\",\n            name: \"religion\",\n            options: religion_list,\n            required: false,\n          },\n          {\n            placeholder: \"Gender\",\n            type: \"select\",\n            name: \"gender\",\n            options: [\n              { text: \"Male\", value: \"Male\" },\n              { text: \"Female\", value: \"Female\" },\n            ],\n            required: false,\n          },\n          {\n            placeholder: \"Age\",\n            type: \"number\",\n            name: \"age\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          student_id: \"\",\n          religion: -1,\n          gender: -1,\n          age: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/AssignClassStudent.js",["354","355","356","357"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function AccountsCrud() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const add_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      required: true,\n    },\n\n    {\n      placeholder: \"Student ID\",\n      type: \"text\",\n      name: \"student_id\",\n      required: true,\n    },\n    {\n      placeholder: \"Student Role\",\n      type: \"number\",\n      name: \"role\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student List\"\n        list_url=\"/students/student_assignment\"\n        list_head={[\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n        ]}\n        add={true}\n        remove={true}\n        add_data={add_data}\n        add_initial_values={{\n          student_id: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/Employees.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeCrud.js",["358","359","360","361"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport ExtendedInput from \"../students/ExtendedInput\";\n\nexport default function AccountsCrud() {\n  const [religion_list, setreligion_list] = useState([]);\n  const [employee_post_list, setEmployeePostList] = useState([]);\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n\n  const [selected_employee_type, setSelectedEmployeeType] = useState([]);\n\n  const [extended_info, setextended_info] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/religion\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.religion_name;\n          element[\"value\"] = element.religion_name;\n        });\n        setreligion_list(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ method: \"get\", url: \"/employees/employee_post\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_post;\n          element[\"value\"] = element.employee_post;\n        });\n        setEmployeePostList(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ method: \"get\", url: \"/settings/employees_extended_info?use=true\" })\n      .then((res) => {\n        setextended_info(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const add_data = [\n    {\n      placeholder: \"Employee Name\",\n      type: \"text\",\n      name: \"employee_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Employee Image\",\n      type: \"file\",\n      name: \"employee_image\",\n      required: false,\n    },\n    {\n      placeholder: \"Employee Type\",\n      type: \"select\",\n      name: \"employee_type\",\n      options: employee_type_list,\n      setState: setSelectedEmployeeType,\n      required: true,\n    },\n    {\n      placeholder: \"Employee Post\",\n      type: \"select\",\n      name: \"employee_post\",\n      options: employee_post_list.filter(\n        (element) => element.employee_type == selected_employee_type\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Gender\",\n      type: \"select\",\n      name: \"employee_gender\",\n      options: [\n        { text: \"Male\", value: \"Male\" },\n        { text: \"Female\", value: \"Female\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Religion\",\n      type: \"select\",\n      name: \"employee_religion\",\n      options: religion_list,\n      required: true,\n    },\n    {\n      placeholder: \"Age\",\n      type: \"number\",\n      name: \"employee_age\",\n      required: true,\n    },\n    {\n      placeholder: \"Primary Phone\",\n      type: \"text\",\n      name: \"employee_primary_phone\",\n      required: true,\n    },\n    {\n      placeholder: \"Secondary Phone\",\n      type: \"text\",\n      name: \"employee_secondary_phone\",\n      required: false,\n    },\n    {\n      placeholder: \"Employee Email\",\n      type: \"email\",\n      name: \"employee_email\",\n      required: false,\n    },\n    {\n      customInput: ExtendedInput,\n      title: \"Employee's Additional Info\",\n      name: \"employee_extended_info\",\n      children: extended_info,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee List\"\n        list_url=\"/employees/employee\"\n        list_head={[\n          {\n            title: \"Employee ID\",\n            identifier: \"employee_id\",\n          },\n          {\n            title: \"Employee Name\",\n            identifier: \"employee_name\",\n          },\n          {\n            title: \"Employee Type\",\n            identifier: \"employee_type\",\n          },\n          {\n            title: \"Employee Post\",\n            identifier: \"employee_post\",\n          },\n          {\n            title: \"Age\",\n            identifier: \"employee_age\",\n          },\n          {\n            title: \"Gender\",\n            identifier: \"employee_gender\",\n          },\n          {\n            title: \"Religion\",\n            identifier: \"employee_religion\",\n          },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{\n          employee_name: \"\",\n          employee_image: \"\",\n          employee_type: -1,\n          employee_post: -1,\n          employee_gender: -1,\n          employee_religion: -1,\n          employee_age: \"\",\n          employee_primary_phone: \"\",\n          employee_secondary_phone: \"\",\n          employee_email: \"\",\n          employee_extended_info: {},\n        }}\n        query_title=\"Query Employee List\"\n        query_list={[\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Religion\",\n            type: \"select\",\n            name: \"religion\",\n            options: religion_list,\n            required: false,\n          },\n          {\n            placeholder: \"Gender\",\n            type: \"select\",\n            name: \"gender\",\n            options: [\n              { text: \"Male\", value: \"Male\" },\n              { text: \"Female\", value: \"Female\" },\n            ],\n            required: false,\n          },\n          {\n            placeholder: \"Age\",\n            type: \"number\",\n            name: \"age\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          employee_id: \"\",\n          employee_type: -1,\n          religion: -1,\n          gender: -1,\n          age: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/reportWebVitals.js",[],"/mnt/Fast Projects/Web/school_argon/src/serviceWorkerRegistration.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeeTypes.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/employees/EmployeePosts.js",["362"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function EmployeePosts() {\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.id;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  });\n  const send_data = [\n    {\n      placeholder: \"Employee Type\",\n      type: \"select\",\n      name: \"employee_type_id\",\n      options: employee_type_list,\n      required: true,\n    },\n    {\n      placeholder: \"Employee Post\",\n      type: \"text\",\n      name: \"employee_post\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Post List\"\n        list_url=\"/employees/employee_post\"\n        list_head={[{ title: \"Employee Post\", identifier: \"employee_post\" }]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ employee_post: \"\", employee_type_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/accounts/AccountBalance.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/ExtendedInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/StudentsExtendedInfo.js",["363"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function StudentsExtendedInfo() {\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Students Extended Info List\"\n        list_url=\"/settings/students_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/settings/EmployeesExtendedInfo.js",["364"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function TeachersExtendedInfo() {\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Extended Info List\"\n        list_url=\"/settings/employees_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/Payment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/students/StudentPaymentFees.js",["365"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function StudentPaymentFees() {\n  const [payment_category_list, setPaymentCategoryList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/payment_category?use=true\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.category_name;\n        });\n        setPaymentCategoryList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const add_data = [\n    {\n      placeholder: \"Student ID\",\n      type: \"text\",\n      name: \"student_id\",\n      required: true,\n    },\n    {\n      placeholder: \"Payment Category\",\n      type: \"select\",\n      name: \"payment_category_id\",\n      options: payment_category_list,\n      required: true,\n    },\n    {\n      placeholder: \"Default Fees\",\n      type: \"text\",\n      name: \"student_default_fees\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student Payment Fees List\"\n        list_url=\"/students/assign_fees\"\n        query_title=\"Query Student Payment Fees\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"std_id\",\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Student ID\", identifier: \"std_id\" },\n          { title: \"Student Name\", identifier: \"student_name\" },\n          { title: \"Payment\", identifier: \"payment_category\" },\n          { title: \"Default Fees\", identifier: \"student_default_fees\" },\n        ]}\n        query_data={{ std_id: \"\" }}\n        add={true}\n        edit={true}\n        remove={true}\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{ name: \"\", class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPayment.js",["366","367"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport StudentPaymentList from \"./StudentPaymentList\";\n\nexport default function StudentPayment() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        title=\"Student Payment\"\n        list_url=\"/students/student_assignment\"\n        CustomListComponent={StudentPaymentList}\n        query_title=\"Query Student List\"\n        list_head={[\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Student Role\",\n            identifier: \"role\",\n          },\n        ]}\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/StudentPaymentList.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/AddStudentPayment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/student_payment/PaymentInput.js",["368","369","370","371","372"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport InputField from \"components/controls/InputField\";\nimport React, { useState } from \"react\";\n\nexport default function PaymentInput(props) {\n  let {\n    clear,\n    setclear,\n    handleInputChange,\n    disabled,\n    index,\n    base_value,\n    student_payment_fees = [],\n    payment_category_list,\n    error,\n  } = props;\n  const [payment_category, setPaymentCategory] = useState(\"\");\n  const [payment_info_type, setPaymentInfoType] = useState(\"\");\n  const [payment_info_options, setPaymentInfoOptions] = useState(\"\");\n\n  const new_value = {\n    payment_category: \"\",\n    payment_info: \"\",\n    payment_amount: \"\",\n    paid_amount: \"\",\n  };\n  const [vals, setValues] = useState(new_value);\n  React.useEffect(() => {\n    const payment_cat = payment_category_list.filter(\n      (element) => element.category_name == payment_category\n    );\n    if (payment_cat.length > 0) {\n      setPaymentInfoType(payment_cat[0][\"info_type\"]);\n      setPaymentInfoOptions(payment_cat[0][\"info_options\"]);\n      const std_fees = student_payment_fees.filter(\n        (element) => element.student_payment_category == payment_cat[0].id\n      );\n      let fees = \"\";\n      if (std_fees.length == 0) fees = payment_cat[0][\"default_amount\"];\n      else fees = std_fees[0][\"student_default_fees\"];\n      setValues({\n        ...vals,\n        payment_amount: fees,\n        payment_info: payment_cat[0].info_type == \"select\" ? -1 : \"\",\n      });\n    }\n  }, [payment_category]);\n  React.useEffect(() => {\n    if (clear) {\n      setValues(new_value);\n      setclear(false);\n    }\n  }, [clear]);\n\n  const fields = [\n    {\n      placeholder: \"Payment Category\",\n      type: \"select\",\n      name: \"payment_category\",\n      options: payment_category_list,\n      setState: setPaymentCategory,\n      required: true,\n    },\n    {\n      placeholder: \"Payment Info\",\n      type: payment_info_type,\n      name: \"payment_info\",\n      options: payment_info_options,\n      required: false,\n    },\n    {\n      placeholder: \"Fees\",\n      type: \"number\",\n      name: \"payment_amount\",\n      required: true,\n    },\n    {\n      placeholder: \"Amount\",\n      type: \"number\",\n      name: \"paid_amount\",\n      required: true,\n    },\n  ];\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    vals[name] = value;\n    handleInputChange(index, vals);\n  };\n  return (\n    <div className=\"bg-dark px-4 py-4 my-4 mx-4\" style={{ borderRadius: 10 }}>\n      {fields.map((input, index) => (\n        <InputField\n          key={index}\n          type={input.type}\n          placeholder={input.placeholder}\n          name={input.name}\n          handleChange={handleChange}\n          value={vals[input.name]}\n          error={error[input.name]}\n          disabled={disabled}\n          options={input.options}\n          setState={input.setState}\n        />\n      ))}\n    </div>\n  );\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePayment.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentList.js",["373","374","375"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport DuePaymentModal from \"./DuePaymentModal\";\n\nexport default function DuePaymentList(props) {\n  const {\n    list,\n    list_head,\n    loading,\n    update,\n    setupdate,\n    remove,\n    edit,\n    setOpenEdit,\n    setOpenDelete,\n    setDeleteInfo,\n    setEditInfo,\n  } = props;\n  const [open, setopen] = useState(false);\n  const [values, setvalues] = useState([]);\n\n  const [query_data, setQueryData] = useState({});\n  const handleChange = (element) => {\n    if (values.filter((val) => val.id == element.id).length > 0) {\n      const new_val = values.filter((val) => val.id != element.id);\n      setvalues(new_val);\n    } else {\n      setvalues([\n        ...values,\n        {\n          id: element.id,\n          payment_id: element.payment_id,\n          payment_category: \"Due: \" + element.payment_category,\n          payment_info: element.payment_info,\n          payment_amount: element.fees,\n          paid_amount: \"\",\n        },\n      ]);\n    }\n    setQueryData({\n      student_identifier: element.student_identifier,\n      student_id: element.student_id,\n      student_name: element.student_name,\n      session_id: element.session_id,\n      session: element.session,\n    });\n  };\n  React.useEffect(() => {\n    setQueryData({});\n    setvalues([]);\n  }, [loading]);\n  return (\n    <>\n      {list.length > 0 && values.length > 0 ? (\n        <Button\n          color=\"warning\"\n          style={{\n            maxWidth: \"200px\",\n            marginLeft: \"1.5rem\",\n            marginBottom: \"1.5rem\",\n          }}\n          onClick={() => {\n            setopen(true);\n            console.log(values);\n          }}\n        >\n          Pay Due\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">#</th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            {remove ? <th scope=\"col\">Delete</th> : null}\n            {edit ? <th scope=\"col\">Edit</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <th>\n                  <InputField\n                    key={index}\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    name={index}\n                    checked={\n                      values.filter((val) => val.id == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(element);\n                    }}\n                  />\n                </th>\n                <th scope=\"row\">{index + 1}</th>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"normal\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <DeleteButton\n                  remove={remove}\n                  id={element.id}\n                  setOpenDelete={setOpenDelete}\n                  setDeleteInfo={setDeleteInfo}\n                />\n                <EditButton\n                  edit={edit}\n                  element={element}\n                  setOpenEdit={setOpenEdit}\n                  setEditInfo={setEditInfo}\n                />\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {list.length > 0 ? (\n        <DuePaymentModal\n          data={values}\n          setPaymentModal={setopen}\n          open={open}\n          query_data={query_data}\n          url=\"/payments/student_due/pay\"\n          setupdate={setupdate}\n          update={update}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\n  return remove ? (\n    <td>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          setOpenDelete(true);\n          setDeleteInfo(id);\n        }}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </td>\n  ) : null;\n}\n\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\n  const change = () => {\n    setEditInfo(element);\n  };\n  return edit ? (\n    <td>\n      <Button color=\"primary\" onClick={change}>\n        <i className=\"fas fa-pencil-alt\" />\n      </Button>\n    </td>\n  ) : null;\n}\n","/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/DuePaymentModal.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/due_payment/PaymentInput.js",[],"/mnt/Fast Projects/Web/school_argon/src/components/dashboard/payments/PaymentReport.js",[],{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":22,"column":18,"nodeType":"382","messageId":"383","endLine":22,"endColumn":20},{"ruleId":"380","severity":1,"message":"384","line":166,"column":36,"nodeType":"382","messageId":"383","endLine":166,"endColumn":38},{"ruleId":"380","severity":1,"message":"384","line":120,"column":46,"nodeType":"382","messageId":"383","endLine":120,"endColumn":48},{"ruleId":"380","severity":1,"message":"384","line":131,"column":46,"nodeType":"382","messageId":"383","endLine":131,"endColumn":48},{"ruleId":"380","severity":1,"message":"381","line":141,"column":42,"nodeType":"382","messageId":"383","endLine":141,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":4,"column":8,"nodeType":"387","messageId":"388","endLine":4,"endColumn":13},{"ruleId":"385","severity":1,"message":"389","line":8,"column":10,"nodeType":"387","messageId":"388","endLine":8,"endColumn":30},{"ruleId":"380","severity":1,"message":"384","line":49,"column":33,"nodeType":"382","messageId":"383","endLine":49,"endColumn":35},{"ruleId":"390","severity":1,"message":"391","line":15,"column":27,"nodeType":"392","messageId":"393","endLine":15,"endColumn":29},{"ruleId":"385","severity":1,"message":"394","line":13,"column":10,"nodeType":"387","messageId":"388","endLine":13,"endColumn":26},{"ruleId":"390","severity":1,"message":"391","line":21,"column":27,"nodeType":"392","messageId":"393","endLine":21,"endColumn":29},{"ruleId":"385","severity":1,"message":"395","line":20,"column":10,"nodeType":"387","messageId":"388","endLine":20,"endColumn":17},{"ruleId":"385","severity":1,"message":"396","line":21,"column":57,"nodeType":"387","messageId":"388","endLine":21,"endColumn":66},{"ruleId":"390","severity":1,"message":"391","line":50,"column":39,"nodeType":"392","messageId":"393","endLine":50,"endColumn":41},{"ruleId":"390","severity":1,"message":"391","line":18,"column":27,"nodeType":"392","messageId":"393","endLine":18,"endColumn":29},{"ruleId":"380","severity":1,"message":"384","line":109,"column":28,"nodeType":"382","messageId":"383","endLine":109,"endColumn":30},{"ruleId":"380","severity":1,"message":"384","line":110,"column":30,"nodeType":"382","messageId":"383","endLine":110,"endColumn":32},{"ruleId":"380","severity":1,"message":"384","line":35,"column":28,"nodeType":"382","messageId":"383","endLine":35,"endColumn":30},{"ruleId":"380","severity":1,"message":"384","line":36,"column":30,"nodeType":"382","messageId":"383","endLine":36,"endColumn":32},{"ruleId":"380","severity":1,"message":"384","line":119,"column":34,"nodeType":"382","messageId":"383","endLine":119,"endColumn":36},{"ruleId":"380","severity":1,"message":"384","line":120,"column":36,"nodeType":"382","messageId":"383","endLine":120,"endColumn":38},{"ruleId":"390","severity":1,"message":"391","line":17,"column":27,"nodeType":"392","messageId":"393","endLine":17,"endColumn":29},{"ruleId":"390","severity":1,"message":"391","line":26,"column":27,"nodeType":"392","messageId":"393","endLine":26,"endColumn":29},{"ruleId":"390","severity":1,"message":"391","line":35,"column":27,"nodeType":"392","messageId":"393","endLine":35,"endColumn":29},{"ruleId":"380","severity":1,"message":"384","line":75,"column":44,"nodeType":"382","messageId":"383","endLine":75,"endColumn":46},{"ruleId":"390","severity":1,"message":"391","line":11,"column":27,"nodeType":"392","messageId":"393","endLine":11,"endColumn":29},{"ruleId":"380","severity":1,"message":"384","line":30,"column":22,"nodeType":"382","messageId":"383","endLine":30,"endColumn":24},{"ruleId":"380","severity":1,"message":"384","line":30,"column":22,"nodeType":"382","messageId":"383","endLine":30,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":10,"column":27,"nodeType":"392","messageId":"393","endLine":10,"endColumn":29},{"ruleId":"380","severity":1,"message":"384","line":69,"column":34,"nodeType":"382","messageId":"383","endLine":69,"endColumn":36},{"ruleId":"380","severity":1,"message":"384","line":70,"column":36,"nodeType":"382","messageId":"383","endLine":70,"endColumn":38},{"ruleId":"385","severity":1,"message":"397","line":12,"column":5,"nodeType":"387","messageId":"388","endLine":12,"endColumn":15},{"ruleId":"380","severity":1,"message":"384","line":30,"column":42,"nodeType":"382","messageId":"383","endLine":30,"endColumn":44},{"ruleId":"380","severity":1,"message":"384","line":36,"column":55,"nodeType":"382","messageId":"383","endLine":36,"endColumn":57},{"ruleId":"380","severity":1,"message":"384","line":39,"column":27,"nodeType":"382","messageId":"383","endLine":39,"endColumn":29},{"ruleId":"380","severity":1,"message":"384","line":44,"column":48,"nodeType":"382","messageId":"383","endLine":44,"endColumn":50},{"ruleId":"380","severity":1,"message":"384","line":28,"column":39,"nodeType":"382","messageId":"383","endLine":28,"endColumn":41},{"ruleId":"380","severity":1,"message":"381","line":29,"column":53,"nodeType":"382","messageId":"383","endLine":29,"endColumn":55},{"ruleId":"380","severity":1,"message":"384","line":103,"column":53,"nodeType":"382","messageId":"383","endLine":103,"endColumn":55},"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","'selected_query_class' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'selected_session' is assigned a value but never used.","'calling' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'base_value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]