[{"J:\\Web\\school_argon\\src\\index.js":"1","J:\\Web\\school_argon\\src\\serviceWorkerRegistration.js":"2","J:\\Web\\school_argon\\src\\App.js":"3","J:\\Web\\school_argon\\src\\reportWebVitals.js":"4","J:\\Web\\school_argon\\src\\ClearCache.js":"5","J:\\Web\\school_argon\\src\\routers\\WebsiteRouter.js":"6","J:\\Web\\school_argon\\src\\routers\\AuthRouter.js":"7","J:\\Web\\school_argon\\src\\routers\\PrintRouter.js":"8","J:\\Web\\school_argon\\src\\pages\\Login.js":"9","J:\\Web\\school_argon\\src\\pages\\student\\Dashboard.js":"10","J:\\Web\\school_argon\\src\\pages\\teacher\\Dashboard.js":"11","J:\\Web\\school_argon\\src\\components\\website\\Index.js":"12","J:\\Web\\school_argon\\src\\pages\\admin\\dashboard\\Dashboard.js":"13","J:\\Web\\school_argon\\src\\routers\\createRoutes.js":"14","J:\\Web\\school_argon\\src\\components\\useForm.js":"15","J:\\Web\\school_argon\\src\\pages\\student\\TopBar.js":"16","J:\\Web\\school_argon\\src\\pages\\teacher\\TopBar.js":"17","J:\\Web\\school_argon\\src\\components\\controls\\Controls.js":"18","J:\\Web\\school_argon\\src\\pages\\admin\\dashboard\\TopBar.js":"19","J:\\Web\\school_argon\\src\\services\\API\\Call.js":"20","J:\\Web\\school_argon\\src\\components\\website\\FrontEndRouter.js":"21","J:\\Web\\school_argon\\src\\routes\\routes.js":"22","J:\\Web\\school_argon\\src\\routers\\StudentDashboardRouter.js":"23","J:\\Web\\school_argon\\src\\routers\\TeacherDashboardRouter.js":"24","J:\\Web\\school_argon\\src\\routes\\print_routes.js":"25","J:\\Web\\school_argon\\src\\routes\\student_routes.js":"26","J:\\Web\\school_argon\\src\\routes\\teacher_routes.js":"27","J:\\Web\\school_argon\\src\\contexts\\ClassDeptSessionContext.js":"28","J:\\Web\\school_argon\\src\\routers\\AdminRouter.js":"29","J:\\Web\\school_argon\\src\\components\\dashboard\\Sidebar.js":"30","J:\\Web\\school_argon\\src\\components\\controls\\DatePicker.js":"31","J:\\Web\\school_argon\\src\\components\\controls\\Select.js":"32","J:\\Web\\school_argon\\src\\components\\controls\\FileUploadInput.js":"33","J:\\Web\\school_argon\\src\\components\\controls\\CheckBoxArr.js":"34","J:\\Web\\school_argon\\src\\components\\controls\\Checkbox.js":"35","J:\\Web\\school_argon\\src\\services\\API\\Api.js":"36","J:\\Web\\school_argon\\src\\services\\API\\CSRF.js":"37","J:\\Web\\school_argon\\src\\components\\controls\\TextInput.js":"38","J:\\Web\\school_argon\\src\\components\\website\\Albums.js":"39","J:\\Web\\school_argon\\src\\components\\website\\Pages.js":"40","J:\\Web\\school_argon\\src\\components\\website\\SubPages.js":"41","J:\\Web\\school_argon\\src\\components\\website\\Employees.js":"42","J:\\Web\\school_argon\\src\\components\\website\\Home.js":"43","J:\\Web\\school_argon\\src\\components\\website\\Notifications.js":"44","J:\\Web\\school_argon\\src\\components\\dashboard\\Dashboard.js":"45","J:\\Web\\school_argon\\src\\components\\website\\home\\Footer.js":"46","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Religion.js":"47","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\EmployeeAttendanceTime.js":"48","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Settings.js":"49","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\WeekDays.js":"50","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\StudentAttendanceTime.js":"51","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\Products.js":"52","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\Accounts.js":"53","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Exams.js":"54","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\Students.js":"55","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\Results.js":"56","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\Library.js":"57","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\Payment.js":"58","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeesPhonebook.js":"59","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\Employees.js":"60","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceReportDay.js":"61","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceReportMonth.js":"62","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\SubPages.js":"63","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Album.js":"64","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\WebsiteSettings.js":"65","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Notifications.js":"66","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Gallery.js":"67","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Articles.js":"68","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Testimonial.js":"69","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\SchoolSpecialty.js":"70","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Slideshow.js":"71","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\AboutSchool.js":"72","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Figures.js":"73","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\StudentAppMessage.js":"74","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\SendSMS.js":"75","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\EmployeeAppMessage.js":"76","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\EmployeeManualAttendance.js":"77","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendance.js":"78","J:\\Web\\school_argon\\src\\components\\website\\home\\Notification.js":"79","J:\\Web\\school_argon\\src\\components\\website\\home\\NavBar.js":"80","J:\\Web\\school_argon\\src\\components\\website\\home\\TopBar.js":"81","J:\\Web\\school_argon\\src\\components\\website\\home\\Albums.js":"82","J:\\Web\\school_argon\\src\\components\\website\\home\\Figures.js":"83","J:\\Web\\school_argon\\src\\components\\website\\home\\Welcome.js":"84","J:\\Web\\school_argon\\src\\components\\website\\home\\Specialty.js":"85","J:\\Web\\school_argon\\src\\components\\website\\home\\Testimonial.js":"86","J:\\Web\\school_argon\\src\\components\\website\\home\\Teachers.js":"87","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignID.js":"88","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignID.js":"89","J:\\Web\\school_argon\\src\\components\\website\\home\\Slideshow.js":"90","J:\\Web\\school_argon\\src\\components\\website\\home\\HighLights.js":"91","J:\\Web\\school_argon\\src\\components\\dashboard\\createLinks.js":"92","J:\\Web\\school_argon\\src\\components\\teachers\\Dashboard.js":"93","J:\\Web\\school_argon\\src\\components\\teachers\\students\\StudentsCrud.js":"94","J:\\Web\\school_argon\\src\\components\\teachers\\message\\EmployeeAppMessage.js":"95","J:\\Web\\school_argon\\src\\components\\teachers\\message\\StudentAppMessage.js":"96","J:\\Web\\school_argon\\src\\components\\students\\results\\ResultPublishing.js":"97","J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\ID.js":"98","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendanceList.js":"99","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\ManualAttendanceList.js":"100","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceListMonth.js":"101","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Pages.js":"102","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceListDay.js":"103","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeeTypes.js":"104","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeePosts.js":"105","J:\\Web\\school_argon\\src\\components\\website\\home\\MenuBar.js":"106","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeeCrud.js":"107","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignList.js":"108","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignList.js":"109","J:\\Web\\school_argon\\src\\components\\students\\results\\ResultList.js":"110","J:\\Web\\school_argon\\src\\components\\students\\Dashboard.js":"111","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Exams.js":"112","J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendance.js":"113","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceReportDay.js":"114","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceReportMonth.js":"115","J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReport.js":"116","J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReceipt.js":"117","J:\\Web\\school_argon\\src\\components\\students\\payments\\due_payment\\DuePayment.js":"118","J:\\Web\\school_argon\\src\\components\\students\\message\\AppMessage.js":"119","J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\IDCard.js":"120","J:\\Web\\school_argon\\src\\components\\students\\attendance\\StudentsAttendanceReportDay.js":"121","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\Admit.js":"122","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceReportMonth.js":"123","J:\\Web\\school_argon\\src\\components\\print\\payments\\Receipt.js":"124","J:\\Web\\school_argon\\src\\components\\print\\payments\\DueList.js":"125","J:\\Web\\school_argon\\src\\components\\print\\students\\StudentsAttendance.js":"126","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeeAttendance.js":"127","J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\StudentsAttendanceMonth.js":"128","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\EmployeesAttendanceMonth.js":"129","J:\\Web\\school_argon\\src\\components\\print\\accounts\\Accounts.js":"130","J:\\Web\\school_argon\\src\\components\\print\\result\\ResultCard.js":"131","J:\\Web\\school_argon\\src\\components\\print\\payments\\PaymentList.js":"132","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeeList.js":"133","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeePhonebook.js":"134","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\Tabulation.js":"135","J:\\Web\\school_argon\\src\\components\\print\\Querytags.js":"136","J:\\Web\\school_argon\\src\\components\\print\\students\\Phonebook.js":"137","J:\\Web\\school_argon\\src\\components\\print\\students\\StudentList.js":"138","J:\\Web\\school_argon\\src\\components\\controls\\MyEditor.js":"139","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReceipt.js":"140","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReport.js":"141","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendanceModel.js":"142","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\ManualAttendanceModel.js":"143","J:\\Web\\school_argon\\src\\components\\print\\List.js":"144","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\EmployeeAttendanceTable.js":"145","J:\\Web\\school_argon\\src\\components\\crud\\Add.js":"146","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\ExtendedInput.js":"147","J:\\Web\\school_argon\\src\\components\\crud\\Index.js":"148","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignModal.js":"149","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignModal.js":"150","J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\ICard.js":"151","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceListMonth.js":"152","J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReceiptList.js":"153","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceListDay.js":"154","J:\\Web\\school_argon\\src\\components\\print\\PrintOptions.js":"155","J:\\Web\\school_argon\\src\\components\\students\\payments\\due_payment\\DuePaymentList.js":"156","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceListMonth.js":"157","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceListDay.js":"158","J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendanceList.js":"159","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\ExamCrud.js":"160","J:\\Web\\school_argon\\src\\components\\print\\result\\ResultCardTable.js":"161","J:\\Web\\school_argon\\src\\components\\print\\payments\\Due.js":"162","J:\\Web\\school_argon\\src\\components\\print\\accounts\\List.js":"163","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\FindBooks.js":"164","J:\\Web\\school_argon\\src\\components\\print\\payments\\List.js":"165","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\AdmitCard.js":"166","J:\\Web\\school_argon\\src\\components\\print\\SchoolInfo.js":"167","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\Tabulation.js":"168","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\Marks.js":"169","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePayment.js":"170","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\StudentPayment.js":"171","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\BooksOperation.js":"172","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BooksCategoryCrud.js":"173","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BooksCrud.js":"174","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultPublishing.js":"175","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultCrud.js":"176","J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\List.js":"177","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\List.js":"178","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceReportMonth.js":"179","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\StudentsAttendanceReportDay.js":"180","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentsPhonebook.js":"181","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\documents\\StudentsAdmitCard.js":"182","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReceiptList.js":"183","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\TabulationList.js":"184","J:\\Web\\school_argon\\src\\components\\print\\ListTable.js":"185","J:\\Web\\school_argon\\src\\components\\crud\\ValidateInput.js":"186","J:\\Web\\school_argon\\src\\components\\controls\\InputField.js":"187","J:\\Web\\school_argon\\src\\components\\crud\\Query.js":"188","J:\\Web\\school_argon\\src\\components\\crud\\List.js":"189","J:\\Web\\school_argon\\src\\components\\crud\\Delete.js":"190","J:\\Web\\school_argon\\src\\components\\crud\\Edit.js":"191","J:\\Web\\school_argon\\src\\components\\students\\attendance\\StudentsAttendanceTable.js":"192","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\EmployeeAttendanceTable.js":"193","J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendanceModel.js":"194","J:\\Web\\school_argon\\src\\components\\print\\payments\\DueTable.js":"195","J:\\Web\\school_argon\\src\\components\\print\\accounts\\ListTable.js":"196","J:\\Web\\school_argon\\src\\components\\print\\payments\\ListTable.js":"197","J:\\Web\\school_argon\\src\\components\\print\\result\\ExamRow.js":"198","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkList.js":"199","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\Books.js":"200","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\PublishList.js":"201","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultExamInput.js":"202","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\StudentPaymentList.js":"203","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePaymentList.js":"204","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\TabulationList.js":"205","J:\\Web\\school_argon\\src\\components\\print\\result\\TotalRow.js":"206","J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\ListTable.js":"207","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\ListTable.js":"208","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\AdCard.js":"209","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\SchoolInfo.js":"210","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\documents\\StudentsIDCard.js":"211","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentPaymentFees.js":"212","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\AssignClassStudent.js":"213","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\ExamCrud.js":"214","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceListDay.js":"215","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceListMonth.js":"216","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountsReport.js":"217","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountsCrud.js":"218","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentsCrud.js":"219","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountBalance.js":"220","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\InstituteInfo.js":"221","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\ProductCrud.js":"222","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\EmployeesExtendedInfo.js":"223","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\StudentsExtendedInfo.js":"224","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\Tabulation.js":"225","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\Marks.js":"226","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\AssignSubject.js":"227","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Grade.js":"228","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\ProductsOperation.js":"229","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\TableRow.js":"230","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\GPA.js":"231","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Roles.js":"232","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Permissions.js":"233","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\PaymentCategory.js":"234","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Subject.js":"235","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Users.js":"236","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\SchoolClass.js":"237","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Department.js":"238","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Session.js":"239","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkAssignModal.js":"240","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssuedList.js":"241","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\PublishModal.js":"242","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\AddStudentPayment.js":"243","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePaymentModal.js":"244","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\TableRow.js":"245","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\StudentsAttendanceTable.js":"246","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\class_assignment\\StudentList.js":"247","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkList.js":"248","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\CustomBookList.js":"249","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\TabulationList.js":"250","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\Products.js":"251","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkAssignment.js":"252","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\ReturnModal.js":"253","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssuedBookDelete.js":"254","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\PaymentInput.js":"255","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\PaymentInput.js":"256","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\class_assignment\\Promote.js":"257","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkAssignModal.js":"258","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\SellModal.js":"259","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssueModal.js":"260","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\CustomProductList.js":"261","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\TableRow.js":"262","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkAssignment.js":"263","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\SellModal.js":"264"},{"size":631,"mtime":1610168291916,"results":"265","hashOfConfig":"266"},{"size":5064,"mtime":1610168198179,"results":"267","hashOfConfig":"266"},{"size":355,"mtime":1615435134316,"results":"268","hashOfConfig":"266"},{"size":364,"mtime":1610168263892,"results":"269","hashOfConfig":"266"},{"size":1788,"mtime":1618202297435,"results":"270","hashOfConfig":"266"},{"size":966,"mtime":1614000085116,"results":"271","hashOfConfig":"266"},{"size":1204,"mtime":1612713257895,"results":"272","hashOfConfig":"266"},{"size":394,"mtime":1612774657711,"results":"273","hashOfConfig":"266"},{"size":3791,"mtime":1615399454974,"results":"274","hashOfConfig":"266"},{"size":1019,"mtime":1614261592523,"results":"275","hashOfConfig":"266"},{"size":1019,"mtime":1614261628030,"results":"276","hashOfConfig":"266"},{"size":4400,"mtime":1614837544108,"results":"277","hashOfConfig":"266"},{"size":995,"mtime":1615390451001,"results":"278","hashOfConfig":"266"},{"size":894,"mtime":1613577775491,"results":"279","hashOfConfig":"266"},{"size":523,"mtime":1617197571806,"results":"280","hashOfConfig":"266"},{"size":1571,"mtime":1614263128191,"results":"281","hashOfConfig":"266"},{"size":1571,"mtime":1614263135170,"results":"282","hashOfConfig":"266"},{"size":327,"mtime":1609597407448,"results":"283","hashOfConfig":"266"},{"size":1571,"mtime":1614263122146,"results":"284","hashOfConfig":"266"},{"size":1167,"mtime":1613670796459,"results":"285","hashOfConfig":"266"},{"size":1131,"mtime":1624715489489,"results":"286","hashOfConfig":"266"},{"size":32589,"mtime":1614237574405,"results":"287","hashOfConfig":"266"},{"size":653,"mtime":1614261268016,"results":"288","hashOfConfig":"266"},{"size":655,"mtime":1614261280150,"results":"289","hashOfConfig":"266"},{"size":3161,"mtime":1613881003406,"results":"290","hashOfConfig":"266"},{"size":2571,"mtime":1614261318653,"results":"291","hashOfConfig":"266"},{"size":3621,"mtime":1618287313662,"results":"292","hashOfConfig":"266"},{"size":1305,"mtime":1614256720545,"results":"293","hashOfConfig":"266"},{"size":623,"mtime":1612947198123,"results":"294","hashOfConfig":"266"},{"size":5262,"mtime":1614862058079,"results":"295","hashOfConfig":"266"},{"size":1730,"mtime":1609681606134,"results":"296","hashOfConfig":"266"},{"size":1243,"mtime":1618202297435,"results":"297","hashOfConfig":"266"},{"size":1747,"mtime":1612539675036,"results":"298","hashOfConfig":"266"},{"size":1858,"mtime":1618202297435,"results":"299","hashOfConfig":"266"},{"size":583,"mtime":1612523746819,"results":"300","hashOfConfig":"266"},{"size":425,"mtime":1609397059527,"results":"301","hashOfConfig":"266"},{"size":174,"mtime":1609135355028,"results":"302","hashOfConfig":"266"},{"size":948,"mtime":1624715489449,"results":"303","hashOfConfig":"266"},{"size":3145,"mtime":1615398923443,"results":"304","hashOfConfig":"266"},{"size":2376,"mtime":1615398942710,"results":"305","hashOfConfig":"266"},{"size":2377,"mtime":1615398936687,"results":"306","hashOfConfig":"266"},{"size":3439,"mtime":1615398927049,"results":"307","hashOfConfig":"266"},{"size":1617,"mtime":1624715489493,"results":"308","hashOfConfig":"266"},{"size":2548,"mtime":1624715489495,"results":"309","hashOfConfig":"266"},{"size":409,"mtime":1617596981923,"results":"310","hashOfConfig":"266"},{"size":2874,"mtime":1613807573648,"results":"311","hashOfConfig":"266"},{"size":1387,"mtime":1613586138134,"results":"312","hashOfConfig":"266"},{"size":1159,"mtime":1613912734963,"results":"313","hashOfConfig":"266"},{"size":819,"mtime":1613052161277,"results":"314","hashOfConfig":"266"},{"size":1305,"mtime":1613983119520,"results":"315","hashOfConfig":"266"},{"size":2407,"mtime":1613913056112,"results":"316","hashOfConfig":"266"},{"size":155,"mtime":1612453660898,"results":"317","hashOfConfig":"266"},{"size":194,"mtime":1610265005771,"results":"318","hashOfConfig":"266"},{"size":169,"mtime":1612322570951,"results":"319","hashOfConfig":"266"},{"size":686,"mtime":1614237281729,"results":"320","hashOfConfig":"266"},{"size":131,"mtime":1611047241248,"results":"321","hashOfConfig":"266"},{"size":240,"mtime":1612418526347,"results":"322","hashOfConfig":"266"},{"size":276,"mtime":1610862388823,"results":"323","hashOfConfig":"266"},{"size":3123,"mtime":1613584084397,"results":"324","hashOfConfig":"266"},{"size":258,"mtime":1612611090760,"results":"325","hashOfConfig":"266"},{"size":2453,"mtime":1613920235617,"results":"326","hashOfConfig":"266"},{"size":3224,"mtime":1613584252856,"results":"327","hashOfConfig":"266"},{"size":2477,"mtime":1613844452626,"results":"328","hashOfConfig":"266"},{"size":1254,"mtime":1613844279127,"results":"329","hashOfConfig":"266"},{"size":170,"mtime":1612529978720,"results":"330","hashOfConfig":"266"},{"size":1875,"mtime":1613844403824,"results":"331","hashOfConfig":"266"},{"size":2374,"mtime":1613844468132,"results":"332","hashOfConfig":"266"},{"size":1506,"mtime":1613844297429,"results":"333","hashOfConfig":"266"},{"size":1551,"mtime":1613844461488,"results":"334","hashOfConfig":"266"},{"size":1405,"mtime":1613844424143,"results":"335","hashOfConfig":"266"},{"size":1353,"mtime":1613844443100,"results":"336","hashOfConfig":"266"},{"size":1144,"mtime":1613844253248,"results":"337","hashOfConfig":"266"},{"size":1634,"mtime":1613844387712,"results":"338","hashOfConfig":"266"},{"size":5748,"mtime":1614095328253,"results":"339","hashOfConfig":"266"},{"size":6745,"mtime":1613844955938,"results":"340","hashOfConfig":"266"},{"size":2724,"mtime":1614260775355,"results":"341","hashOfConfig":"266"},{"size":1693,"mtime":1613979455928,"results":"342","hashOfConfig":"266"},{"size":2269,"mtime":1613928189277,"results":"343","hashOfConfig":"266"},{"size":589,"mtime":1624715489496,"results":"344","hashOfConfig":"266"},{"size":2430,"mtime":1624715489496,"results":"345","hashOfConfig":"266"},{"size":227,"mtime":1624715489496,"results":"346","hashOfConfig":"266"},{"size":2065,"mtime":1613842377063,"results":"347","hashOfConfig":"266"},{"size":3205,"mtime":1613807573406,"results":"348","hashOfConfig":"266"},{"size":1637,"mtime":1613807680245,"results":"349","hashOfConfig":"266"},{"size":2197,"mtime":1615385273220,"results":"350","hashOfConfig":"266"},{"size":1908,"mtime":1613807669518,"results":"351","hashOfConfig":"266"},{"size":2252,"mtime":1613844021455,"results":"352","hashOfConfig":"266"},{"size":2638,"mtime":1618202297441,"results":"353","hashOfConfig":"266"},{"size":1706,"mtime":1618202297435,"results":"354","hashOfConfig":"266"},{"size":941,"mtime":1624715489496,"results":"355","hashOfConfig":"266"},{"size":1334,"mtime":1624715489496,"results":"356","hashOfConfig":"266"},{"size":2990,"mtime":1614862027081,"results":"357","hashOfConfig":"266"},{"size":428,"mtime":1618202297463,"results":"358","hashOfConfig":"266"},{"size":4156,"mtime":1618202297465,"results":"359","hashOfConfig":"266"},{"size":679,"mtime":1614260844181,"results":"360","hashOfConfig":"266"},{"size":5207,"mtime":1614260695774,"results":"361","hashOfConfig":"266"},{"size":574,"mtime":1614256082167,"results":"362","hashOfConfig":"266"},{"size":891,"mtime":1612944927440,"results":"363","hashOfConfig":"266"},{"size":3032,"mtime":1613928350347,"results":"364","hashOfConfig":"266"},{"size":3033,"mtime":1613979322454,"results":"365","hashOfConfig":"266"},{"size":1281,"mtime":1611406880835,"results":"366","hashOfConfig":"266"},{"size":1870,"mtime":1613844417446,"results":"367","hashOfConfig":"266"},{"size":2325,"mtime":1611244609669,"results":"368","hashOfConfig":"266"},{"size":1403,"mtime":1613584102503,"results":"369","hashOfConfig":"266"},{"size":1874,"mtime":1613584028365,"results":"370","hashOfConfig":"266"},{"size":1944,"mtime":1624715489496,"results":"371","hashOfConfig":"266"},{"size":8298,"mtime":1622277880688,"results":"372","hashOfConfig":"266"},{"size":2668,"mtime":1618202297435,"results":"373","hashOfConfig":"266"},{"size":2708,"mtime":1618202297442,"results":"374","hashOfConfig":"266"},{"size":2277,"mtime":1618202297462,"results":"375","hashOfConfig":"266"},{"size":428,"mtime":1618202297462,"results":"376","hashOfConfig":"266"},{"size":169,"mtime":1612792460823,"results":"377","hashOfConfig":"266"},{"size":2269,"mtime":1614258603168,"results":"378","hashOfConfig":"266"},{"size":1545,"mtime":1612798480318,"results":"379","hashOfConfig":"266"},{"size":1910,"mtime":1612799285239,"results":"380","hashOfConfig":"266"},{"size":1232,"mtime":1614252169223,"results":"381","hashOfConfig":"266"},{"size":1548,"mtime":1614252178446,"results":"382","hashOfConfig":"266"},{"size":1246,"mtime":1614252209673,"results":"383","hashOfConfig":"266"},{"size":838,"mtime":1614251722305,"results":"384","hashOfConfig":"266"},{"size":4572,"mtime":1612946880023,"results":"385","hashOfConfig":"266"},{"size":1536,"mtime":1614103930279,"results":"386","hashOfConfig":"266"},{"size":1236,"mtime":1612944910321,"results":"387","hashOfConfig":"266"},{"size":1931,"mtime":1614103910957,"results":"388","hashOfConfig":"266"},{"size":993,"mtime":1613484938249,"results":"389","hashOfConfig":"266"},{"size":1277,"mtime":1614408126652,"results":"390","hashOfConfig":"266"},{"size":2599,"mtime":1613480781630,"results":"391","hashOfConfig":"266"},{"size":1209,"mtime":1613481359356,"results":"392","hashOfConfig":"266"},{"size":2930,"mtime":1613481915788,"results":"393","hashOfConfig":"266"},{"size":1778,"mtime":1613481803585,"results":"394","hashOfConfig":"266"},{"size":733,"mtime":1612710645520,"results":"395","hashOfConfig":"266"},{"size":5893,"mtime":1624849892425,"results":"396","hashOfConfig":"266"},{"size":1490,"mtime":1613403808463,"results":"397","hashOfConfig":"266"},{"size":1135,"mtime":1613481313562,"results":"398","hashOfConfig":"266"},{"size":946,"mtime":1613481345423,"results":"399","hashOfConfig":"266"},{"size":6061,"mtime":1624715489472,"results":"400","hashOfConfig":"266"},{"size":145,"mtime":1612705139148,"results":"401","hashOfConfig":"266"},{"size":2543,"mtime":1624715489482,"results":"402","hashOfConfig":"266"},{"size":2534,"mtime":1624715489483,"results":"403","hashOfConfig":"266"},{"size":1363,"mtime":1612614165210,"results":"404","hashOfConfig":"266"},{"size":3550,"mtime":1614086831610,"results":"405","hashOfConfig":"266"},{"size":4070,"mtime":1614086883669,"results":"406","hashOfConfig":"266"},{"size":3241,"mtime":1613928681095,"results":"407","hashOfConfig":"266"},{"size":3242,"mtime":1613979390456,"results":"408","hashOfConfig":"266"},{"size":4261,"mtime":1624715489457,"results":"409","hashOfConfig":"266"},{"size":5690,"mtime":1614001699555,"results":"410","hashOfConfig":"266"},{"size":7189,"mtime":1614436129566,"results":"411","hashOfConfig":"266"},{"size":1863,"mtime":1618202297453,"results":"412","hashOfConfig":"266"},{"size":9654,"mtime":1622277875714,"results":"413","hashOfConfig":"266"},{"size":6775,"mtime":1618202297435,"results":"414","hashOfConfig":"266"},{"size":6774,"mtime":1618202297443,"results":"415","hashOfConfig":"266"},{"size":2802,"mtime":1614407342690,"results":"416","hashOfConfig":"266"},{"size":1280,"mtime":1612802481151,"results":"417","hashOfConfig":"266"},{"size":2250,"mtime":1612802982048,"results":"418","hashOfConfig":"266"},{"size":2277,"mtime":1612803057141,"results":"419","hashOfConfig":"266"},{"size":3444,"mtime":1612946471765,"results":"420","hashOfConfig":"266"},{"size":1448,"mtime":1612802815733,"results":"421","hashOfConfig":"266"},{"size":1281,"mtime":1612792474405,"results":"422","hashOfConfig":"266"},{"size":2325,"mtime":1612792474404,"results":"423","hashOfConfig":"266"},{"size":3032,"mtime":1614258603173,"results":"424","hashOfConfig":"266"},{"size":3791,"mtime":1612797385394,"results":"425","hashOfConfig":"266"},{"size":7142,"mtime":1624769234043,"results":"426","hashOfConfig":"266"},{"size":4259,"mtime":1624715489476,"results":"427","hashOfConfig":"266"},{"size":14083,"mtime":1612787843495,"results":"428","hashOfConfig":"266"},{"size":2050,"mtime":1613584333624,"results":"429","hashOfConfig":"266"},{"size":8752,"mtime":1624715489477,"results":"430","hashOfConfig":"266"},{"size":3999,"mtime":1624715489461,"results":"431","hashOfConfig":"266"},{"size":2886,"mtime":1624715489458,"results":"432","hashOfConfig":"266"},{"size":2635,"mtime":1612792460863,"results":"433","hashOfConfig":"266"},{"size":2924,"mtime":1612792460853,"results":"434","hashOfConfig":"266"},{"size":4005,"mtime":1614090380939,"results":"435","hashOfConfig":"266"},{"size":3339,"mtime":1614089058017,"results":"436","hashOfConfig":"266"},{"size":2919,"mtime":1612418522416,"results":"437","hashOfConfig":"266"},{"size":1261,"mtime":1613584350706,"results":"438","hashOfConfig":"266"},{"size":2516,"mtime":1613584283990,"results":"439","hashOfConfig":"266"},{"size":3524,"mtime":1613586524295,"results":"440","hashOfConfig":"266"},{"size":4257,"mtime":1613586463523,"results":"441","hashOfConfig":"266"},{"size":5499,"mtime":1624715489485,"results":"442","hashOfConfig":"266"},{"size":5499,"mtime":1624715489469,"results":"443","hashOfConfig":"266"},{"size":3188,"mtime":1613923900814,"results":"444","hashOfConfig":"266"},{"size":2949,"mtime":1614066382738,"results":"445","hashOfConfig":"266"},{"size":2634,"mtime":1624715489454,"results":"446","hashOfConfig":"266"},{"size":2460,"mtime":1614237446269,"results":"447","hashOfConfig":"266"},{"size":2485,"mtime":1613487813868,"results":"448","hashOfConfig":"266"},{"size":3545,"mtime":1624715489474,"results":"449","hashOfConfig":"266"},{"size":2231,"mtime":1613458769220,"results":"450","hashOfConfig":"266"},{"size":1240,"mtime":1612615043332,"results":"451","hashOfConfig":"266"},{"size":3419,"mtime":1613907310290,"results":"452","hashOfConfig":"266"},{"size":3594,"mtime":1612798547236,"results":"453","hashOfConfig":"266"},{"size":3194,"mtime":1612789422454,"results":"454","hashOfConfig":"266"},{"size":2994,"mtime":1612452911417,"results":"455","hashOfConfig":"266"},{"size":7443,"mtime":1612787790194,"results":"456","hashOfConfig":"266"},{"size":5689,"mtime":1614001740288,"results":"457","hashOfConfig":"266"},{"size":5690,"mtime":1614259108625,"results":"458","hashOfConfig":"266"},{"size":3241,"mtime":1614258603175,"results":"459","hashOfConfig":"266"},{"size":2755,"mtime":1613893659213,"results":"460","hashOfConfig":"266"},{"size":3469,"mtime":1612711820606,"results":"461","hashOfConfig":"266"},{"size":3317,"mtime":1612805234225,"results":"462","hashOfConfig":"266"},{"size":3008,"mtime":1634362524301,"results":"463","hashOfConfig":"266"},{"size":2991,"mtime":1612792460848,"results":"464","hashOfConfig":"266"},{"size":4586,"mtime":1614096054092,"results":"465","hashOfConfig":"266"},{"size":4883,"mtime":1613572499354,"results":"466","hashOfConfig":"266"},{"size":3725,"mtime":1611024248036,"results":"467","hashOfConfig":"266"},{"size":2456,"mtime":1614089738483,"results":"468","hashOfConfig":"266"},{"size":5053,"mtime":1615388192820,"results":"469","hashOfConfig":"266"},{"size":3693,"mtime":1624715489488,"results":"470","hashOfConfig":"266"},{"size":2895,"mtime":1634362291508,"results":"471","hashOfConfig":"266"},{"size":7222,"mtime":1614001758063,"results":"472","hashOfConfig":"266"},{"size":7218,"mtime":1614001769774,"results":"473","hashOfConfig":"266"},{"size":2143,"mtime":1624715489460,"results":"474","hashOfConfig":"266"},{"size":2902,"mtime":1624715489467,"results":"475","hashOfConfig":"266"},{"size":1530,"mtime":1614237443809,"results":"476","hashOfConfig":"266"},{"size":6138,"mtime":1614066761236,"results":"477","hashOfConfig":"266"},{"size":4398,"mtime":1614862974310,"results":"478","hashOfConfig":"266"},{"size":4379,"mtime":1613845065608,"results":"479","hashOfConfig":"266"},{"size":2321,"mtime":1611238210657,"results":"480","hashOfConfig":"266"},{"size":1280,"mtime":1611406859219,"results":"481","hashOfConfig":"266"},{"size":2857,"mtime":1613583921360,"results":"482","hashOfConfig":"266"},{"size":2525,"mtime":1613583812652,"results":"483","hashOfConfig":"266"},{"size":9446,"mtime":1624715489452,"results":"484","hashOfConfig":"266"},{"size":1268,"mtime":1613583810561,"results":"485","hashOfConfig":"266"},{"size":2148,"mtime":1614861742759,"results":"486","hashOfConfig":"266"},{"size":1822,"mtime":1613844736537,"results":"487","hashOfConfig":"266"},{"size":1915,"mtime":1613586308816,"results":"488","hashOfConfig":"266"},{"size":1914,"mtime":1613586117094,"results":"489","hashOfConfig":"266"},{"size":2672,"mtime":1613498417541,"results":"490","hashOfConfig":"266"},{"size":3196,"mtime":1613845207957,"results":"491","hashOfConfig":"266"},{"size":3752,"mtime":1613586375858,"results":"492","hashOfConfig":"266"},{"size":2112,"mtime":1613586160203,"results":"493","hashOfConfig":"266"},{"size":2909,"mtime":1612453694572,"results":"494","hashOfConfig":"266"},{"size":1229,"mtime":1624715489470,"results":"495","hashOfConfig":"266"},{"size":2104,"mtime":1613586164650,"results":"496","hashOfConfig":"266"},{"size":1757,"mtime":1613586133773,"results":"497","hashOfConfig":"266"},{"size":741,"mtime":1613586420162,"results":"498","hashOfConfig":"266"},{"size":3898,"mtime":1613586144328,"results":"499","hashOfConfig":"266"},{"size":1377,"mtime":1613586111006,"results":"500","hashOfConfig":"266"},{"size":2963,"mtime":1613585903126,"results":"501","hashOfConfig":"266"},{"size":1339,"mtime":1613586126871,"results":"502","hashOfConfig":"266"},{"size":2399,"mtime":1613586173713,"results":"503","hashOfConfig":"266"},{"size":1346,"mtime":1613586122673,"results":"504","hashOfConfig":"266"},{"size":2672,"mtime":1612792460836,"results":"505","hashOfConfig":"266"},{"size":3166,"mtime":1612452873144,"results":"506","hashOfConfig":"266"},{"size":3461,"mtime":1611071504095,"results":"507","hashOfConfig":"266"},{"size":11023,"mtime":1615644418119,"results":"508","hashOfConfig":"266"},{"size":9486,"mtime":1615388379792,"results":"509","hashOfConfig":"266"},{"size":969,"mtime":1612792460860,"results":"510","hashOfConfig":"266"},{"size":5689,"mtime":1614001715884,"results":"511","hashOfConfig":"266"},{"size":6112,"mtime":1618202297455,"results":"512","hashOfConfig":"266"},{"size":2991,"mtime":1612322443118,"results":"513","hashOfConfig":"266"},{"size":4980,"mtime":1612452254085,"results":"514","hashOfConfig":"266"},{"size":3693,"mtime":1618202297452,"results":"515","hashOfConfig":"266"},{"size":3186,"mtime":1614100999316,"results":"516","hashOfConfig":"266"},{"size":12063,"mtime":1612797924227,"results":"517","hashOfConfig":"266"},{"size":5860,"mtime":1612452099980,"results":"518","hashOfConfig":"266"},{"size":2975,"mtime":1612452693470,"results":"519","hashOfConfig":"266"},{"size":3394,"mtime":1615648406711,"results":"520","hashOfConfig":"266"},{"size":1845,"mtime":1610682872752,"results":"521","hashOfConfig":"266"},{"size":6777,"mtime":1614867378170,"results":"522","hashOfConfig":"266"},{"size":2672,"mtime":1612322442920,"results":"523","hashOfConfig":"266"},{"size":8010,"mtime":1612452288141,"results":"524","hashOfConfig":"266"},{"size":7433,"mtime":1612452271913,"results":"525","hashOfConfig":"266"},{"size":4326,"mtime":1612453676429,"results":"526","hashOfConfig":"266"},{"size":1229,"mtime":1624715489450,"results":"527","hashOfConfig":"266"},{"size":11932,"mtime":1618202297445,"results":"528","hashOfConfig":"266"},{"size":8107,"mtime":1612453431385,"results":"529","hashOfConfig":"266"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},"17nxzum",{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"532"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"532"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"532"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"532"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"532"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"532"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"532"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"532"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"532"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"532"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"532"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"532"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"532"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"532"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"532"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"532"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"532"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"532"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"532"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"532"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"532"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"532"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"532"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"532"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"532"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"532"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"532"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"532"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"532"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"532"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"532"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"532"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"532"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"532"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"532"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"532"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"532"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"532"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"532"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"532"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"532"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"532"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"532"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"532"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"532"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"532"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"532"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"532"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"532"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"532"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"532"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"532"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"532"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"532"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"532"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"532"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"532"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"532"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"532"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"532"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"532"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"532"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"532"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"532"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"532"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"532"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862","usedDeprecatedRules":"532"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"532"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"532"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"532"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"532"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"532"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"532"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"532"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"532"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"532"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"532"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"532"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"532"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"532"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"532"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"532"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"532"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"532"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"532"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"532"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"532"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"532"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"532"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"946","usedDeprecatedRules":"532"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"532"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"532"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"532"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"532"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"532"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"532"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"532"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"532"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"532"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"532"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981","usedDeprecatedRules":"532"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"532"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"532"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"532"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"532"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"532"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"532"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"532"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"532"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"532"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"532"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"532"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"532"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"532"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"532"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1033","usedDeprecatedRules":"532"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1036","usedDeprecatedRules":"532"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041","usedDeprecatedRules":"532"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044","usedDeprecatedRules":"532"},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047","usedDeprecatedRules":"532"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050","usedDeprecatedRules":"532"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055","usedDeprecatedRules":"532"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"532"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"532"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1066","usedDeprecatedRules":"532"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1069","usedDeprecatedRules":"532"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1072","usedDeprecatedRules":"532"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075","usedDeprecatedRules":"532"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078","usedDeprecatedRules":"532"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"532"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086","usedDeprecatedRules":"532"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"532"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1091","usedDeprecatedRules":"532"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1094","usedDeprecatedRules":"532"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097","usedDeprecatedRules":"532"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1100","usedDeprecatedRules":"532"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1103","usedDeprecatedRules":"532"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106","usedDeprecatedRules":"532"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109","usedDeprecatedRules":"532"},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1112","usedDeprecatedRules":"532"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115","usedDeprecatedRules":"532"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118","usedDeprecatedRules":"532"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121","usedDeprecatedRules":"532"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1124","usedDeprecatedRules":"532"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1127","usedDeprecatedRules":"532"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"532"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133","usedDeprecatedRules":"532"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136","usedDeprecatedRules":"532"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139","usedDeprecatedRules":"532"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142","usedDeprecatedRules":"532"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145","usedDeprecatedRules":"532"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148","usedDeprecatedRules":"532"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"532"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"532"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"532"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"532"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163","usedDeprecatedRules":"532"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1172","usedDeprecatedRules":"532"},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023","usedDeprecatedRules":"532"},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"532"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041","usedDeprecatedRules":"532"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"532"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058","usedDeprecatedRules":"532"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1187","usedDeprecatedRules":"532"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1190","usedDeprecatedRules":"532"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"532"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"532"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"532"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"532"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207","usedDeprecatedRules":"532"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1210","usedDeprecatedRules":"532"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1213","usedDeprecatedRules":"532"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"532"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218","usedDeprecatedRules":"532"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1221","usedDeprecatedRules":"532"},"J:\\Web\\school_argon\\src\\index.js",[],["1222","1223"],"J:\\Web\\school_argon\\src\\serviceWorkerRegistration.js",[],"J:\\Web\\school_argon\\src\\App.js",["1224"],"import React from \"react\";\nimport WebsiteRouter from \"routers/WebsiteRouter\";\nimport withClearCache from \"./ClearCache\";\n\nconst ClearCacheComponent = withClearCache(MainApp);\n\nfunction App() {\n  return <ClearCacheComponent />;\n}\n\nfunction MainApp() {\n  return (\n    <div className=\"App\">\n      <WebsiteRouter />\n    </div>\n  );\n}\n\nexport default MainApp;\n","J:\\Web\\school_argon\\src\\reportWebVitals.js",[],"J:\\Web\\school_argon\\src\\ClearCache.js",[],"J:\\Web\\school_argon\\src\\routers\\WebsiteRouter.js",[],"J:\\Web\\school_argon\\src\\routers\\AuthRouter.js",["1225"],"import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\nimport StudentDashboard from \"../pages/student/Dashboard\";\r\nimport TeacherDashboard from \"../pages/teacher/Dashboard\";\r\nimport Login from \"../pages/Login\";\r\nimport AdminDashboard from \"../pages/admin/dashboard/Dashboard\";\r\nimport PrintRouter from \"./PrintRouter\";\r\n\r\nexport default function AuthRouter() {\r\n  const token = localStorage.getItem(\"token\", \"\");\r\n  const user_type = localStorage.getItem(\"user_type\", \"\");\r\n  const allowed_user_types = [\"admin\", \"student\", \"teacher\"];\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          {token != \"\" && allowed_user_types.includes(user_type) ? (\r\n            <Redirect to={\"/\" + user_type + \"/dashboard\"} />\r\n          ) : (\r\n            <Login />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/admin\">\r\n          <AdminDashboard />\r\n        </Route>\r\n        <Route path=\"/print\">\r\n          <PrintRouter />\r\n        </Route>\r\n\r\n        <Route path=\"/student\">\r\n          <StudentDashboard />\r\n        </Route>\r\n        <Route path=\"/teacher\">\r\n          <TeacherDashboard />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\routers\\PrintRouter.js",[],"J:\\Web\\school_argon\\src\\pages\\Login.js",["1226"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { Button, Form, Alert, Spinner } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { Call } from \"../services/API/Call\";\nimport { useForm } from \"../components/useForm\";\nimport { TextInput } from \"../components/controls/Controls\";\n\nconst initialFValues = {\n  username: \"\",\n  password: \"\",\n};\nexport default function Login() {\n  const [failMessage, setFailMessage] = useState(\"\");\n\n  const [logginIn, setLoggingIn] = useState(false);\n\n  const { values, handleInputChange, errors, setErrors } = useForm(\n    initialFValues,\n    true\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if (\"username\" in fieldValues)\n      temp.username = fieldValues.username.length === 0;\n    if (\"password\" in fieldValues)\n      temp.password = fieldValues.password.length === 0;\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      return Object.values(temp).every((x) => x === false);\n  };\n\n  const history = useHistory();\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setLoggingIn(true);\n    if (validate()) {\n      Call({\n        method: \"post\",\n        url: \"/login\",\n        data: {\n          username: values.username,\n          password: values.password,\n          device_name: \"web\",\n        },\n      })\n        .then((res) => {\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"role\", res.role);\n          localStorage.setItem(\"permissions\", res.permissions);\n          localStorage.setItem(\"user_type\", res.user_type);\n          localStorage.setItem(\"user_id\", res.user_id);\n          window.location.reload();\n          setLoggingIn(false);\n        })\n        .catch((error) => {\n          setLoggingIn(false);\n          setFailMessage(error);\n        });\n    } else setLoggingIn(false);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n      }}\n      className=\"bg-dark\"\n    >\n      <div\n        style={{\n          maxWidth: \"350px\",\n          textAlign: \"center\",\n          boxShadow: \"0px 3px 5px rgba(0,0,0,0.3)\",\n          padding: 45,\n          borderRadius: 35,\n        }}\n        className=\"bg-white\"\n      >\n        <img\n          src=\"./192.png\"\n          alt=\"Software Logo\"\n          style={{ width: \"65px\", objectFit: \"cover\" }}\n        />\n        <br />\n        <a>Schoolify - School Management Software</a>\n        <br />\n        {failMessage !== undefined && failMessage.length > 0 ? (\n          <Alert color=\"danger\" style={{ fontSize: \"12px\" }}>\n            {failMessage}\n          </Alert>\n        ) : null}\n\n        <Form onSubmit={handleSubmit} className=\"mt-3\">\n          <h3 className=\"text-dark\">Log In</h3>\n          <TextInput\n            name=\"username\"\n            placeholder=\"User Name\"\n            invalid_msg=\"Enter valid Username\"\n            value={values.username}\n            handleChange={handleInputChange}\n            disabled={logginIn}\n            autoComplete=\"off\"\n            error={errors.username}\n          />\n\n          <TextInput\n            name=\"password\"\n            placeholder=\"Password\"\n            invalid_msg=\"Enter valid Password\"\n            value={values.password}\n            handleChange={handleInputChange}\n            type=\"password\"\n            disabled={logginIn}\n            error={errors.password}\n          />\n          <Button color=\"primary\" type=\"submit\" disabled={logginIn}>\n            {logginIn ? (\n              <Spinner animation=\"border\" variant=\"dark\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\pages\\student\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\pages\\teacher\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\components\\website\\Index.js",[],"J:\\Web\\school_argon\\src\\pages\\admin\\dashboard\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\routers\\createRoutes.js",["1227","1228","1229"],"import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst user_role = localStorage.getItem(\"role\");\nconst permissions = JSON.parse(localStorage.getItem(\"permissions\"));\nconst createRoutes = (routes) =>\n  routes.map((prop, key) =>\n    checkPermission(prop.permission) ? (\n      prop.children === undefined ? (\n        <Route exact path={prop.layout + prop.path} key={key}>\n          <prop.component permission={prop.permission} />\n        </Route>\n      ) : (\n        createRoutes(prop.children)\n      )\n    ) : null\n  );\n\nconst checkPermission = (route_permission) => {\n  if (route_permission == undefined) return true;\n  else if (user_role == \"Super Admin\") return true;\n  else {\n    const found = Object.values(route_permission).some(\n      (element) => permissions.indexOf(element) != -1\n    );\n    console.log(found);\n    return found;\n  }\n};\nexport default createRoutes;\n","J:\\Web\\school_argon\\src\\components\\useForm.js",[],"J:\\Web\\school_argon\\src\\pages\\student\\TopBar.js",[],"J:\\Web\\school_argon\\src\\pages\\teacher\\TopBar.js",[],"J:\\Web\\school_argon\\src\\components\\controls\\Controls.js",[],"J:\\Web\\school_argon\\src\\pages\\admin\\dashboard\\TopBar.js",[],"J:\\Web\\school_argon\\src\\services\\API\\Call.js",[],"J:\\Web\\school_argon\\src\\components\\website\\FrontEndRouter.js",[],"J:\\Web\\school_argon\\src\\routes\\routes.js",[],"J:\\Web\\school_argon\\src\\routers\\StudentDashboardRouter.js",[],"J:\\Web\\school_argon\\src\\routers\\TeacherDashboardRouter.js",[],"J:\\Web\\school_argon\\src\\routes\\print_routes.js",[],"J:\\Web\\school_argon\\src\\routes\\student_routes.js",[],"J:\\Web\\school_argon\\src\\routes\\teacher_routes.js",[],"J:\\Web\\school_argon\\src\\contexts\\ClassDeptSessionContext.js",[],"J:\\Web\\school_argon\\src\\routers\\AdminRouter.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\Sidebar.js",["1230"],"import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\nimport createLinks from \"./createLinks\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false,\n  };\n  constructor() {\n    super();\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false,\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n\n  render() {\n    const { routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link,\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\",\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <i className=\"fab fa-medapps\"></i>\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <i className=\"fas fa-user\"></i>\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem\n                  href=\"#pablo\"\n                  onClick={() => {\n                    localStorage.removeItem(\"user_id\");\n                    localStorage.removeItem(\"user_type\");\n                    localStorage.removeItem(\"role\");\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"permissions\");\n                  }}\n                >\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <i className=\"fab fa-medapps\"></i>\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <i className=\"fab fa-medapps\"></i>\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Navigation */}\n            <Nav navbar>{createLinks(routes)}</Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","J:\\Web\\school_argon\\src\\components\\controls\\DatePicker.js",[],"J:\\Web\\school_argon\\src\\components\\controls\\Select.js",[],"J:\\Web\\school_argon\\src\\components\\controls\\FileUploadInput.js",["1231","1232","1233"],"import React, { useState } from \"react\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport FormFeedback from \"reactstrap/lib/FormFeedback\";\nimport Label from \"reactstrap/lib/Label\";\n\nexport default function TextInput(props) {\n  const {\n    name,\n    value,\n    placeholder,\n    invalid_msg = \"\",\n    valid_msg = \"\",\n    handleChange,\n    error,\n    multiple = false,\n    ...other\n  } = props;\n  const [images, setImages] = useState([]);\n  const showFile = (e) => {\n    let new_img = [];\n    if (e.target.files.length > 0)\n      Array.from(e.target.files).map((el) =>\n        new_img.push(URL.createObjectURL(el))\n      );\n    setImages(new_img);\n  };\n  React.useEffect(() => {\n    if (value.length == 0) setImages([]);\n  }, [value]);\n  return (\n    <FormGroup>\n      <small className=\"text-muted\">{placeholder}</small>\n      <div className=\"d-flex space-between flex-wrap\">\n        {images.length > 0\n          ? images.map((el, idx) => (\n              <img\n                src={el}\n                width=\"50\"\n                height={50}\n                alt=\"img\"\n                key={idx}\n                style={{ objectFit: \"cover\", margin: \"0.2rem\" }}\n              />\n            ))\n          : null}\n      </div>\n      <Input\n        type=\"file\"\n        id=\"exampleFile\"\n        name={name}\n        accept=\"image/*\"\n        onChange={(e) => {\n          if (multiple) {\n            handleChange({ target: { name, value: e.target.files } });\n          } else {\n            handleChange({ target: { name, value: e.target.files[0] } });\n          }\n          showFile(e);\n        }}\n        multiple={multiple}\n        {...other}\n      />\n      <small className=\"text-danger\">{error ? invalid_msg : valid_msg}</small>\n    </FormGroup>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\controls\\CheckBoxArr.js",["1234"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function CheckBoxArr(props) {\r\n  const {\r\n    name,\r\n    placeholder,\r\n    handleChange,\r\n    invalid_msg = \"\",\r\n    valid_msg = \"\",\r\n    options = [],\r\n    value = {},\r\n    error,\r\n  } = props;\r\n  const [checked_value, setCheckedValue] = useState([]);\r\n  const check = (id) => {\r\n    const index = checked_value.indexOf(id);\r\n    if (index !== -1) {\r\n      let new_val = [...checked_value];\r\n      new_val.splice(index, 1);\r\n      setCheckedValue(new_val);\r\n    } else setCheckedValue([...checked_value, id]);\r\n  };\r\n  React.useEffect(() => {\r\n    let event = {\r\n      target: { value: JSON.stringify(checked_value), name: name },\r\n    };\r\n    handleChange(event);\r\n  }, [checked_value]);\r\n  React.useEffect(() => {\r\n    setCheckedValue(JSON.parse(value));\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (\r\n      Object.keys(checked_value).length > 0 &&\r\n      Object.keys(JSON.parse(value)).length == 0\r\n    )\r\n      setCheckedValue(value);\r\n  }, [value]);\r\n  return (\r\n    <>\r\n      <div className=\"text-dark\">{placeholder}:</div>\r\n      <div className=\"d-flex\" style={{ flexWrap: \"wrap\" }}>\r\n        {options.map((element, index) => (\r\n          <div className=\"custom-control custom-checkbox mb-3 mr-3\" key={index}>\r\n            <input\r\n              className=\"custom-control-input\"\r\n              id={index}\r\n              type=\"checkbox\"\r\n              onChange={() => check(element.id)}\r\n              checked={JSON.parse(value).indexOf(element.id) !== -1}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor={index}>\r\n              {element.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <small className=\"text-danger\">{error ? invalid_msg : valid_msg}</small>\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\controls\\Checkbox.js",[],"J:\\Web\\school_argon\\src\\services\\API\\Api.js",[],"J:\\Web\\school_argon\\src\\services\\API\\CSRF.js",[],"J:\\Web\\school_argon\\src\\components\\controls\\TextInput.js",[],"J:\\Web\\school_argon\\src\\components\\website\\Albums.js",["1235","1236","1237","1238"],"import React, { useState } from \"react\";\n\nimport Footer from \"./home/Footer\";\nimport TopBar from \"./home/TopBar\";\nimport NavBar from \"./home/NavBar\";\n\nimport \"./css/custom.css\";\nimport { useParams } from \"react-router-dom\";\nimport Api from \"services/API/Api\";\nimport { Helmet } from \"react-helmet\";\nimport { Spinner } from \"reactstrap\";\nimport ReactOwlCarousel from \"react-owl-carousel\";\nexport default function Pages({ data }) {\n  const { pages, sub_pages, about_school, school_info, albums = [] } = data;\n  let { id } = useParams();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fail, setFail] = useState(false);\n  const [album_name, setAlbumName] = useState(\"\");\n\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/gallery?album_id=\" + id })\n      .then((res) => {\n        setImages(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n    let album_arr = albums.filter((el) => el.id == id);\n    setAlbumName(album_arr.length > 0 ? album_arr[0].album_name : \"\");\n  }, [id]);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/gallery?album_id=\" + id })\n      .then((res) => {\n        setImages(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n    let album_arr = albums.filter((el) => el.id == id);\n    setAlbumName(album_arr.length > 0 ? album_arr[0].album_name : \"\");\n  }, []);\n  return (\n    <div className=\"probootstrap-page-wrapper\">\n      <Helmet>\n        <title>{album_name}</title>\n      </Helmet>\n      <TopBar institute_info={school_info} />\n      <NavBar\n        pages={pages}\n        sub_pages={sub_pages}\n        institute_info={school_info}\n      />\n      <div className=\"container-fluid bg-primary\">\n        <div className=\"container text-left  pt-5 pb-5\">\n          {loading ? (\n            <Spinner size=\"lg\" color=\"white\" />\n          ) : (\n            <h1 className=\"text-white\">{album_name}</h1>\n          )}\n          {fail ? (\n            <h1 className=\"text-danger\">Something Went Wrong! No Content!</h1>\n          ) : null}\n        </div>\n      </div>\n      {!loading ? (\n        <div className=\"container-fluid\">\n          <div className=\"container pt-4 pb-4\">\n            <ReactOwlCarousel items={1} loop nav lazyLoad={true} dots>\n              {images.map((el, idx) => (\n                <div className=\"item\" key={idx}>\n                  <img\n                    src={process.env.REACT_APP_IMAGE_PATH + \"/\" + el.image_name}\n                    alt=\"gallery\"\n                  />\n                  <div className=\"slide-caption\">\n                    <p className=\"text-white\">{el.caption}</p>\n                  </div>\n                </div>\n              ))}\n            </ReactOwlCarousel>\n          </div>\n        </div>\n      ) : null}\n      <Footer\n        institute_info={school_info}\n        about_school={about_school}\n        pages={pages}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\Pages.js",["1239"],"import React, { useState } from \"react\";\n\nimport Footer from \"./home/Footer\";\nimport TopBar from \"./home/TopBar\";\nimport NavBar from \"./home/NavBar\";\n\nimport \"./css/custom.css\";\nimport { useParams } from \"react-router-dom\";\nimport Api from \"services/API/Api\";\nimport { Helmet } from \"react-helmet\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { Spinner } from \"reactstrap\";\nexport default function Pages({ data }) {\n  const { pages, sub_pages, about_school, school_info } = data;\n  let { id } = useParams();\n  const [page, setPage] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fail, setFail] = useState(false);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/pages?page_id=\" + id })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, [id]);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/pages?page_id=\" + id })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className=\"probootstrap-page-wrapper\">\n      <Helmet>\n        <title>{page.page_title}</title>\n      </Helmet>\n      <TopBar institute_info={school_info} />\n      <NavBar\n        pages={pages}\n        sub_pages={sub_pages}\n        institute_info={school_info}\n      />\n      <div className=\"container-fluid bg-primary\">\n        <div className=\"container text-left  pt-5 pb-5\">\n          {loading ? (\n            <Spinner size=\"lg\" color=\"white\" />\n          ) : (\n            <h1 className=\"text-white\">{page.page_title}</h1>\n          )}\n          {fail ? (\n            <h1 className=\"text-danger\">Something Went Wrong! No Content!</h1>\n          ) : null}\n        </div>\n      </div>\n      {!loading ? (\n        <div className=\"container-fluid\">\n          <div\n            className=\"container pt-4 pb-4\"\n            dangerouslySetInnerHTML={{ __html: draftToHtml(page.page_content) }}\n          ></div>\n        </div>\n      ) : null}\n      <Footer\n        institute_info={school_info}\n        about_school={about_school}\n        pages={pages}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\SubPages.js",["1240"],"import React, { useState } from \"react\";\n\nimport Footer from \"./home/Footer\";\nimport TopBar from \"./home/TopBar\";\nimport NavBar from \"./home/NavBar\";\n\nimport \"./css/custom.css\";\nimport { useParams } from \"react-router-dom\";\nimport Api from \"services/API/Api\";\nimport { Helmet } from \"react-helmet\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { Spinner } from \"reactstrap\";\nexport default function SubPages({ data }) {\n  const { pages, sub_pages, about_school, school_info } = data;\n  let { id } = useParams();\n  const [page, setPage] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fail, setFail] = useState(false);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/sub_pages?id=\" + id })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, [id]);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({ method: \"get\", url: \"homepage/sub_pages?id=\" + id })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className=\"probootstrap-page-wrapper\">\n      <Helmet>\n        <title>{page.page_title}</title>\n      </Helmet>\n      <TopBar institute_info={school_info} />\n      <NavBar\n        pages={pages}\n        sub_pages={sub_pages}\n        institute_info={school_info}\n      />\n      <div className=\"container-fluid bg-primary\">\n        <div className=\"container text-left  pt-5 pb-5\">\n          {loading ? (\n            <Spinner size=\"lg\" color=\"white\" />\n          ) : (\n            <h1 className=\"text-white\">{page.page_title}</h1>\n          )}\n          {fail ? (\n            <h1 className=\"text-danger\">Something Went Wrong! No Content!</h1>\n          ) : null}\n        </div>\n      </div>\n      {!loading ? (\n        <div className=\"container-fluid\">\n          <div\n            className=\"container pt-4 pb-4\"\n            dangerouslySetInnerHTML={{ __html: draftToHtml(page.page_content) }}\n          ></div>\n        </div>\n      ) : null}\n      <Footer\n        institute_info={school_info}\n        about_school={about_school}\n        pages={pages}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\Employees.js",["1241"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\n\nimport Footer from \"./home/Footer\";\nimport TopBar from \"./home/TopBar\";\nimport NavBar from \"./home/NavBar\";\n\nimport \"./css/custom.css\";\nimport { useParams } from \"react-router-dom\";\nimport Api from \"services/API/Api\";\nimport { Helmet } from \"react-helmet\";\nimport { Spinner } from \"reactstrap\";\nexport default function Employees({ data }) {\n  const { pages, sub_pages, about_school, school_info } = data;\n  let { employee_type } = useParams();\n  const [page, setPage] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fail, setFail] = useState(false);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({\n      method: \"get\",\n      url: \"homepage/employee?home=true&employee_type=\" + employee_type,\n    })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, [employee_type]);\n  React.useEffect(() => {\n    setLoading(true);\n    Api({\n      method: \"get\",\n      url: \"homepage/employee?home=true&employee_type=\" + employee_type,\n    })\n      .then((res) => {\n        setPage(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setFail(true);\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className=\"probootstrap-page-wrapper\">\n      <Helmet>\n        <title>{employee_type}</title>\n      </Helmet>\n      <TopBar institute_info={school_info} />\n      <NavBar\n        pages={pages}\n        sub_pages={sub_pages}\n        institute_info={school_info}\n      />\n      <div className=\"container-fluid bg-primary\">\n        <div className=\"container text-left  pt-5 pb-5\">\n          {loading ? (\n            <Spinner size=\"lg\" color=\"white\" />\n          ) : (\n            <h1 className=\"text-white\">{employee_type}</h1>\n          )}\n          {fail ? (\n            <h1 className=\"text-danger\">Something Went Wrong! No Content!</h1>\n          ) : null}\n        </div>\n      </div>\n      {!loading ? (\n        <div className=\"container-fluid\">\n          <div className=\"container pt-4 pb-4\">\n            <div className=\"row justify-center\">\n              {page.map((el, idx) => (\n                <div className=\"col-md-3 col-sm-6\" key={idx}>\n                  <div className=\"probootstrap-teacher text-center \">\n                    <figure className=\"media\">\n                      <img\n                        src={\n                          process.env.REACT_APP_IMAGE_PATH +\n                          \"/\" +\n                          el.employee_image\n                        }\n                        alt=\"Teacher\"\n                        className=\"img-responsive\"\n                      />\n                    </figure>\n                    <div className=\"text\">\n                      <h3>{el.employee_name}</h3>\n                      <p>{el.employee_post}</p>\n                      <ul className=\"probootstrap-footer-social\">\n                        <a>{el.employee_primary_phone}</a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <Footer\n        institute_info={school_info}\n        about_school={about_school}\n        pages={pages}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\Home.js",["1242"],"import React from \"react\";\r\n\r\nimport Teachers from \"./home/Teachers\";\r\nimport Testimonial from \"./home/Testimonial\";\r\nimport Specialty from \"./home/Specialty\";\r\nimport Footer from \"./home/Footer\";\r\nimport TopBar from \"./home/TopBar\";\r\nimport NavBar from \"./home/NavBar\";\r\nimport Slideshow from \"./home/Slideshow\";\r\nimport Welcome from \"./home/Welcome\";\r\nimport Figures from \"./home/Figures\";\r\nimport HighLights from \"./home/HighLights\";\r\nimport Albums from \"./home/Albums\";\r\n\r\nimport \"./css/custom.css\";\r\nimport Notification from \"./home/Notification\";\r\nexport default function Home({ data }) {\r\n  const {\r\n    pages,\r\n    sub_pages,\r\n    slides,\r\n    about_school,\r\n    figure,\r\n    notifs,\r\n    teachers,\r\n    content,\r\n    testimonial,\r\n    specialty,\r\n    school_info,\r\n    albums,\r\n  } = data;\r\n  return (\r\n    <div className=\"probootstrap-page-wrapper\">\r\n      {/* <TopBar institute_info={school_info} /> */}\r\n      <NavBar\r\n        pages={pages}\r\n        sub_pages={sub_pages}\r\n        institute_info={school_info}\r\n      />\r\n      <Slideshow slides={slides} />\r\n      <Notification notifs={notifs} />\r\n      <Welcome about_school={about_school} institute_info={school_info} />\r\n      <Figures figure={figure} />\r\n      <HighLights notifs={notifs} articles={content} />\r\n      <Albums albums={albums} />\r\n      <Teachers teachers={teachers} />\r\n      <Testimonial testimonial={testimonial} />\r\n      <Specialty specialty={specialty} institute_info={school_info} />\r\n      <Footer\r\n        institute_info={school_info}\r\n        about_school={about_school}\r\n        pages={pages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\website\\Notifications.js",["1243"],"import React, { useState } from \"react\";\r\n\r\nimport Footer from \"./home/Footer\";\r\nimport TopBar from \"./home/TopBar\";\r\nimport NavBar from \"./home/NavBar\";\r\n\r\nimport \"./css/custom.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Api from \"services/API/Api\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Spinner } from \"reactstrap\";\r\nexport default function Notifications({ data }) {\r\n  const { pages, sub_pages, about_school, school_info } = data;\r\n  let { id } = useParams();\r\n  const [notification, setNotification] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [fail, setFail] = useState(false);\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    Api({ method: \"get\", url: \"homepage/notifications?id=\" + id })\r\n      .then((res) => {\r\n        setNotification(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setFail(true);\r\n        console.log(err);\r\n      });\r\n  }, [id]);\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    Api({ method: \"get\", url: \"homepage/notifications?id=\" + id })\r\n      .then((res) => {\r\n        setNotification(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setFail(true);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"probootstrap-page-wrapper\">\r\n      <Helmet>\r\n        <title>{notification.page_title}</title>\r\n      </Helmet>\r\n      <TopBar institute_info={school_info} />\r\n      <NavBar\r\n        pages={pages}\r\n        sub_pages={sub_pages}\r\n        institute_info={school_info}\r\n      />\r\n      <div className=\"container-fluid bg-primary\">\r\n        <div className=\"container text-left  pt-5 pb-5\">\r\n          {loading ? (\r\n            <Spinner size=\"lg\" color=\"white\" />\r\n          ) : (\r\n            <h1 className=\"text-white\">{notification.title}</h1>\r\n          )}\r\n          {fail ? (\r\n            <h1 className=\"text-danger\">Something Went Wrong! No Content!</h1>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {!loading ? (\r\n        <div className=\"container-fluid\">\r\n          <div\r\n            className=\"container pt-4 pb-4\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: draftToHtml(notification.content),\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ) : null}\r\n      <Footer\r\n        institute_info={school_info}\r\n        about_school={about_school}\r\n        pages={pages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Footer.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Religion.js",["1244","1245","1246","1247","1248","1249","1250","1251"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Religion({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Religion List\"\n        list_url=\"/settings/religion\"\n        list_head={[{ title: \"Religion Name\", identifier: \"religion_name\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Religion Name\",\n            type: \"text\",\n            name: \"religion_name\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Religion Name\",\n            type: \"text\",\n            name: \"religion_name\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ religion_name: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\EmployeeAttendanceTime.js",["1252","1253","1254","1255"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function EmployeeAttendanceTime({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Employee Attendance Time\"\n        list_url=\"/settings/employee_attendance_time\"\n        list_head={[\n          { title: \"School Start\", identifier: \"start_time\" },\n          { title: \"School End\", identifier: \"end_time\" },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        edit_data={[\n          {\n            placeholder: \"School Start\",\n            type: \"time\",\n            name: \"start_time\",\n            required: true,\n          },\n          {\n            placeholder: \"School End\",\n            type: \"time\",\n            name: \"end_time\",\n            required: true,\n          },\n        ]}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Settings.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\WeekDays.js",["1256","1257","1258","1259","1260","1261"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function WeekDays({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const data = [\n    {\n      placeholder: \"Day\",\n      type: \"select\",\n      name: \"day\",\n      options: [\n        { text: \"Saturday\", value: 6 },\n        { text: \"Sunday\", value: 0 },\n        { text: \"Monday\", value: 1 },\n        { text: \"Tuesday\", value: 2 },\n        { text: \"Wednesday\", value: 3 },\n        { text: \"Thursday\", value: 4 },\n        { text: \"Friday\", value: 5 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Weekdays\"\n        list_url=\"/settings/weekdays\"\n        list_head={[{ title: \"Day\", identifier: \"day_name\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={data}\n        add_initial_values={{ day: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\StudentAttendanceTime.js",["1262","1263","1264","1265","1266","1267"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext } from \"react\";\n\nexport default function StudentAttendanceTime({ permission }) {\n  const { class_list, session_list } = useContext(ClassDeptSessionContext);\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      required: true,\n    },\n    {\n      placeholder: \"School Start\",\n      type: \"time\",\n      name: \"start_time\",\n      required: true,\n    },\n    {\n      placeholder: \"School End\",\n      type: \"time\",\n      name: \"end_time\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student Attendance Time\"\n        list_url=\"/settings/student_attendance_time\"\n        list_head={[\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"School Start\", identifier: \"start_time\" },\n          { title: \"School End\", identifier: \"end_time\" },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={data}\n        add_initial_value={{\n          class_id: -1,\n          session_id: -1,\n          start_time: \"\",\n          end_time: \"\",\n        }}\n        query_title=\"Get Attendance Time\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            required: true,\n          },\n        ]}\n        query_data={{ class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\Products.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\Accounts.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Exams.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\students\\Students.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\results\\Results.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\library\\Library.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\Payment.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeesPhonebook.js",["1268","1269","1270","1271","1272","1273"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function EmployeesPhonebook({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [religion_list, setreligion_list] = useState([]);\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/religion\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.religion_name;\n          element[\"value\"] = element.religion_name;\n        });\n        setreligion_list(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div>\n      <Index\n        title=\"Employee Phonebook\"\n        list_url=\"/employees/employee\"\n        list_head={[\n          {\n            title: \"ID\",\n            identifier: \"employee_id\",\n          },\n          {\n            title: \"Employee Name\",\n            identifier: \"employee_name\",\n          },\n          {\n            title: \"Primary Phone\",\n            identifier: \"employee_primary_phone\",\n          },\n          {\n            title: \"Secondary Phone\",\n            identifier: \"employee_secondary_phone\",\n          },\n        ]}\n        query_title=\"Query Employee List\"\n        query_list={[\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Religion\",\n            type: \"select\",\n            name: \"religion\",\n            options: religion_list,\n            required: false,\n          },\n          {\n            placeholder: \"Gender\",\n            type: \"select\",\n            name: \"gender\",\n            options: [\n              { text: \"Male\", value: \"Male\" },\n              { text: \"Female\", value: \"Female\" },\n            ],\n            required: false,\n          },\n          {\n            placeholder: \"Age\",\n            type: \"number\",\n            name: \"age\",\n            required: false,\n          },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        query_data={{\n          employee_id: \"\",\n          employee_type: -1,\n          religion: -1,\n          gender: -1,\n          age: \"\",\n        }}\n        print_url=\"employees/phonebook\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\Employees.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceReportDay.js",["1274","1275","1276"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport AttendanceListDay from \"./AttendanceListDay\";\nexport default function AttendanceReportDay({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [employee_type_list, setEmployeeTypelist] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypelist(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div>\n      <Index\n        title=\"Employee Attendance Day\"\n        list_url=\"/employees/employee_attendance\"\n        list_head={[\n          {\n            title: \"Employee ID\",\n            identifier: \"employee_id\",\n          },\n          {\n            title: \"Employee Type\",\n            identifier: \"employee_type\",\n          },\n          {\n            title: \"Employee Name\",\n            identifier: \"employee_name\",\n          },\n          {\n            title: \"Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Attendance\",\n            identifier: \"attendance_status\",\n          },\n          {\n            title: \"Access Time\",\n            identifier: \"access_time\",\n          },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        CustomListComponent={AttendanceListDay}\n        query_title=\"Query Employee Attendance\"\n        query_list={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n        ]}\n        query_data={{\n          employee_type: -1,\n          employee_id: \"\",\n          date: \"\",\n        }}\n        print_url=\"employees/attendance\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceReportMonth.js",["1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport AttendanceListMonth from \"./AttendanceListMonth\";\nexport default function AttendanceReportMonth({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { session_list } = useContext(ClassDeptSessionContext);\n  const [employee_type_list, setEmployeeTypelist] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypelist(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div className=\"employee_attendance\">\n      <Index\n        title=\"Employee Attendance Month\"\n        list_url=\"/employees/employee_monthly_attendance\"\n        CustomListComponent={AttendanceListMonth}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        query_title=\"Query Employee Attendance\"\n        query_list={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: false,\n          },\n          {\n            placeholder: \"Employee ID\",\n            type: \"text\",\n            name: \"employee_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Year\",\n            type: \"select\",\n            name: \"year\",\n            options: session_list,\n            required: true,\n          },\n          {\n            placeholder: \"Month\",\n            type: \"select\",\n            name: \"month\",\n            options: [\n              { text: \"January\", value: \"01\" },\n              { text: \"February\", value: \"02\" },\n              { text: \"March\", value: \"03\" },\n              { text: \"April\", value: \"04\" },\n              { text: \"May\", value: \"05\" },\n              { text: \"June\", value: \"06\" },\n              { text: \"July\", value: \"07\" },\n              { text: \"August\", value: \"08\" },\n              { text: \"September\", value: \"09\" },\n              { text: \"October\", value: \"10\" },\n              { text: \"November\", value: \"11\" },\n              { text: \"December\", value: \"12\" },\n            ],\n            required: true,\n          },\n        ]}\n        query_data={{\n          employee_type: -1,\n          employee_id: \"\",\n          year: -1,\n          month: -1,\n        }}\n        print_url=\"employees/monthly_attendance\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\SubPages.js",["1286","1287","1288","1289","1290","1291","1292","1293","1294"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function SubPages({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [page_list, setPageList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"website_settings/pages?option=true\" })\n      .then((res) => setPageList(res))\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Sub Page Title\",\n      type: \"text\",\n      name: \"page_title\",\n      required: true,\n    },\n    {\n      placeholder: \"Sub Page Content\",\n      type: \"textarea\",\n      name: \"page_content\",\n      customInput: MyEditor,\n      rich: true,\n      required: true,\n    },\n    {\n      placeholder: \"Parent Page\",\n      type: \"select\",\n      name: \"page_parent\",\n      options: page_list,\n      required: true,\n    },\n    {\n      placeholder: \"Page Status\",\n      type: \"select\",\n      name: \"active\",\n      options: [\n        { text: \"Active\", value: 1 },\n        { text: \"Inactive\", value: 0 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Sub Pages List\"\n        list_url=\"/website_settings/sub_pages\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"page_title\",\n          },\n          {\n            title: \"Parent page\",\n            identifier: \"page_parent_title\",\n          },\n          {\n            title: \"Status\",\n            identifier: \"page_status\",\n          },\n        ]}\n        modal_size=\"lg\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          page_title: \"\",\n          page_content: \"\",\n          page_parent: -1,\n          active: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Album.js",["1295","1296","1297","1298","1299","1300","1301","1302"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Album({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Album Name\",\n      type: \"text\",\n      name: \"album_name\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Album List\"\n        list_url=\"/website_settings/albums\"\n        list_head={[\n          {\n            title: \"Album\",\n            identifier: \"album_name\",\n          },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ album_name: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\WebsiteSettings.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Notifications.js",["1303","1304","1305","1306","1307","1308","1309","1310","1311","1312"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\n\nexport default function Notifications({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Notification Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Notification Content\",\n      type: \"textarea\",\n      name: \"content\",\n      customInput: MyEditor,\n      rich: true,\n      required: true,\n    },\n    {\n      placeholder: \"Page Status\",\n      type: \"select\",\n      name: \"active\",\n      options: [\n        { text: \"Active\", value: 1 },\n        { text: \"Inactive\", value: 0 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Notification List\"\n        list_url=\"/website_settings/notifications\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"title\",\n          },\n          {\n            title: \"Status\",\n            identifier: \"status\",\n          },\n        ]}\n        modal_size=\"lg\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ title: \"\", content: \"\", active: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Gallery.js",["1313","1314","1315","1316","1317","1318","1319","1320"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Gallery({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [album_list, setAlbumList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"website_settings/albums?option=true\" })\n      .then((res) => setAlbumList(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const send_data = [\n    {\n      placeholder: \"Image\",\n      type: \"file\",\n      name: \"image[]\",\n      required: true,\n      multiple: true,\n    },\n    {\n      placeholder: \"Caption\",\n      type: \"textarea\",\n      name: \"caption\",\n      required: false,\n    },\n    {\n      placeholder: \"Album\",\n      type: \"select\",\n      name: \"parent_album_id\",\n      options: album_list,\n      required: false,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Caption\",\n      type: \"textarea\",\n      name: \"caption\",\n      required: false,\n    },\n    {\n      placeholder: \"Album\",\n      type: \"select\",\n      name: \"parent_album_id\",\n      options: album_list,\n      required: false,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Gallery\"\n        list_url=\"/website_settings/gallery\"\n        list_head={[\n          {\n            title: \"Image\",\n            identifier: \"image_name\",\n            type: \"image\",\n          },\n          {\n            title: \"Parent Album\",\n            identifier: \"album_name\",\n          },\n          {\n            title: \"Caption\",\n            identifier: \"caption\",\n          },\n        ]}\n        file={true}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={edit_data}\n        add_initial_values={{ \"image[]\": {}, caption: \"\", parent_album_id: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Articles.js",["1321","1322","1323","1324","1325","1326","1327","1328"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React from \"react\";\n\nexport default function Articles({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Content\",\n      type: \"textarea\",\n      name: \"content\",\n      customInput: MyEditor,\n      rich: true,\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Article List\"\n        list_url=\"/website_settings/homepage\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"title\",\n          },\n        ]}\n        modal_size=\"lg\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ title: \"\", content: \"\", active: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Testimonial.js",["1329","1330","1331","1332","1333","1334"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Testimonial({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Image\",\n      type: \"file\",\n      name: \"image\",\n      required: true,\n    },\n    {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Testimonial\"\n        list_url=\"/website_settings/testimonial\"\n        list_head={[\n          {\n            title: \"Image\",\n            identifier: \"image\",\n            type: \"image\",\n          },\n          {\n            title: \"Name\",\n            identifier: \"name\",\n          },\n          {\n            title: \"Content\",\n            identifier: \"content\",\n          },\n        ]}\n        file={true}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={send_data}\n        add_initial_values={{ image: {}, title: \"\", content: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\SchoolSpecialty.js",["1335","1336","1337","1338","1339","1340","1341","1342"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function SchoolSpecialty({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"School Specialty\"\n        list_url=\"/website_settings/school_specialty\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"title\",\n          },\n        ]}\n        file={true}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        edit_data={send_data}\n        add_data={send_data}\n        add_initial_values={{ title: \"\", content: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Slideshow.js",["1343","1344","1345","1346","1347","1348"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Slideshow({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Image\",\n      type: \"file\",\n      name: \"image\",\n      required: true,\n    },\n    {\n      placeholder: \"Caption\",\n      type: \"textarea\",\n      name: \"caption\",\n      required: false,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Slideshow\"\n        list_url=\"/website_settings/slideshow\"\n        list_head={[\n          {\n            title: \"Image\",\n            identifier: \"image_name\",\n            type: \"image\",\n          },\n          {\n            title: \"Caption\",\n            identifier: \"caption\",\n          },\n        ]}\n        file={true}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={send_data}\n        add_initial_values={{ image: {}, caption: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\AboutSchool.js",["1349","1350"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function AboutSchool({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Image\",\n      type: \"file\",\n      name: \"image\",\n      required: true,\n    },\n    {\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"About School\"\n        list_url=\"/website_settings/about_school\"\n        list_head={[\n          {\n            title: \"Image\",\n            identifier: \"image\",\n            type: \"image\",\n          },\n          {\n            title: \"Title\",\n            identifier: \"title\",\n          },\n        ]}\n        file={true}\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        edit_data={send_data}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Figures.js",["1351","1352","1353","1354"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Figures({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Students Enrolled\",\n      type: \"number\",\n      name: \"students\",\n      required: true,\n    },\n    {\n      placeholder: \"Certified Teachers\",\n      type: \"number\",\n      name: \"teachers\",\n      required: true,\n    },\n    {\n      placeholder: \"Result Percentage\",\n      type: \"number\",\n      name: \"result\",\n      required: true,\n    },\n    {\n      placeholder: \"Parent Satisfaction\",\n      type: \"number\",\n      name: \"parent_satisfaction\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Figures\"\n        list_url=\"/website_settings/figure\"\n        list_head={[\n          {\n            title: \"Students Enrolled\",\n            identifier: \"students\",\n          },\n          {\n            title: \"Certified Teachers\",\n            identifier: \"teachers\",\n          },\n          {\n            title: \"Result Percentage\",\n            identifier: \"teachers\",\n          },\n          {\n            title: \"Parent Satisfaction\",\n            identifier: \"parent_satisfaction\",\n          },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        edit_data={send_data}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\StudentAppMessage.js",["1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function StudentAppMessage({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(-1);\n  const [selected_session, setSelectedSession] = useState(-1);\n  const [selected_department, setSelectedDepartment] = useState(-1);\n  const [student_list, setStudentList] = useState([]);\n\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n  const [students, setStudents] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  React.useEffect(() => {\n    if (class_id != -1 && session_id != -1 && department_id != -1)\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id +\n          \"&session_id=\" +\n          session_id,\n      })\n        .then((res) => setStudents(res))\n        .catch((err) => console.log(err));\n  }, [class_id, department_id, session_id]);\n\n  const send_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: false,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      setState: setSelectedDepartment,\n      required: false,\n    },\n    {\n      placeholder: \"Students\",\n      type: \"select\",\n      name: \"student_id\",\n      options: student_list,\n      required: false,\n    },\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student App Message\"\n        list_url=\"messages/student_message\"\n        list_head={[\n          { title: \"Student ID\", identifier: \"student_identifier\" },\n          { title: \"Student Name\", identifier: \"student_name\" },\n          { title: \"Title\", identifier: \"title\" },\n          { title: \"Message\", identifier: \"content\" },\n        ]}\n        add_button_title=\"Send Student APP Message\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        modal_size=\"md\"\n        add_data={send_data}\n        edit_data={edit_data}\n        add_initial_values={{\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          student_id: -1,\n          title: \"\",\n          message: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setDepartment,\n            required: true,\n          },\n          {\n            placeholder: \"Students\",\n            type: \"select\",\n            name: \"student_id\",\n            options: students,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\SendSMS.js",["1373","1374","1375","1376","1377","1378","1379"],"import Add from \"components/crud/Add\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { CardBody, Card, CardHeader, Button } from \"reactstrap\";\nimport { Call } from \"services/API/Call\";\n\nexport default function SendSMS({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [quick, setQuick] = useState(false);\n\n  const [update, setUpdate] = useState(false);\n\n  const [class_id, setClass] = useState(-1);\n  const [department, setDepartment] = useState(-1);\n  const [session, setSession] = useState(-1);\n  const [sms_account, setSMSAccount] = useState({});\n\n  const [student_list, setStudentList] = useState([]);\n\n  const [student, setStudent] = useState(false);\n  const [employee, setEmployee] = useState(false);\n  const [employee_type, setEmployeeType] = useState(-1);\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n  const [employee_list, setEmployeeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({\n      method: \"get\",\n      url: \"employees/employee_type?options=true\",\n    })\n      .then((res) => {\n        res.map((el) => {\n          el[\"text\"] = el.employee_type;\n          el[\"value\"] = el.employee_type;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    Call({\n      method: \"get\",\n      url: \"messages/sms_account\",\n    })\n      .then((res) => {\n        setSMSAccount(res);\n      })\n      .catch((err) => console.log(err));\n  }, [update]);\n  React.useEffect(() => {\n    if (employee_type != -1) {\n      Call({\n        method: \"get\",\n        url: \"employees/employee?options=true&employee_type=\" + employee_type,\n      })\n        .then((res) => setEmployeeList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [employee_type]);\n  React.useEffect(() => {\n    if (class_id != -1 && department != -1 && session != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department +\n          \"&session_id=\" +\n          session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [class_id, department, session]);\n\n  const employee_data = [\n    {\n      placeholder: \"Employee Type\",\n      type: \"select\",\n      name: \"employee_type\",\n      options: employee_type_list,\n      setState: setEmployeeType,\n      required: true,\n    },\n    {\n      placeholder: \"Employees\",\n      type: \"select\",\n      name: \"employee_id\",\n      options: employee_list,\n      required: false,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"message\",\n      required: true,\n    },\n  ];\n  const student_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setClass,\n      required: false,\n    },\n    {\n      placeholder: \"Departments\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list,\n      setState: setDepartment,\n      required: false,\n    },\n    {\n      placeholder: \"Students\",\n      type: \"select\",\n      name: \"student_id\",\n      options: student_list,\n      required: false,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"message\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Card className=\"bg-default shadow mt-3 mb-3\">\n        <CardBody>\n          <Button color=\"info\">SMS Balance: {sms_account.balance}</Button>\n          <Button color=\"warning\">SMS Rate: {sms_account.rate}</Button>\n          <Button color=\"success\">\n            Total SMS Sent: {sms_account.total_sent_sms}\n          </Button>\n        </CardBody>\n      </Card>\n      {user_role == \"Super Admin\" ||\n      user_permissions.indexOf(permission.send) != -1 ? (\n        <>\n          <Card className=\"bg-default shadow\">\n            <CardHeader className=\"bg-transparent border-0\">\n              <h2 className=\"text-white\">Send SMS</h2>\n            </CardHeader>\n            <CardBody>\n              <Button color=\"primary\" onClick={() => setQuick(true)}>\n                Quick SMS <i className=\"fas fa-paper-plane\" />\n              </Button>\n              <Button color=\"secondary\" onClick={() => setStudent(true)}>\n                Student SMS <i className=\"fas fa-paper-plane\" />\n              </Button>\n              <Button color=\"info\" onClick={() => setEmployee(true)}>\n                Employee SMS <i className=\"fas fa-paper-plane\" />\n              </Button>\n            </CardBody>\n          </Card>\n          <Add\n            url=\"messages/quick_sms\"\n            open={quick}\n            setOpenAdd={setQuick}\n            add_data={[\n              {\n                placeholder: \"Phonenumbers\",\n                type: \"textarea\",\n                name: \"phonenumbers\",\n                required: true,\n              },\n              {\n                placeholder: \"Message\",\n                type: \"textarea\",\n                name: \"message\",\n                required: true,\n              },\n            ]}\n            initial_values={{\n              phonenumbers: \"\",\n              message: \"\",\n            }}\n            update={update}\n            setUpdate={setUpdate}\n            modal_size=\"md\"\n            title=\"Quick SMS\"\n          />\n          <Add\n            url=\"messages/student_sms\"\n            open={student}\n            setOpenAdd={setStudent}\n            add_data={student_data}\n            initial_values={{\n              session_id: -1,\n              class_id: -1,\n              department_id: -1,\n              student_id: -1,\n              message: \"\",\n            }}\n            update={update}\n            setUpdate={setUpdate}\n            modal_size=\"md\"\n            title=\"Student SMS\"\n          />\n          <Add\n            url=\"messages/employee_sms\"\n            open={employee}\n            setOpenAdd={setEmployee}\n            add_data={employee_data}\n            initial_values={{\n              employee_type: -1,\n              employee_id: -1,\n              message: \"\",\n            }}\n            update={update}\n            setUpdate={setUpdate}\n            modal_size=\"md\"\n            title=\"Employee SMS\"\n          />\n        </>\n      ) : null}\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\message\\EmployeeAppMessage.js",["1380","1381","1382","1383","1384","1385","1386","1387"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function EmployeeAppMessage({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [employee_list, setEmployeeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({\n      method: \"get\",\n      url: \"employees/employee?options=true\",\n    })\n      .then((res) => setEmployeeList(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const send_data = [\n    {\n      placeholder: \"Employees\",\n      type: \"select\",\n      name: \"employee_id\",\n      options: employee_list,\n      required: true,\n    },\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"App Message\"\n        list_url=\"messages/employee_message\"\n        list_head={[\n          { title: \"Employee ID\", identifier: \"employee_identifier\" },\n          { title: \"Employee Name\", identifier: \"employee_name\" },\n          { title: \"Title\", identifier: \"title\" },\n          { title: \"Message\", identifier: \"content\" },\n        ]}\n        add_button_title=\"Send APP Message\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        modal_size=\"md\"\n        add_data={send_data}\n        edit_data={edit_data}\n        add_initial_values={{\n          employee_id: -1,\n          title: \"\",\n          message: \"\",\n        }}\n        query_title=\"Query Employee Messages\"\n        query_list={[\n          {\n            placeholder: \"Employees\",\n            type: \"select\",\n            name: \"employee_id\",\n            options: employee_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          employee_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\EmployeeManualAttendance.js",["1388"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport ManualAttendanceList from \"./ManualAttendanceList\";\n\nexport default function EmployoeeManualAttendance() {\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.employee_type;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div>\n      <Index\n        title=\"Employee Manual Attendance\"\n        list_url=\"/employees/mark_attendance\"\n        list_head={[\n          {\n            title: \"Employee ID\",\n            identifier: \"employee_id\",\n          },\n          {\n            title: \"Employee Name\",\n            identifier: \"employee_name\",\n          },\n          {\n            title: \"Attendance Status\",\n            identifier: \"attendance_status\",\n          },\n        ]}\n        CustomListComponent={ManualAttendanceList}\n        query_title=\"Query Employee List\"\n        query_list={[\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n          {\n            placeholder: \"Employee Type\",\n            type: \"select\",\n            name: \"employee_type\",\n            options: employee_type_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          date: \"\",\n          employee_type: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendance.js",["1389","1390"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport ManualAttendanceList from \"./ManualAttendanceList\";\n\nexport default function ManualAttendance() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        title=\"Student Manual Attendance\"\n        list_url=\"/students/mark_attendance\"\n        list_head={[\n          {\n            title: \"Role\",\n            identifier: \"role\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Attendance Status\",\n            identifier: \"attendance_status\",\n          },\n        ]}\n        CustomListComponent={ManualAttendanceList}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{\n          date: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\home\\Notification.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\NavBar.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\TopBar.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Albums.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Figures.js",["1391"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport CountUp from \"react-countup\";\n\nexport default function Figures({ figure }) {\n  return figure.students != undefined ? (\n    <ScrollAnimation animateIn=\"fadeIn\">\n      <section className=\"probootstrap-section\" id=\"probootstrap-counter\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-3 col-sm-6 col-xs-6 col-xxs-12 \">\n              <div\n                className=\"probootstrap-counter-wrap\"\n                style={{ display: \"flex\" }}\n              >\n                <div className=\"probootstrap-icon\">\n                  <i className=\"icon-users2\" />\n                </div>\n                <div className=\"probootstrap-text\">\n                  <span className=\"probootstrap-counter\">\n                    <CountUp end={figure.students} delay={3} />\n                  </span>\n                  <span className=\"probootstrap-counter-label\">\n                    Students Enrolled\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-sm-6 col-xs-6 col-xxs-12 \">\n              <div className=\"probootstrap-counter-wrap\">\n                <div className=\"probootstrap-icon\">\n                  <i className=\"icon-user-tie\" />\n                </div>\n                <div className=\"probootstrap-text\">\n                  <span className=\"probootstrap-counter\">\n                    <CountUp end={figure.teachers} delay={3} />\n                  </span>\n                  <span className=\"probootstrap-counter-label\">\n                    Certified Teachers\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"clearfix visible-sm-block visible-xs-block\" />\n            <div className=\"col-md-3 col-sm-6 col-xs-6 col-xxs-12 \">\n              <div className=\"probootstrap-counter-wrap\">\n                <div className=\"probootstrap-icon\">\n                  <i className=\"icon-library\" />\n                </div>\n                <div className=\"probootstrap-text\">\n                  <span className=\"probootstrap-counter\">\n                    <CountUp end={figure.result} delay={3} />%\n                  </span>\n                  <span className=\"probootstrap-counter-label\">Result</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-sm-6 col-xs-6 col-xxs-12 \">\n              <div className=\"probootstrap-counter-wrap\">\n                <div className=\"probootstrap-icon\">\n                  <i className=\"icon-smile2\" />\n                </div>\n                <div className=\"probootstrap-text\">\n                  <span className=\"probootstrap-counter\">\n                    <CountUp end={figure.parent_satisfaction} delay={3} />%\n                  </span>\n                  <span className=\"probootstrap-counter-label\">\n                    Parents Satisfaction\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </ScrollAnimation>\n  ) : null;\n}\n","J:\\Web\\school_argon\\src\\components\\website\\home\\Welcome.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Specialty.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Testimonial.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\Teachers.js",["1392"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nexport default function Teachers({ teachers }) {\n  return (\n    <div>\n      <section className=\"probootstrap-section\">\n        <div className=\"container\">\n          <ScrollAnimation animateIn=\"fadeInUp\">\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              <div className=\"col-md-6 col-md-offset-3 text-center section-heading \">\n                <h2>Meet Our Qualified Teachers</h2>\n                <p className=\"lead\">\n                  The teachers that shape your child are these.\n                </p>\n              </div>\n            </div>\n          </ScrollAnimation>\n          {/* END row */}\n          <ScrollAnimation animateIn=\"fadeInDown\">\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              {teachers.map((el, idx) => (\n                <div className=\"col-md-3 col-sm-6\" key={idx}>\n                  <div className=\"probootstrap-teacher text-center \">\n                    <figure className=\"media\">\n                      <img\n                        src={\n                          process.env.REACT_APP_IMAGE_PATH +\n                          \"/\" +\n                          el.employee_image\n                        }\n                        alt=\"Teacher\"\n                        className=\"img-responsive\"\n                      />\n                    </figure>\n                    <div className=\"text\">\n                      <h3>{el.employee_name}</h3>\n                      <p>{el.employee_post}</p>\n                      <ul className=\"probootstrap-footer-social\">\n                        <a>{el.employee_primary_phone}</a>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\n              <NavLink className=\"btn btn-success\" to=\"/employees/Teacher\">\n                View All Teachers\n              </NavLink>\n            </div>\n          </ScrollAnimation>\n        </div>\n      </section>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignID.js",["1393","1394","1395","1396"],"import Index from \"components/crud/Index\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport StudentAssignList from \"./StudentAssignList\";\r\nexport default function StudentAssignID({ permission }) {\r\n  const user_role = localStorage.getItem(\"role\");\r\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  const [selected_class, setSelectedClass] = useState(\"\");\r\n  const [selected_session, setSelectedSession] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Index\r\n        title=\"Student List\"\r\n        list_url=\"/students/student_assignment\"\r\n        list_head={[\r\n          {\r\n            title: \"Roll\",\r\n            identifier: \"role\",\r\n          },\r\n          {\r\n            title: \"Session\",\r\n            identifier: \"session\",\r\n          },\r\n          {\r\n            title: \"Class\",\r\n            identifier: \"class\",\r\n          },\r\n          {\r\n            title: \"Department\",\r\n            identifier: \"department\",\r\n          },\r\n          {\r\n            title: \"Student ID\",\r\n            identifier: \"student_identifier\",\r\n          },\r\n          {\r\n            title: \"Student Name\",\r\n            identifier: \"student_name\",\r\n          },\r\n        ]}\r\n        indexed={false}\r\n        list_active={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.view) != -1\r\n        }\r\n        CustomListComponent={StudentAssignList}\r\n        query_title=\"Query Student List\"\r\n        query_list={[\r\n          {\r\n            placeholder: \"Session\",\r\n            type: \"select\",\r\n            name: \"session_id\",\r\n            options: session_list,\r\n            setState: setSelectedSession,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Class\",\r\n            type: \"select\",\r\n            name: \"class_id\",\r\n            options: class_list,\r\n            setState: setSelectedClass,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Department\",\r\n            type: \"select\",\r\n            name: \"department_id\",\r\n            options: department_list.filter(\r\n              (element) =>\r\n                element.class_id == selected_class &&\r\n                element.session_id == selected_session\r\n            ),\r\n            required: false,\r\n          },\r\n        ]}\r\n        query_data={{\r\n          class_id: -1,\r\n          session_id: -1,\r\n          department_id: -1,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignID.js",["1397","1398","1399"],"import Index from \"components/crud/Index\";\r\nimport React, { useState } from \"react\";\r\nimport Api from \"services/API/Api\";\r\nimport EmployeeAssignList from \"./EmployeeAssignList\";\r\nexport default function EmployeeAssignID({ permission }) {\r\n  const user_role = localStorage.getItem(\"role\");\r\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Api({ method: \"get\", url: \"/employees/employee_type\" })\r\n      .then((res) => {\r\n        res.data.map((element) => {\r\n          element[\"text\"] = element.employee_type;\r\n          element[\"value\"] = element.employee_type;\r\n        });\r\n        setEmployeeTypeList(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Index\r\n        title=\"Employee List\"\r\n        list_url=\"/employees/employee\"\r\n        list_head={[\r\n          {\r\n            title: \"Employee ID\",\r\n            identifier: \"employee_id\",\r\n          },\r\n          {\r\n            title: \"Employee Name\",\r\n            identifier: \"employee_name\",\r\n          },\r\n        ]}\r\n        indexed={false}\r\n        list_active={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.view) != -1\r\n        }\r\n        CustomListComponent={EmployeeAssignList}\r\n        query_title=\"Query Employee List\"\r\n        query_list={[\r\n          {\r\n            placeholder: \"Employee Type\",\r\n            type: \"select\",\r\n            name: \"employee_type\",\r\n            options: employee_type_list,\r\n            required: false,\r\n          },\r\n        ]}\r\n        query_data={{}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\website\\home\\Slideshow.js",[],"J:\\Web\\school_argon\\src\\components\\website\\home\\HighLights.js",["1400"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport React, { useState } from \"react\";\r\nimport ScrollAnimation from \"react-animate-on-scroll\";\r\nexport default function HighLights({ notifs, articles }) {\r\n  return (\r\n    <div>\r\n      <section\r\n        className=\"probootstrap-section probootstrap-section-colored probootstrap-bg probootstrap-custom-heading probootstrap-tab-section text-center\"\r\n        style={{ backgroundImage: \"url(img/slider_2.jpg)\" }}\r\n      >\r\n        <ScrollAnimation animateIn=\"fadeInUp\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center section-heading \">\r\n                <h2 className=\"mb0\">Highlights</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ScrollAnimation>\r\n\r\n        <div className=\"articles-div\">\r\n          {articles.map((el, idx) => (\r\n            <div className=\"article\" key={idx}>\r\n              <div className=\"article-title\">{el.title}</div>\r\n              <div\r\n                className=\"article-content\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: draftToHtml(el.content),\r\n                }}\r\n              ></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\createLinks.js",["1401","1402","1403","1404","1405"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { NavLink as NavLinkRRD, useLocation } from \"react-router-dom\";\nimport { NavLink, NavItem, Collapse } from \"reactstrap\";\n\nconst user_role = localStorage.getItem(\"role\");\nconst permissions = JSON.parse(localStorage.getItem(\"permissions\"));\nconst createLinks = (routes, child = false) =>\n  routes.map((prop, key) =>\n    checkPermission(prop.permission) ? (\n      prop.children === undefined ? (\n        <MenuLink\n          layout={prop.layout}\n          path={prop.path}\n          icon={prop.icon}\n          name={prop.name}\n          key={key}\n          child={child}\n        />\n      ) : (\n        <CollapseLink\n          icon={prop.icon}\n          name={prop.name}\n          children={prop.children}\n          key={key}\n          path={prop.layout + prop.path}\n        />\n      )\n    ) : null\n  );\n\nconst checkPermission = (route_permission) => {\n  if (permissions != null) {\n    if (route_permission == undefined) return true;\n    else if (user_role == \"Super Admin\") return true;\n    else if (route_permission.length != undefined) {\n      const found = route_permission.some(\n        (element) => permissions.indexOf(element) != -1\n      );\n      return found;\n    } else {\n      const found = Object.values(route_permission).some(\n        (element) => permissions.indexOf(element) != -1\n      );\n      return found;\n    }\n  } else return false;\n};\nexport default createLinks;\nfunction MenuLink({ layout, path, icon, name, child }) {\n  return (\n    <NavItem>\n      <NavLink\n        to={layout + path}\n        tag={NavLinkRRD}\n        activeClassName=\"active\"\n        className={child ? `text-white` : null}\n      >\n        <i className={icon} style={{ color: \"grey\" }} />\n        <span style={{ color: \"grey\" }}>{name}</span>\n      </NavLink>\n    </NavItem>\n  );\n}\nfunction CollapseLink(props) {\n  const { path, icon, name, children } = props;\n  const location = useLocation();\n  const [open, setopen] = useState(location.pathname.startsWith(path));\n  const handleOpen = () => setopen(!open);\n  const routes = children;\n  const child = true;\n\n  return (\n    <NavItem>\n      <NavLink\n        onClick={handleOpen}\n        style={{\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div>\n          <i\n            className={icon}\n            style={{\n              minWidth: \"2.25rem\",\n              fontSize: \".9375rem\",\n              lineHeight: \"1.5rem\",\n            }}\n          />\n          {name}\n        </div>\n        <i\n          className=\"ni ni-bold-down\"\n          style={{\n            transition: \"0.3s\",\n            transform: `rotateX(${open ? `180deg` : `0deg`})`,\n          }}\n        />\n      </NavLink>\n      <Collapse isOpen={open}>\n        <div className=\"bg-dark\">\n          <ul style={{ listStyle: \"none\" }}>{createLinks(routes, child)}</ul>\n        </div>\n      </Collapse>\n    </NavItem>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\students\\StudentsCrud.js",["1406","1407","1408","1409","1410","1411","1412","1413","1414"],"import Index from \"components/crud/Index\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Call } from \"services/API/Call\";\r\n\r\nexport default function StudentsCrud({ permission }) {\r\n  const user_role = localStorage.getItem(\"role\");\r\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  const [class_id, setClass] = useState(\"\");\r\n  const [session_id, setSession] = useState(\"\");\r\n  const [selected_session, setSelectedSession] = useState(\"\");\r\n  const [selected_class, setSelectedClass] = useState(\"\");\r\n  const [religion_list, setreligion_list] = useState([]);\r\n  const [extended_info, setextended_info] = useState([]);\r\n  React.useEffect(() => {\r\n    Call({ method: \"get\", url: \"/settings/religion\" })\r\n      .then((res) => {\r\n        res.map((element) => {\r\n          element[\"text\"] = element.religion_name;\r\n          element[\"value\"] = element.religion_name;\r\n        });\r\n        setreligion_list(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    Call({ method: \"get\", url: \"/settings/students_extended_info?use=true\" })\r\n      .then((res) => {\r\n        setextended_info(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  React.useEffect(() => console.log(extended_info), [extended_info]);\r\n\r\n  return (\r\n    <div>\r\n      <Index\r\n        title=\"Student List\"\r\n        list_url=\"/students/student\"\r\n        indexed={false}\r\n        list_head={[\r\n          {\r\n            title: \"Roll\",\r\n            identifier: \"role\",\r\n          },\r\n\r\n          {\r\n            title: \"Session\",\r\n            identifier: \"session\",\r\n          },\r\n          {\r\n            title: \"Class\",\r\n            identifier: \"class\",\r\n          },\r\n          {\r\n            title: \"Student ID\",\r\n            identifier: \"student_identifier\",\r\n          },\r\n          {\r\n            title: \"Student Name\",\r\n            identifier: \"student_name\",\r\n          },\r\n          {\r\n            title: \"Image\",\r\n            identifier: \"student_image\",\r\n            type: \"image\",\r\n          },\r\n        ]}\r\n        file={true}\r\n        add={false}\r\n        list_active={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.view) != -1\r\n        }\r\n        remove={false}\r\n        edit={false}\r\n        query_title=\"Query Student List\"\r\n        query_list={[\r\n          {\r\n            placeholder: \"Session\",\r\n            type: \"select\",\r\n            name: \"session_id\",\r\n            options: session_list,\r\n            setState: setSession,\r\n            required: true,\r\n          },\r\n          {\r\n            placeholder: \"Class\",\r\n            type: \"select\",\r\n            name: \"class_id\",\r\n            options: class_list,\r\n            setState: setClass,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Department\",\r\n            type: \"select\",\r\n            name: \"department_id\",\r\n            options: department_list.filter(\r\n              (element) =>\r\n                element.class_id == class_id && element.session_id == session_id\r\n            ),\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Religion\",\r\n            type: \"select\",\r\n            name: \"religion\",\r\n            options: religion_list,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Gender\",\r\n            type: \"select\",\r\n            name: \"gender\",\r\n            options: [\r\n              { text: \"Male\", value: \"Male\" },\r\n              { text: \"Female\", value: \"Female\" },\r\n            ],\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Age\",\r\n            type: \"number\",\r\n            name: \"age\",\r\n            required: false,\r\n          },\r\n        ]}\r\n        query_data={{\r\n          session_id: -1,\r\n          class_id: -1,\r\n          department_id: -1,\r\n          religion: -1,\r\n          gender: -1,\r\n          age: \"\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\teachers\\message\\EmployeeAppMessage.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\message\\StudentAppMessage.js",["1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport Api from \"services/API/Api\";\nimport { Call } from \"services/API/Call\";\n\nexport default function StudentAppMessage() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(-1);\n  const [selected_session, setSelectedSession] = useState(-1);\n  const [selected_department, setSelectedDepartment] = useState(-1);\n  const [student_list, setStudentList] = useState([]);\n\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n  const [students, setStudents] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Api({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res.data))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  React.useEffect(() => {\n    if (class_id != -1 && session_id != -1 && department_id != -1)\n      Api({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id +\n          \"&session_id=\" +\n          session_id,\n      })\n        .then((res) => setStudents(res.data))\n        .catch((err) => console.log(err));\n  }, [class_id, department_id, session_id]);\n\n  const send_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: false,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      setState: setSelectedDepartment,\n      required: false,\n    },\n    {\n      placeholder: \"Students\",\n      type: \"select\",\n      name: \"student_id\",\n      options: student_list,\n      required: false,\n    },\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  const edit_data = [\n    {\n      placeholder: \"Message Title\",\n      type: \"text\",\n      name: \"title\",\n      required: true,\n    },\n    {\n      placeholder: \"Message Content\",\n      type: \"textarea\",\n      name: \"content\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student App Message\"\n        list_url=\"messages/student_message\"\n        list_head={[\n          { title: \"Student ID\", identifier: \"student_identifier\" },\n          { title: \"Student Name\", identifier: \"student_name\" },\n          { title: \"Title\", identifier: \"title\" },\n          { title: \"Message\", identifier: \"content\" },\n        ]}\n        add_button_title=\"Send Student APP Message\"\n        add={true}\n        edit={true}\n        remove={true}\n        modal_size=\"md\"\n        add_data={send_data}\n        edit_data={edit_data}\n        add_initial_values={{\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          student_id: -1,\n          title: \"\",\n          message: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setDepartment,\n            required: true,\n          },\n          {\n            placeholder: \"Students\",\n            type: \"select\",\n            name: \"student_id\",\n            options: students,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\results\\ResultPublishing.js",[],"J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\ID.js",["1426","1427","1428","1429","1430"],"import React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nimport List from \"../../List\";\nimport { useQuery } from \"../../Querytags\";\nimport AdmitCard from \"./IDCard\";\n\nexport default function ID() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [exam_data, setExamData] = useState({});\n  React.useEffect(() => {\n    let u = \"students/student_assignment?all=true\";\n    if (query.get(\"class_id\") != null) {\n      u += \"&class_id=\" + query.get(\"class_id\");\n      if (query.get(\"department_id\") != null)\n        u += \"&department_id=\" + query.get(\"department_id\");\n      if (query.get(\"session_id\") != null)\n        u += \"&session_id=\" + query.get(\"session_id\");\n    }\n\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <AdmitCard indexed={false} url={url} title=\"Students ID Card\" />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendanceList.js",["1431","1432","1433","1434","1435","1436"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport ManualAttendanceModel from \"./ManualAttendanceModel\";\n\nexport default function List(props) {\n  const {\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    update,\n    setupdate,\n    query_tags,\n  } = props;\n  const [values, setValues] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const handleChange = (id) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    if (index != -1) new_val.splice(index, 1);\n    else new_val.push(id);\n    setValues(new_val);\n  };\n  React.useEffect(() => {\n    let l = query_tags.filter((el) => el.title == \"Date\");\n    setDate(l.length > 0 ? l[0].value : null);\n  }, [list]);\n  return (\n    <>\n      {values.length > 0 ? (\n        <Button\n          size=\"sm\"\n          className=\"m-3\"\n          style={{ maxWidth: \"180px\" }}\n          onClick={() => setOpen(true)}\n        >\n          Mark Attendance\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={values.indexOf(element.id) != -1}\n                    handleChange={() => {\n                      handleChange(element.id);\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {values.length > 0 && date != null ? (\n        <ManualAttendanceModel\n          open={open}\n          setOpen={setOpen}\n          values={values}\n          update={update}\n          setUpdate={setupdate}\n          date={date}\n          url=\"students/mark_attendance\"\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\ManualAttendanceList.js",["1437","1438","1439","1440","1441","1442"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport ManualAttendanceModel from \"./ManualAttendanceModel\";\n\nexport default function List(props) {\n  const {\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    update,\n    setupdate,\n    query_tags,\n  } = props;\n  const [values, setValues] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [date, setDate] = useState(\"\");\n  const handleChange = (id) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    if (index != -1) new_val.splice(index, 1);\n    else new_val.push(id);\n    setValues(new_val);\n  };\n  React.useEffect(() => {\n    let l = query_tags.filter((el) => el.title == \"Date\");\n    setDate(l.length > 0 ? l[0].value : null);\n  }, [list]);\n  return (\n    <>\n      {values.length > 0 ? (\n        <Button\n          size=\"sm\"\n          className=\"m-3\"\n          style={{ maxWidth: \"180px\" }}\n          onClick={() => setOpen(true)}\n        >\n          Mark Attendance\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={values.indexOf(element.id) != -1}\n                    handleChange={() => {\n                      handleChange(element.id);\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {values.length > 0 && date != null ? (\n        <ManualAttendanceModel\n          open={open}\n          setOpen={setOpen}\n          values={values}\n          update={update}\n          setUpdate={setupdate}\n          date={date}\n          url=\"employees/mark_attendance\"\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceListMonth.js",["1443","1444","1445"],"import React, { useState } from \"react\";\n\nimport EmployeeAttendanceTable from \"./EmployeeAttendanceTable\";\n\nconst months = {\n  January: 1,\n  February: 2,\n  March: 3,\n  April: 4,\n  May: 5,\n  June: 6,\n  July: 7,\n  August: 8,\n  September: 9,\n  October: 10,\n  November: 11,\n  December: 12,\n};\nexport default function AttendanceList(props) {\n  const { query_tags, list, loading, indexed = true } = props;\n  const [head, sethead] = useState([]);\n  const [slice_length, setSliceLength] = useState(5);\n  const [year, setyear] = useState(\"\");\n  const [month, setmonth] = useState(\"\");\n\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      setyear(query_tags.filter((el) => el.title == \"Year\")[0].value);\n      setmonth(months[query_tags.filter((el) => el.title == \"Month\")[0].value]);\n    }\n    sethead(Object.keys(list));\n  }, [list, query_tags]);\n  return (\n    <>\n      {[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\n        <EmployeeAttendanceTable\n          key={i}\n          list={list}\n          top={head.slice(\n            (i + 1) * slice_length - slice_length,\n            (i + 1) * slice_length\n          )}\n          loading={loading}\n          year={year}\n          month={month}\n          indexed={indexed}\n        />\n      ))}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\website\\Pages.js",["1446","1447","1448","1449","1450","1451","1452","1453","1454","1455"],"import Index from \"components/crud/Index\";\nimport { MyEditor } from \"components/controls/MyEditor\";\nimport React, { useMemo, useState } from \"react\";\n\nexport default function Pages({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Page Title\",\n      type: \"text\",\n      name: \"page_title\",\n      required: true,\n    },\n    {\n      placeholder: \"Page Content\",\n      type: \"textarea\",\n      name: \"page_content\",\n      customInput: MyEditor,\n      rich: true,\n      required: true,\n    },\n    {\n      placeholder: \"Page Status\",\n      type: \"select\",\n      name: \"active\",\n      options: [\n        { text: \"Active\", value: 1 },\n        { text: \"Inactive\", value: 0 },\n      ],\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Page List\"\n        list_url=\"/website_settings/pages\"\n        list_head={[\n          {\n            title: \"Title\",\n            identifier: \"page_title\",\n          },\n          {\n            title: \"Page Status\",\n            identifier: \"page_status\",\n          },\n        ]}\n        modal_size=\"lg\"\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ page_title: \"\", page_content: \"\", active: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\AttendanceListDay.js",["1456","1457","1458"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function AttendanceList(props) {\n  const { query_tags, list, list_head, loading, indexed = true } = props;\n  const date =\n    query_tags.length > 0\n      ? query_tags.filter((element) => element.title == \"Date\")[0][\"value\"]\n      : \"\";\n  const [updated_list, setUpdatedList] = useState([]);\n  React.useEffect(() => {\n    if (list.length > 0) {\n      var merged = [];\n\n      list.forEach(function (item) {\n        var idx;\n        var found = merged.some(function (el, i) {\n          idx = el.employee_id === item.employee_id ? i : null;\n          return el.employee_id === item.employee_id;\n        });\n        if (!found) {\n          merged.push(item);\n        } else if (idx !== null) {\n          merged[idx][\"access_time\"] += \"\\n\" + item.access_time;\n        }\n      });\n      setUpdatedList(merged);\n    }\n  }, [list]);\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          updated_list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.identifier != \"date\" ? element[item.identifier] : date}\n                </th>\n              ))}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeeTypes.js",["1459","1460","1461","1462","1463","1464","1465","1466"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function EmployeeTypes({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Employee Type List\"\n        list_url=\"/employees/employee_type\"\n        list_head={[{ title: \"Employee Type\", identifier: \"employee_type\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"text\",\n            name: \"employee_type\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Employee Type\",\n            type: \"text\",\n            name: \"employee_type\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ employee_type: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeePosts.js",["1467","1468","1469","1470","1471","1472","1473","1474","1475"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function EmployeePosts({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [employee_type_list, setEmployeeTypeList] = useState([]);\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/employees/employee_type\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"text\"] = element.employee_type;\n          element[\"value\"] = element.id;\n        });\n        setEmployeeTypeList(res);\n      })\n      .catch((err) => console.log(err));\n  });\n  const send_data = [\n    {\n      placeholder: \"Employee Type\",\n      type: \"select\",\n      name: \"employee_type_id\",\n      options: employee_type_list,\n      required: true,\n    },\n    {\n      placeholder: \"Employee Post\",\n      type: \"text\",\n      name: \"employee_post\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Post List\"\n        list_url=\"/employees/employee_post\"\n        list_head={[{ title: \"Employee Post\", identifier: \"employee_post\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ employee_post: \"\", employee_type_id: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\website\\home\\MenuBar.js",["1476","1477","1478","1479"],"import React, { useState } from \"react\";\r\nimport {\r\n\tCollapse,\r\n\tDropdown,\r\n\tDropdownItem,\r\n\tDropdownMenu,\r\n\tNav,\r\n\tNavItem,\r\n} from \"reactstrap\";\r\nimport { NavLink as RNavLink } from \"react-router-dom\";\r\n\r\nexport default function MenuBar({\r\n\tpages,\r\n\tsub_pages,\r\n\ttoggle,\r\n\tisOpen,\r\n\tdropdownOpen,\r\n\ttoggleDropdown,\r\n\tsetDropdown,\r\n}) {\r\n\treturn (\r\n\t\t<Collapse isOpen={isOpen} navbar>\r\n\t\t\t<i\r\n\t\t\t\tclassName=\"fas fa-times text-danger d-md-none\"\r\n\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\tonClick={toggle}\r\n\t\t\t/>\r\n\t\t\t<Nav\r\n\t\t\t\tclassName=\"mr-auto\"\r\n\t\t\t\tnavbar\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginBottom: \"0px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<RNavLink className=\"nav-link\" to=\"/\">\r\n\t\t\t\t\t\tহোমপেজ\r\n\t\t\t\t\t</RNavLink>\r\n\t\t\t\t</NavItem>\r\n\t\t\t\t{pages.map((el, idx) =>\r\n\t\t\t\t\tsub_pages.filter((elem) => elem.page_parent == el.id).length > 0 ? (\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\tnav\r\n\t\t\t\t\t\t\tinNavbar\r\n\t\t\t\t\t\t\tisOpen={dropdownOpen == idx}\r\n\t\t\t\t\t\t\ttoggle={toggleDropdown}\r\n\t\t\t\t\t\t\tonMouseEnter={() => setDropdown(idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setDropdown()}\r\n\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<RNavLink to={\"/pages/\" + el.id} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t{el.page_title}\r\n\t\t\t\t\t\t\t</RNavLink>\r\n\t\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t\t{sub_pages.map((elem, index) =>\r\n\t\t\t\t\t\t\t\t\telem.page_parent == el.id ? (\r\n\t\t\t\t\t\t\t\t\t\t<DropdownItem key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t<RNavLink\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={\"/sub_pages/\" + elem.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{elem.page_title}\r\n\t\t\t\t\t\t\t\t\t\t\t</RNavLink>\r\n\t\t\t\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<NavItem key={idx}>\r\n\t\t\t\t\t\t\t<RNavLink className=\"nav-link\" to={\"/pages/\" + el.id}>\r\n\t\t\t\t\t\t\t\t{el.page_title}\r\n\t\t\t\t\t\t\t</RNavLink>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t\t<NavItem className=\"login\">\r\n\t\t\t\t\t<RNavLink className=\"nav-link login-button\" to={\"/login\"}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</RNavLink>\r\n\t\t\t\t</NavItem>\r\n\t\t\t</Nav>\r\n\t\t</Collapse>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\EmployeeCrud.js",["1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492"],"import Index from \"components/crud/Index\";\r\nimport React, { useState } from \"react\";\r\nimport { Call } from \"services/API/Call\";\r\nimport ExtendedInput from \"../students/ExtendedInput\";\r\n\r\nexport default function AccountsCrud({ permission }) {\r\n\tconst user_role = localStorage.getItem(\"role\");\r\n\tconst user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n\tconst [religion_list, setreligion_list] = useState([]);\r\n\tconst [employee_post_list, setEmployeePostList] = useState([]);\r\n\tconst [employee_type_list, setEmployeeTypeList] = useState([]);\r\n\r\n\tconst [selected_employee_type, setSelectedEmployeeType] = useState([]);\r\n\r\n\tconst [extended_info, setExtendedInfo] = useState([]);\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url: \"/settings/religion\" })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.map((element) => {\r\n\t\t\t\t\telement[\"text\"] = element.religion_name;\r\n\t\t\t\t\telement[\"value\"] = element.religion_name;\r\n\t\t\t\t});\r\n\t\t\t\tsetreligion_list(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tCall({ method: \"get\", url: \"/employees/employee_type\" })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.map((element) => {\r\n\t\t\t\t\telement[\"text\"] = element.employee_type;\r\n\t\t\t\t\telement[\"value\"] = element.employee_type;\r\n\t\t\t\t});\r\n\t\t\t\tsetEmployeeTypeList(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tCall({ method: \"get\", url: \"/employees/employee_post\" })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.map((element) => {\r\n\t\t\t\t\telement[\"text\"] = element.employee_post;\r\n\t\t\t\t\telement[\"value\"] = element.employee_post;\r\n\t\t\t\t});\r\n\t\t\t\tsetEmployeePostList(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tCall({ method: \"get\", url: \"/settings/employees_extended_info?use=true\" })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetExtendedInfo(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\r\n\tconst add_data = [\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Mother Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"mother_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Father Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"father_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Image\",\r\n\t\t\ttype: \"file\",\r\n\t\t\tname: \"employee_image\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Type\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_type\",\r\n\t\t\toptions: employee_type_list,\r\n\t\t\tsetState: setSelectedEmployeeType,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Post\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_post\",\r\n\t\t\toptions: employee_post_list.filter(\r\n\t\t\t\t(element) => element.employee_type == selected_employee_type\r\n\t\t\t),\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Gender\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_gender\",\r\n\t\t\toptions: [\r\n\t\t\t\t{ text: \"Male\", value: \"Male\" },\r\n\t\t\t\t{ text: \"Female\", value: \"Female\" },\r\n\t\t\t],\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Religion\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_religion\",\r\n\t\t\toptions: religion_list,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Date Of Birth\",\r\n\t\t\ttype: \"date\",\r\n\t\t\tname: \"date_of_birth\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Primary Phone\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_primary_phone\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Secondary Phone\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_secondary_phone\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Email\",\r\n\t\t\ttype: \"email\",\r\n\t\t\tname: \"employee_email\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcustomInput: ExtendedInput,\r\n\t\t\ttitle: \"Employee's Additional Info\",\r\n\t\t\tname: \"employee_extended_info\",\r\n\t\t\tchildren: extended_info,\r\n\t\t},\r\n\t];\r\n\tconst edit_data = [\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Mother Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"mother_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Father Name\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"father_name\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Image\",\r\n\t\t\ttype: \"file\",\r\n\t\t\tname: \"employee_image\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Type\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_type\",\r\n\t\t\toptions: employee_type_list,\r\n\t\t\tsetState: setSelectedEmployeeType,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Post\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_post\",\r\n\t\t\toptions: employee_post_list.filter(\r\n\t\t\t\t(element) => element.employee_type == selected_employee_type\r\n\t\t\t),\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Gender\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_gender\",\r\n\t\t\toptions: [\r\n\t\t\t\t{ text: \"Male\", value: \"Male\" },\r\n\t\t\t\t{ text: \"Female\", value: \"Female\" },\r\n\t\t\t],\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Religion\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"employee_religion\",\r\n\t\t\toptions: religion_list,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Date Of Birth\",\r\n\t\t\ttype: \"date\",\r\n\t\t\tname: \"date_of_birth\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Primary Phone\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_primary_phone\",\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Secondary Phone\",\r\n\t\t\ttype: \"text\",\r\n\t\t\tname: \"employee_secondary_phone\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Employee Email\",\r\n\t\t\ttype: \"email\",\r\n\t\t\tname: \"employee_email\",\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\tplaceholder: \"Job Status\",\r\n\t\t\ttype: \"select\",\r\n\t\t\tname: \"job_status\",\r\n\t\t\toptions: [\r\n\t\t\t\t{ text: \"Employee\", value: \"employee\" },\r\n\t\t\t\t{ text: \"Left\", value: \"left\" },\r\n\t\t\t],\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tcustomInput: ExtendedInput,\r\n\t\t\ttitle: \"Employee's Additional Info\",\r\n\t\t\tname: \"employee_extended_info\",\r\n\t\t\tchildren: extended_info,\r\n\t\t},\r\n\t];\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Index\r\n\t\t\t\ttitle=\"Employee List\"\r\n\t\t\t\tlist_url=\"/employees/employee\"\r\n\t\t\t\tlist_head={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Image\",\r\n\t\t\t\t\t\tidentifier: \"employee_image\",\r\n\t\t\t\t\t\ttype: \"image\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"ID\",\r\n\t\t\t\t\t\tidentifier: \"employee_id\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Name\",\r\n\t\t\t\t\t\tidentifier: \"employee_name\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Type\",\r\n\t\t\t\t\t\tidentifier: \"employee_type\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Post\",\r\n\t\t\t\t\t\tidentifier: \"employee_post\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tplaceholder: \"Date Of Birth\",\r\n\t\t\t\t\t\tidentifier: \"date_of_birth\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Gender\",\r\n\t\t\t\t\t\tidentifier: \"employee_gender\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Religion\",\r\n\t\t\t\t\t\tidentifier: \"employee_religion\",\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tfile={true}\r\n\t\t\t\tadd={\r\n\t\t\t\t\tuser_role == \"Super Admin\" ||\r\n\t\t\t\t\tuser_permissions.indexOf(permission.create) != -1\r\n\t\t\t\t}\r\n\t\t\t\tlist_active={\r\n\t\t\t\t\tuser_role == \"Super Admin\" ||\r\n\t\t\t\t\tuser_permissions.indexOf(permission.view) != -1\r\n\t\t\t\t}\r\n\t\t\t\tremove={\r\n\t\t\t\t\tuser_role == \"Super Admin\" ||\r\n\t\t\t\t\tuser_permissions.indexOf(permission.delete) != -1\r\n\t\t\t\t}\r\n\t\t\t\tedit={\r\n\t\t\t\t\tuser_role == \"Super Admin\" ||\r\n\t\t\t\t\tuser_permissions.indexOf(permission.update) != -1\r\n\t\t\t\t}\r\n\t\t\t\tadd_data={add_data}\r\n\t\t\t\tedit_data={edit_data}\r\n\t\t\t\tadd_initial_values={{\r\n\t\t\t\t\temployee_name: \"\",\r\n\t\t\t\t\tmother_name: \"\",\r\n\t\t\t\t\tfather_name: \"\",\r\n\t\t\t\t\temployee_image: {},\r\n\t\t\t\t\tdate_of_birth: \"\",\r\n\t\t\t\t\temployee_type: -1,\r\n\t\t\t\t\temployee_post: -1,\r\n\t\t\t\t\temployee_gender: -1,\r\n\t\t\t\t\temployee_religion: -1,\r\n\t\t\t\t\temployee_age: \"\",\r\n\t\t\t\t\temployee_primary_phone: \"\",\r\n\t\t\t\t\temployee_secondary_phone: \"\",\r\n\t\t\t\t\temployee_email: \"\",\r\n\t\t\t\t\temployee_extended_info: \"{}\",\r\n\t\t\t\t}}\r\n\t\t\t\tquery_title=\"Query Employee List\"\r\n\t\t\t\tquery_list={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tplaceholder: \"Employee ID\",\r\n\t\t\t\t\t\ttype: \"text\",\r\n\t\t\t\t\t\tname: \"employee_id\",\r\n\t\t\t\t\t\trequired: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tplaceholder: \"Employee Type\",\r\n\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\tname: \"employee_type\",\r\n\t\t\t\t\t\toptions: employee_type_list,\r\n\t\t\t\t\t\trequired: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tplaceholder: \"Religion\",\r\n\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\tname: \"religion\",\r\n\t\t\t\t\t\toptions: religion_list,\r\n\t\t\t\t\t\trequired: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tplaceholder: \"Gender\",\r\n\t\t\t\t\t\ttype: \"select\",\r\n\t\t\t\t\t\tname: \"gender\",\r\n\t\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t\t{ text: \"Male\", value: \"Male\" },\r\n\t\t\t\t\t\t\t{ text: \"Female\", value: \"Female\" },\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\trequired: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\tquery_data={{\r\n\t\t\t\t\temployee_id: \"\",\r\n\t\t\t\t\temployee_type: -1,\r\n\t\t\t\t\treligion: -1,\r\n\t\t\t\t\tgender: -1,\r\n\t\t\t\t}}\r\n\t\t\t\tprint_url=\"employees/list\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignList.js",["1493"],"import React, { useState } from \"react\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport EmployeeAssignModal from \"./EmployeeAssignModal\";\r\n\r\nexport default function EmployeeAssignList(props) {\r\n  const { list, list_head, loading } = props;\r\n\r\n  const [open, setopen] = useState(false);\r\n  const [initial_values, setInitialValues] = useState({ id: \"\", card: \"\" });\r\n  const add_data = [\r\n    {\r\n      placeholder: \"Employee ID\",\r\n      type: \"text\",\r\n      name: \"id\",\r\n      required: true,\r\n      disabled: true,\r\n    },\r\n    {\r\n      placeholder: \"Card\",\r\n      type: \"text\",\r\n      name: \"card\",\r\n      required: true,\r\n    },\r\n  ];\r\n  const setAssignment = (employee_id) => {\r\n    setInitialValues({ id: employee_id, card: \"\" });\r\n    setopen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (!open) setInitialValues({ id: \"\", card: \"\" });\r\n  }, [open]);\r\n  return (\r\n    <>\r\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            {list_head.map((item, index) => (\r\n              <th key={uuid()}>{item.title}</th>\r\n            ))}\r\n            <th>Assign</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                <Spinner color=\"primary\" />\r\n              </td>\r\n            </tr>\r\n          ) : typeof list == \"object\" && list.length > 0 ? (\r\n            list.map((element, index) => (\r\n              <tr key={uuid()}>\r\n                {list_head.map((item, index) => (\r\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\r\n                    {element[item.identifier]}\r\n                  </th>\r\n                ))}\r\n                <th>\r\n                  <Button onClick={() => setAssignment(element.employee_id)}>\r\n                    Assign Card\r\n                  </Button>\r\n                </th>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                Found Nothing\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      {initial_values.id != \"\" ? (\r\n        <EmployeeAssignModal\r\n          open={open}\r\n          setOpen={setopen}\r\n          add_data={add_data}\r\n          initial_values={initial_values}\r\n          title=\"Employee Card Assignment\"\r\n          url=\"attendance/assign_card\"\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignList.js",["1494"],"import React, { useState } from \"react\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport StudentAssignModal from \"./StudentAssignModal\";\r\n\r\nexport default function StudentAssignList(props) {\r\n  const { list, list_head, loading } = props;\r\n\r\n  const [open, setopen] = useState(false);\r\n  const [initial_values, setInitialValues] = useState({ id: \"\", card: \"\" });\r\n  const add_data = [\r\n    {\r\n      placeholder: \"Student ID\",\r\n      type: \"text\",\r\n      name: \"id\",\r\n      required: true,\r\n      disabled: true,\r\n    },\r\n    {\r\n      placeholder: \"Card\",\r\n      type: \"text\",\r\n      name: \"card\",\r\n      required: true,\r\n    },\r\n  ];\r\n  const setAssignment = (student_id) => {\r\n    setInitialValues({ id: student_id, card: \"\" });\r\n    setopen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    if (!open) setInitialValues({ id: \"\", card: \"\" });\r\n  }, [open]);\r\n  return (\r\n    <>\r\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            {list_head.map((item, index) => (\r\n              <th key={uuid()}>{item.title}</th>\r\n            ))}\r\n            <th>Assign</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                <Spinner color=\"primary\" />\r\n              </td>\r\n            </tr>\r\n          ) : typeof list == \"object\" && list.length > 0 ? (\r\n            list.map((element, index) => (\r\n              <tr key={uuid()}>\r\n                {list_head.map((item, index) => (\r\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\r\n                    {element[item.identifier]}\r\n                  </th>\r\n                ))}\r\n                <th>\r\n                  <Button\r\n                    onClick={() => setAssignment(element.student_identifier)}\r\n                  >\r\n                    Assign Card\r\n                  </Button>\r\n                </th>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                Found Nothing\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      {initial_values.id != \"\" ? (\r\n        <StudentAssignModal\r\n          open={open}\r\n          setOpen={setopen}\r\n          add_data={add_data}\r\n          initial_values={initial_values}\r\n          title=\"Student Card Assignment\"\r\n          url=\"attendance/assign_card\"\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\students\\results\\ResultList.js",[],"J:\\Web\\school_argon\\src\\components\\students\\Dashboard.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Exams.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendance.js",["1495","1496"],"J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceReportDay.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceReportMonth.js",[],"J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReport.js",[],"J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReceipt.js",[],"J:\\Web\\school_argon\\src\\components\\students\\payments\\due_payment\\DuePayment.js",[],"J:\\Web\\school_argon\\src\\components\\students\\message\\AppMessage.js",[],"J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\IDCard.js",["1497","1498","1499"],"import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Call } from \"services/API/Call\";\nimport PrintOptions from \"../../PrintOptions\";\nimport SchoolInfo from \"../../SchoolInfo\";\nimport { Input } from \"reactstrap\";\nimport ICard from \"./ICard\";\nimport { Button } from \"reactstrap\";\n\nexport default function IDCard(props) {\n  const { url, title, indexed = true } = props;\n  const [list, setList] = useState([]);\n  const [logo_size, setLogoSize] = useState(50);\n  const [image_size, setImageSize] = useState(80);\n\n  const [head_color, setHeadColor] = useState(\"#525f7f\");\n  const [data_color, setDataColor] = useState(\"#3D4956\");\n  const [border_color, setBorderColor] = useState(\"#e9ecef\");\n  const [head_size, setHeadSize] = useState(12);\n  const [data_size, setDataSize] = useState(11);\n  const [card_width, setCardWidth] = useState(260);\n  const [card_height, setCardHeight] = useState(310);\n  const [school_info, setSchoolInfo] = useState({});\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url })\n      .then((res) => {\n        setList(res);\n      })\n      .catch((err) => console.log(err));\n\n    Call({ method: \"get\", url: \"settings/institute_info\" })\n      .then((res) => {\n        setSchoolInfo(res);\n      })\n      .catch((err) => console.log(err));\n  }, [url]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\n        <div className=\"mb-1 mt-1\">Table Options</div>\n        <small>Head Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"Head Size\"\n          value={head_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setHeadSize(e.target.value)}\n        />\n        <small>Data Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"Data Size\"\n          value={data_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setDataSize(e.target.value)}\n        />\n        <small>Logo Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"Logo Size\"\n          value={logo_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setLogoSize(e.target.value)}\n        />\n        <small>Image Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"Image Size\"\n          value={image_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setImageSize(e.target.value)}\n        />\n        <small>ID Card Width</small>\n        <Input\n          type=\"number\"\n          placeholder=\"ID Card Width\"\n          value={card_width}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setCardWidth(e.target.value)}\n        />\n        <small>ID Card Height</small>\n        <Input\n          type=\"number\"\n          placeholder=\"ID Card Height\"\n          value={card_height}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setCardHeight(e.target.value)}\n        />\n        <small>Head Color</small>\n        <Input\n          type=\"color\"\n          placeholder=\"Address,Number Color\"\n          value={head_color}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setHeadColor(e.target.value)}\n        />\n        <small>Data Color</small>\n        <Input\n          type=\"color\"\n          placeholder=\"Data Color\"\n          value={data_color}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setDataColor(e.target.value)}\n        />\n        <small>Border Color</small>\n        <Input\n          type=\"color\"\n          placeholder=\"Border Color\"\n          value={border_color}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setBorderColor(e.target.value)}\n        />\n        <Button size=\"sm\" type=\"button\" onClick={() => window.print()}>\n          Print\n        </Button>\n      </div>\n      <div style={{ position: \"relative\", display: \"flex\", flexWrap: \"wrap\" }}>\n        {list.length > 0\n          ? list.map((el, idx) => (\n              <ICard\n                key={idx}\n                data={el}\n                colors={{ data_color, head_color, border_color }}\n                size={{\n                  data_size,\n                  head_size,\n                  logo_size,\n                  image_size,\n                  card_height,\n                  card_width,\n                }}\n                school_info={school_info}\n              />\n            ))\n          : null}\n      </div>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\attendance\\StudentsAttendanceReportDay.js",[],"J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\Admit.js",["1500","1501"],"import React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nimport List from \"../../List\";\nimport { useQuery } from \"../../Querytags\";\nimport AdmitCard from \"./AdmitCard\";\n\nexport default function Admit() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [exam_data, setExamData] = useState({});\n  React.useEffect(() => {\n    let u = \"students/student_assignment?all=true\";\n    if (query.get(\"class_id\") != null) {\n      u += \"&class_id=\" + query.get(\"class_id\");\n      if (query.get(\"department_id\") != null)\n        u += \"&department_id=\" + query.get(\"department_id\");\n      if (query.get(\"session_id\") != null)\n        u += \"&session_id=\" + query.get(\"session_id\");\n    }\n    if (query.get(\"exam_id\") != null) {\n      let exam_url =\n        \"exams/exam?admit_card=true&exam_id=\" + query.get(\"exam_id\");\n      Call({ method: \"get\", url: exam_url })\n        .then((res) => setExamData(res))\n        .catch((err) => console.log(err));\n    }\n\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <AdmitCard\n          indexed={false}\n          url={url}\n          title=\"Students Admit Card\"\n          exam_data={exam_data}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceReportMonth.js",[],"J:\\Web\\school_argon\\src\\components\\print\\payments\\Receipt.js",["1502"],"import React, { useState } from \"react\";\nimport { useQuery } from \"../Querytags\";\nimport List from \"./List\";\n\nexport default function Receipt() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  React.useEffect(() => {\n    let u = \"payments/student_payment_receipt?\";\n    if (query.get(\"receipt_id\") != null) {\n      u += \"receipt_id=\" + query.get(\"receipt_id\");\n    }\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          url={url}\n          title=\"Students Payment Receipt\"\n          head={[\n            \"Date\",\n            \"Payment Category\",\n            \"Payment Info\",\n            \"Fees\",\n            \"Paid Amount\",\n          ]}\n          val={[\n            \"date\",\n            \"payment_category\",\n            \"payment_info\",\n            \"payment_amount\",\n            \"paid_amount\",\n          ]}\n          student_id={query.get(\"student_id\")}\n          receipt_id={query.get(\"receipt_id\")}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\payments\\DueList.js",["1503"],"import React, { useState } from \"react\";\nimport { useQuery } from \"../Querytags\";\nimport Due from \"./Due\";\nimport { Call } from \"services/API/Call\";\n\nexport default function DueList() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    let u = \"payments/student_due?\";\n    if (query.get(\"student_id\") != null) {\n      u += \"student_id=\" + query.get(\"student_id\");\n      if (query.get(\"session\") != null) u += \"&session=\" + query.get(\"session\");\n    }\n    setUrl(u);\n    Call({\n      method: \"get\",\n      url: \"students/student?student_id=\" + query.get(\"student_id\"),\n    })\n      .then((res) => {\n        setStudentInfo(res.length > 0 ? res[0] : []);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <Due\n          url={url}\n          title=\"Students Due List\"\n          head={[\"Payment Category\", \"Payment Info\", \"Fees\"]}\n          val={[\"payment_category\", \"payment_info\", \"fees\"]}\n          query_info={[\n            { title: \"Student ID:\", value: student_info.student_identifier },\n            { title: \"Student Name:\", value: student_info.student_name },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\students\\StudentsAttendance.js",["1504","1505","1506","1507","1508"],"import { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nimport List from \"../List\";\nimport { useQuery } from \"../Querytags\";\n\nexport default function StudentsAttendance() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [data, setData] = useState({ cls: \"\", department: \"\", session: \"\" });\n  React.useEffect(() => {\n    let u = \"students/student_attendance?group=true\";\n    if (query.get(\"class_id\") != null) {\n      u += \"&class_id=\" + query.get(\"class_id\");\n    }\n\n    if (query.get(\"date\") != null) u += \"&date=\" + query.get(\"date\");\n    if (query.get(\"department_id\") != null)\n      u += \"&department_id=\" + query.get(\"department_id\");\n    if (query.get(\"session_id\") != null)\n      u += \"&session_id=\" + query.get(\"session_id\");\n\n    console.log(u);\n    setUrl(u);\n  }, []);\n  React.useEffect(() => {\n    if (\n      class_list.length > 0 &&\n      department_list.length > 0 &&\n      session_list.length > 0\n    ) {\n      const cls_list = class_list.filter(\n        (el) => el.value == query.get(\"class_id\")\n      );\n      const dept_list = department_list.filter(\n        (el) => el.value == query.get(\"department_id\")\n      );\n      const year_list = session_list.filter(\n        (el) => el.value == query.get(\"session_id\")\n      );\n      const cls = cls_list.length > 0 ? cls_list[0].text : null;\n      const dept = dept_list.length > 0 ? dept_list[0].text : null;\n      const year = year_list.length > 0 ? year_list[0].text : null;\n      setData({\n        class: cls,\n        department: dept,\n        session: year,\n        date: query.get(\"date\"),\n      });\n    }\n  }, [class_list, department_list, session_list]);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          indexed={false}\n          url={url}\n          title=\"Students List\"\n          head={[\n            \"Roll\",\n            \"ID\",\n            \"Student Name\",\n            \"Attendance Status\",\n            \"Access Time\",\n          ]}\n          val={[\n            \"role\",\n            \"student_identifier\",\n            \"student_name\",\n            \"attendance_status\",\n            \"access_time_group\",\n          ]}\n          query_info={[\n            { title: \"Class: \", value: data.class },\n            { title: \"Department: \", value: data.department },\n            { title: \"Session: \", value: data.session },\n            { title: \"Date: \", value: data.date },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeeAttendance.js",["1509"],"import React, { useState } from \"react\";\n\nimport List from \"../List\";\nimport { useQuery } from \"../Querytags\";\n\nexport default function EmployeeAttendance() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  React.useEffect(() => {\n    let u = \"employees/employee_attendance?group=true\";\n    if (query.get(\"date\") != null) u += \"&date=\" + query.get(\"date\");\n    if (query.get(\"employee_type\") != null)\n      u += \"&employee_type=\" + query.get(\"employee_type\");\n    if (query.get(\"employee_id\") != null)\n      u += \"&employee_id=\" + query.get(\"employee_id\");\n\n    console.log(u);\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          indexed={false}\n          url={url}\n          title=\"Employee Attendance\"\n          head={[\"ID\", \"Employee Name\", \"Attendance Status\", \"Access Time\"]}\n          val={[\n            \"employee_id\",\n            \"employee_name\",\n            \"attendance_status\",\n            \"access_time_group\",\n          ]}\n          query_info={[\n            { title: \"Employee Type : \", value: query.get(\"employee_type\") },\n            { title: \"Date : \", value: query.get(\"date\") },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\StudentsAttendanceMonth.js",["1510","1511","1512","1513","1514","1515","1516"],"import React, { useContext, useState } from \"react\";\n\nimport List from \"./List\";\nimport { useQuery } from \"../../Querytags\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\n\nexport default function StudentsAttendanceMonth() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [year, setYear] = useState();\n  const [data, setData] = useState({ class: \"\", department: \"\", session: \"\" });\n  const month_names = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  React.useEffect(() => {\n    if (session_list.length > 0) {\n      let u = \"students/student_monthly_attendance?group=true\";\n      if (query.get(\"class_id\") != null) {\n        u += \"&class_id=\" + query.get(\"class_id\");\n      }\n\n      if (query.get(\"month\") != null) u += \"&month=\" + query.get(\"month\");\n      if (query.get(\"year\") != null) u += \"&year=\" + query.get(\"year\");\n      if (query.get(\"student_id\") != null)\n        u += \"&student_id=\" + query.get(\"student_id\");\n      if (query.get(\"department_id\") != null)\n        u += \"&department_id=\" + query.get(\"department_id\");\n      if (query.get(\"session_id\") != null)\n        u += \"&session_id=\" + query.get(\"session_id\");\n\n      setUrl(u);\n      setYear(session_list.filter((e) => e.value == query.get(\"year\"))[0].text);\n    }\n  }, [session_list]);\n\n  React.useEffect(() => {\n    if (\n      class_list.length > 0 &&\n      department_list.length > 0 &&\n      session_list.length > 0\n    ) {\n      const cls_list = class_list.filter(\n        (el) => el.value == query.get(\"class_id\")\n      );\n      const dept_list = department_list.filter(\n        (el) => el.value == query.get(\"department_id\")\n      );\n      const year_list = session_list.filter(\n        (el) => el.value == query.get(\"session_id\")\n      );\n      const cls = cls_list.length > 0 ? cls_list[0].text : null;\n      const dept = dept_list.length > 0 ? dept_list[0].text : null;\n      const year = year_list.length > 0 ? year_list[0].text : null;\n      setData({ class: cls, department: dept, session: year });\n    }\n  }, [class_list, department_list, session_list]);\n  return (\n    <>\n      {url.length > 0 && year != undefined ? (\n        <List\n          year={year}\n          month={query.get(\"month\")}\n          indexed={false}\n          url={url}\n          title=\"Students Monthly Attendance\"\n          query_info={[\n            { title: \"Class : \", value: data.class },\n            { title: \"Department : \", value: data.department },\n            { title: \"Session : \", value: data.session },\n            { title: \"Month : \", value: month_names[query.get(\"month\")] },\n            { title: \"Year : \", value: year },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\EmployeesAttendanceMonth.js",["1517","1518","1519"],"import React, { useContext, useState } from \"react\";\n\nimport List from \"./List\";\nimport { useQuery } from \"../../Querytags\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\n\nexport default function EmployeesAttendanceMonth() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const { session_list } = useContext(ClassDeptSessionContext);\n  const [year, setYear] = useState();\n  const month_names = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  React.useEffect(() => {\n    if (session_list.length > 0) {\n      let u = \"employees/employee_monthly_attendance?group=true\";\n      if (query.get(\"month\") != null) u += \"&month=\" + query.get(\"month\");\n      if (query.get(\"year\") != null) {\n        u += \"&year=\" + query.get(\"year\");\n        setYear(\n          session_list.filter((e) => e.value == query.get(\"year\"))[0].text\n        );\n      }\n      if (query.get(\"employee_id\") != null)\n        u += \"&employee_id=\" + query.get(\"employee_id\");\n      if (query.get(\"employee_type\") != null)\n        u += \"&employee_type=\" + query.get(\"employee_type\");\n\n      setUrl(u);\n    }\n  }, [session_list]);\n  return (\n    <>\n      {url.length > 0 && year != undefined ? (\n        <List\n          year={year}\n          month={query.get(\"month\")}\n          indexed={false}\n          url={url}\n          title=\"Employee Monthly Attendance\"\n          query_info={[\n            { title: \"Employee Type : \", value: query.get(\"employee_type\") },\n            { title: \"Month : \", value: month_names[query.get(\"month\")] },\n            { title: \"Year : \", value: year },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\accounts\\Accounts.js",["1520"],"import React, { useState } from \"react\";\nimport { useQuery } from \"../Querytags\";\nimport List from \"./List\";\n\nexport default function Accounts() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  React.useEffect(() => {\n    let u = \"accounts/account?\";\n    if (query.get(\"from\") != null) {\n      u += \"from=\" + query.get(\"from\");\n      if (query.get(\"to\") != null) u += \"&to=\" + query.get(\"to\");\n    }\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          url={url}\n          title=\"Accounts Report\"\n          head={[\"Entry Category\", \"Entry Info\", \"Amount\", \"Date\"]}\n          val={[\"entry_category\", \"entry_info\", \"amount\", \"date\"]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\result\\ResultCard.js",[],"J:\\Web\\school_argon\\src\\components\\print\\payments\\PaymentList.js",["1521"],"import React, { useState } from \"react\";\nimport { useQuery } from \"../Querytags\";\nimport List from \"../List\";\nimport { Call } from \"services/API/Call\";\n\nexport default function PaymentList() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    let u = \"payments/student_payment?\";\n    if (query.get(\"student_id\") != null) {\n      u += \"student_id=\" + query.get(\"student_id\");\n      if (query.get(\"session\") != null) u += \"&session=\" + query.get(\"session\");\n    }\n    setUrl(u);\n    Call({\n      method: \"get\",\n      url: \"students/student?student_id=\" + query.get(\"student_id\"),\n    })\n      .then((res) => {\n        setStudentInfo(res.length > 0 ? res[0] : []);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          url={url}\n          title=\"Students Payment List\"\n          head={[\n            \"Payment Category\",\n            \"Payment Info\",\n            \"Fees\",\n            \"Payment Amount\",\n            \"Date\",\n          ]}\n          val={[\n            \"payment_category\",\n            \"payment_info\",\n            \"payment_amount\",\n            \"paid_amount\",\n            \"date\",\n          ]}\n          query_info={[\n            { title: \"Student ID:\", value: student_info.student_id },\n            { title: \"Student Name:\", value: student_info.student_name },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeeList.js",["1522"],"import React, { useState } from \"react\";\n\nimport List from \"../List\";\nimport { useQuery } from \"../Querytags\";\nexport default function EmployeeList() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  React.useEffect(() => {\n    let u = \"employees/employee?\";\n    if (query.get(\"employee_type\") != null) {\n      u += \"employee_type=\" + query.get(\"employee_type\");\n    }\n\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          indexed={false}\n          url={url}\n          title=\"Employee List\"\n          head={[\n            \"ID\",\n            \"Employee Name\",\n            \"Mother Name\",\n            \"Father Name\",\n            \"Religion\",\n            \"Gender\",\n            \"Age\",\n          ]}\n          val={[\n            \"employee_id\",\n            \"employee_name\",\n            \"mother_name\",\n            \"father_name\",\n            \"employee_religion\",\n            \"employee_gender\",\n            \"employee_age\",\n          ]}\n          query_info={[\n            { title: \"Employee Type : \", value: query.get(\"employee_type\") },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\EmployeePhonebook.js",["1523"],"import React, { useState } from \"react\";\nimport List from \"../List\";\nimport { useQuery } from \"../Querytags\";\n\nexport default function EmployeePhonebook() {\n  let query = useQuery();\n  const [url, setUrl] = useState(\"\");\n  React.useEffect(() => {\n    let u = \"employees/employee?phonebook=true&\";\n    if (query.get(\"employee_type\") != null) {\n      u += \"employee_type=\" + query.get(\"employee_type\");\n    }\n\n    setUrl(u);\n  }, []);\n  return (\n    <>\n      {url.length > 0 ? (\n        <List\n          url={url}\n          title=\"Employee Phonebook\"\n          head={[\"ID\", \"Employee Name\", \"Primary Phone\", \"Secondary Phone\"]}\n          val={[\n            \"employee_id\",\n            \"employee_name\",\n            \"employee_primary_phone\",\n            \"employee_secondary_phone\",\n          ]}\n          query_info={[\n            { title: \"Employee Type : \", value: query.get(\"employee_type\") },\n          ]}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\Tabulation.js",[],"J:\\Web\\school_argon\\src\\components\\print\\Querytags.js",[],"J:\\Web\\school_argon\\src\\components\\print\\students\\Phonebook.js",["1524","1525","1526","1527","1528"],"import React, { useContext, useState } from \"react\";\r\nimport { useQuery } from \"../Querytags\";\r\nimport List from \"../List\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\n\r\nexport default function Phonebook() {\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  let query = useQuery();\r\n  const [url, setUrl] = useState(\"\");\r\n  const [data, setData] = useState({ class: \"\", department: \"\", session: \"\" });\r\n  React.useEffect(() => {\r\n    let u = \"students/student_assignment?phonebook=true\";\r\n    if (query.get(\"class_id\") != null)\r\n      u += \"&class_id=\" + query.get(\"class_id\");\r\n    if (query.get(\"department_id\") != null)\r\n      u += \"&department_id=\" + query.get(\"department_id\");\r\n    if (query.get(\"session_id\") != null)\r\n      u += \"&session_id=\" + query.get(\"session_id\");\r\n\r\n    setUrl(u);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      class_list.length > 0 &&\r\n      department_list.length > 0 &&\r\n      session_list.length > 0\r\n    ) {\r\n      const cls_list = class_list.filter(\r\n        (el) => el.value == query.get(\"class_id\")\r\n      );\r\n      const dept_list = department_list.filter(\r\n        (el) => el.value == query.get(\"department_id\")\r\n      );\r\n      const year_list = session_list.filter(\r\n        (el) => el.value == query.get(\"session_id\")\r\n      );\r\n      const cls = cls_list.length > 0 ? cls_list[0].text : null;\r\n      const dept = dept_list.length > 0 ? dept_list[0].text : null;\r\n      const year = year_list.length > 0 ? year_list[0].text : null;\r\n      setData({ class: cls, department: dept, session: year });\r\n    }\r\n  }, [class_list, department_list, session_list]);\r\n  return (\r\n    <>\r\n      {url.length > 0 ? (\r\n        <List\r\n          indexed={false}\r\n          url={url}\r\n          title=\"Students Phonebook\"\r\n          head={[\r\n            \"Roll\",\r\n            \"Student Name\",\r\n            \"Mother\",\r\n            \"Father\",\r\n            \"Primary Phone\",\r\n            \"Secondary Phone\",\r\n          ]}\r\n          val={[\r\n            \"role\",\r\n            \"student_identifier\",\r\n            \"mother_name\",\r\n            \"father_name\",\r\n            \"student_name\",\r\n            \"primary_phone\",\r\n            \"secondary_phone\",\r\n          ]}\r\n          query_info={[\r\n            { title: \"Class : \", value: data.class },\r\n            { title: \"Department : \", value: data.department },\r\n            { title: \"Session : \", value: data.session },\r\n          ]}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\students\\StudentList.js",["1529","1530","1531","1532","1533"],"import { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nimport React, { useContext, useState } from \"react\";\r\n\r\nimport List from \"../List\";\r\nimport { useQuery } from \"../Querytags\";\r\n\r\nexport default function StudentList() {\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  let query = useQuery();\r\n  const [url, setUrl] = useState(\"\");\r\n  const [data, setData] = useState({ cls: \"\", department: \"\", session: \"\" });\r\n  React.useEffect(() => {\r\n    let u = \"students/student_assignment?all=true\";\r\n    if (query.get(\"class_id\") != null) {\r\n      u += \"&class_id=\" + query.get(\"class_id\");\r\n      if (query.get(\"department_id\") != null)\r\n        u += \"&department_id=\" + query.get(\"department_id\");\r\n      if (query.get(\"session_id\") != null)\r\n        u += \"&session_id=\" + query.get(\"session_id\");\r\n    }\r\n    setUrl(u);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (\r\n      class_list.length > 0 &&\r\n      department_list.length > 0 &&\r\n      session_list.length > 0\r\n    ) {\r\n      const cls_list = class_list.filter(\r\n        (el) => el.value == query.get(\"class_id\")\r\n      );\r\n      const dept_list = department_list.filter(\r\n        (el) => el.value == query.get(\"department_id\")\r\n      );\r\n      const year_list = session_list.filter(\r\n        (el) => el.value == query.get(\"session_id\")\r\n      );\r\n      const cls = cls_list.length > 0 ? cls_list[0].text : null;\r\n      const dept = dept_list.length > 0 ? dept_list[0].text : null;\r\n      const year = year_list.length > 0 ? year_list[0].text : null;\r\n      setData({ class: cls, department: dept, session: year });\r\n    }\r\n  }, [class_list, department_list, session_list]);\r\n  return (\r\n    <>\r\n      {url.length > 0 ? (\r\n        <List\r\n          indexed={false}\r\n          url={url}\r\n          title=\"Students List\"\r\n          head={[\r\n            \"Roll\",\r\n            \"Student Name\",\r\n            \"Mother Name\",\r\n            \"Father Name\",\r\n            \"Religion\",\r\n            \"Gender\",\r\n            \"Age\",\r\n          ]}\r\n          val={[\r\n            \"role\",\r\n            \"student_name\",\r\n            \"mother_name\",\r\n            \"father_name\",\r\n            \"religion\",\r\n            \"gender\",\r\n            \"age\",\r\n          ]}\r\n          query_info={[\r\n            { title: \"Class : \", value: data.class },\r\n            { title: \"Department : \", value: data.department },\r\n            { title: \"Session : \", value: data.session },\r\n          ]}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\controls\\MyEditor.js",["1534","1535"],"import React, { Component } from \"react\";\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n  ContentState,\n  convertFromHTML,\n  convertToHTML,\n} from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\n\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport \"./editor.css\";\nimport draftToHtml from \"draftjs-to-html\";\nclass MyEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML(draftToHtml(props.value))\n        )\n      ),\n    };\n  }\n  onEditorStateChange = (editorState) => {\n    this.setState({ editorState });\n    this.props.handleChange({\n      target: {\n        name: this.props.name,\n        value: convertToRaw(editorState.getCurrentContent()),\n      },\n    });\n  };\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div>\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"rich-editor demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n          placeholder=\"The message goes here...\"\n        />\n        <small className=\"text-danger\">\n          {this.props.error ? \"No Empty Space Allowed!\" : null}\n        </small>\n      </div>\n    );\n  }\n}\nexport { MyEditor };\n","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReceipt.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReport.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\students\\manual_attendance\\ManualAttendanceModel.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\manual_attendance\\ManualAttendanceModel.js",[],"J:\\Web\\school_argon\\src\\components\\print\\List.js",["1536"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Call } from \"services/API/Call\";\r\nimport PrintOptions from \"./PrintOptions\";\r\nimport SchoolInfo from \"./SchoolInfo\";\r\nimport ListTable from \"./ListTable\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport default function List(props) {\r\n\tconst { url, title, head, val, indexed = true, query_info = [] } = props;\r\n\tconst [list, setList] = useState([]);\r\n\tconst [logo_dir, setLogoDir] = useState({ left: \"0%\" });\r\n\tconst [logo_size, setLogoSize] = useState(100);\r\n\tconst [school_name_size, setSchoolNameSize] = useState(25);\r\n\tconst [other_size, setOtherSize] = useState(14);\r\n\tconst [school_name_color, setSchoolNameColor] = useState(\"#00000\");\r\n\tconst [other_color, setOtherColor] = useState(\"#000\");\r\n\tconst [school_name, setSchoolName] = useState(true);\r\n\tconst [other_info, setOtherInfo] = useState(true);\r\n\tconst [logo, setLogo] = useState(true);\r\n\tconst [line, setLine] = useState(true);\r\n\r\n\tconst [head_color, setHeadColor] = useState(\"#000\");\r\n\tconst [data_color, setDataColor] = useState(\"#000\");\r\n\tconst [border_color, setBorderColor] = useState(\"#000\");\r\n\tconst [head_size, setHeadSize] = useState(15);\r\n\tconst [data_size, setDataSize] = useState(14);\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetList(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, [url]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\r\n\t\t\t\t<div className=\"mb-1 mt-1\">Table Options</div>\r\n\t\t\t\t<small>Head Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Head Size\"\r\n\t\t\t\t\tvalue={head_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Data Size\"\r\n\t\t\t\t\tvalue={data_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Head Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={head_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Data Color\"\r\n\t\t\t\t\tvalue={data_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Border Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Border Color\"\r\n\t\t\t\t\tvalue={border_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setBorderColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<PrintOptions\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tsetLogoDir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tsetLogoSize,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tsetSchoolNameSize,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tsetOtherSize,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tsetSchoolNameColor,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tsetOtherColor,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tsetSchoolName,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tsetOtherInfo,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tsetLogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t\tsetLine,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<SchoolInfo\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className=\"p-5\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\tmarginBottom: \"1rem\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{query_info.length > 0\r\n\t\t\t\t\t\t? query_info.map((el, idx) =>\r\n\t\t\t\t\t\t\t\tel.value != undefined && el.value.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: head_size,\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0rem 1rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>{el.title}</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{el.value}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<ListTable\r\n\t\t\t\t\thead={head}\r\n\t\t\t\t\tdata={list}\r\n\t\t\t\t\tval={val}\r\n\t\t\t\t\tcolors={{ data_color, head_color, border_color }}\r\n\t\t\t\t\tsize={{ data_size, head_size }}\r\n\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\employees\\attendance\\EmployeeAttendanceTable.js",["1537","1538","1539","1540","1541","1542","1543","1544","1545"],"import React, { useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"./style.css\";\nimport uuid from \"react-uuid\";\nimport Api from \"services/API/Api\";\nexport default function EmployeeAttendanceTable(props) {\n  const { list, loading, top, indexed = true, year, month } = props;\n  const [days, setDays] = useState([]);\n  const [weekdays, setWeekDays] = useState(0);\n  const [week_day_active, setWeekdayActive] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    month = month < 10 ? \"0\" + month : month;\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  function daysInMonth(iMonth, iYear) {\n    return 32 - new Date(iYear, iMonth, 32).getDate();\n  }\n  function isWeekday(year, month, day) {\n    var day = new Date(year, month, day).getDay();\n\n    return week_day_active.indexOf(day) == -1;\n  }\n\n  function getWeekdaysInMonth(month, year) {\n    var days = daysInMonth(month, year);\n    var weekdays = 0;\n    for (var i = 0; i < days; i++) {\n      if (isWeekday(year, month, i + 1)) weekdays++;\n    }\n    return days - weekdays;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n    Api({ method: \"get\", url: \"settings/weekdays?attendance=true\" })\n      .then((res) => {\n        setWeekdayActive(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [list]);\n  React.useEffect(() => {\n    setWeekDays(getWeekdaysInMonth(month, year));\n  }, [week_day_active]);\n  return (\n    <Table\n      className=\"align-items-center table-light table-flush\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\" rowSpan=\"2\" style={{ width: \"75px\" }}>\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Employees\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th key={uuid()} rowSpan=\"2\">\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n\n              <small>\n                Present:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) =>\n                    el.includes(\"Present\")\n                  ).length\n                }\n              </small>\n              <br />\n              <small>\n                Late:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) => el.includes(\"Late\"))\n                    .length\n                }\n              </small>\n              <br />\n              <small>\n                Absent:{\" \"}\n                {days.length - Object.keys(list[item]).length - weekdays}\n              </small>\n              <br />\n              <small>Weekdays: {weekdays}</small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr>\n              <td style={{ width: \"75px\" }}>{item}</td>\n              {top.map((element, index) => (\n                <td style={{ whiteSpace: \"pre\" }}>\n                  <small\n                    className=\"text-muted\"\n                    style={{ fontSize: \"8px\", lineHeight: \"0.1\" }}\n                  >\n                    {item}\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Present\") ? (\n                    <>\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Present\", \"\")}\n                      </small>{\" \"}\n                    </>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Late\") ? (\n                    <>\n                      Late{\" \"}\n                      <i\n                        className=\"text-warning fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Late\", \"\")}\n                      </small>{\" \"}\n                    </>\n                  ) : (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\crud\\Add.js",["1546","1547","1548","1549","1550","1551","1552"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"../controls/InputField\";\nimport { ValidateInput } from \"./ValidateInput\";\nexport default function Add(props) {\n  const {\n    url,\n    open,\n    setOpenAdd,\n    add_data,\n    initial_values,\n    update,\n    setUpdate,\n    file = false,\n    modal_size,\n    title,\n  } = props;\n\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(add_data).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const alert_message_time = 4000;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      let request = {};\n      if (file) {\n        let data = new FormData();\n        Object.keys(values).map((el) => {\n          if (\n            typeof values[el] == \"object\" &&\n            values[el].length > 0 &&\n            values[el][0].type != undefined\n          ) {\n            Array.from(values[el]).map((e) => data.append(el, e));\n          } else {\n            data.append(el, values[el]);\n          }\n        });\n\n        request = {\n          method: \"post\",\n          url: url,\n          data: data,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        };\n      } else {\n        const data = { ...values };\n        request = {\n          method: \"post\",\n          url: url,\n          data: data,\n        };\n      }\n      Call(request)\n        .then((res) => {\n          setUpdate(!update);\n          setSuccessMessage(res.message);\n          setCalling(false);\n          resetForm();\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size={modal_size}\n        isOpen={open}\n        toggle={() => setOpenAdd(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            {title != undefined ? title : \"Add\"}\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setOpenAdd(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{\n                    fontSize: \"12px\",\n                    textAlign: \"center\",\n                    whiteSpace: \"pre-wrap\",\n                  }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{\n                    fontSize: \"12px\",\n                    textAlign: \"center\",\n                    whiteSpace: \"pre-wrap\",\n                  }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                {add_data.map((element, index) => {\n                  return element.customInput == undefined ? (\n                    <InputField\n                      key={index}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      multiple={\n                        element.multiple != null &&\n                        element.multiple != undefined\n                          ? true\n                          : false\n                      }\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  ) : (\n                    <element.customInput\n                      key={index}\n                      title={element.title}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      children={element.children}\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  );\n                })}\n\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\ExtendedInput.js",[],"J:\\Web\\school_argon\\src\\components\\crud\\Index.js",["1553","1554"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { Card, CardHeader, Container, Row } from \"reactstrap\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport CardBody from \"reactstrap/lib/CardBody\";\r\nimport Api from \"services/API/Api\";\r\nimport { Call } from \"services/API/Call\";\r\nimport Add from \"./Add\";\r\nimport Delete from \"./Delete\";\r\nimport Edit from \"./Edit\";\r\nimport List from \"./List\";\r\nimport Query from \"./Query\";\r\n\r\nfunction Index(props) {\r\n  const {\r\n    title,\r\n    add_data = [],\r\n    add_initial_values = [],\r\n    CustomListComponent = undefined,\r\n    custom_list = undefined,\r\n    custom_update = undefined,\r\n    setCustomUpdate = undefined,\r\n    query_list = undefined,\r\n    custom_loading = undefined,\r\n    modal_size = \"sm\",\r\n    list_url,\r\n    list_head,\r\n    list_active = true,\r\n    add = false,\r\n    edit = false,\r\n    remove = false,\r\n    edit_data = [],\r\n    query_title,\r\n    query_data,\r\n    indexed = true,\r\n    file = false,\r\n    print_url = \"\",\r\n    add_button_title = \"Add New Record\",\r\n    def_url_param = \"\",\r\n    ...other\r\n  } = props;\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [deleteInfo, setDeleteInfo] = useState(\"\");\r\n  const [editInfo, setEditInfo] = useState({});\r\n  const [update, setUpdate] = useState(true);\r\n  const [loading, setloading] = useState(false);\r\n  const [query, setquery] = useState(\"\");\r\n  const [query_tags, setQueryTags] = useState([]);\r\n  const [querying, setQuerying] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (custom_list === undefined && list_active) {\r\n      if (typeof query_list == \"object\") {\r\n        if (query.length > 0) {\r\n          setloading(true);\r\n          setQuerying(true);\r\n          Api({\r\n            method: \"get\",\r\n            url: list_url + query + def_url_param,\r\n          })\r\n            .then((res) => {\r\n              setList(res.data);\r\n              setQuerying(false);\r\n              setloading(false);\r\n            })\r\n            .catch((error) => {\r\n              setQuerying(false);\r\n              setloading(false);\r\n            });\r\n        }\r\n      } else {\r\n        setloading(true);\r\n        Api({\r\n          method: \"get\",\r\n          url: list_url + \"?\" + def_url_param,\r\n        })\r\n          .then((res) => {\r\n            setList(res.data);\r\n            setloading(false);\r\n          })\r\n          .catch((error) => {\r\n            setQuerying(false);\r\n            setloading(false);\r\n          });\r\n      }\r\n    } else {\r\n      if (setCustomUpdate !== undefined) setCustomUpdate(!custom_update);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [update, list_url]);\r\n  React.useEffect(() => {\r\n    if (Object.keys(editInfo).length > 0) setOpenEdit(true);\r\n    else setOpenEdit(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [editInfo]);\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        {query_list != null && query_list.length > 0 ? (\r\n          <Row className=\"mt-5 mb-5\">\r\n            <div className=\"col\">\r\n              <Card\r\n                className=\"bg-default shadow\"\r\n                style={{ maxWidth: \"450px\", margin: \"auto\" }}\r\n              >\r\n                <CardHeader className=\"bg-transparent border-0\">\r\n                  <h3 className=\"text-white mb-0\">{query_title}</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Query\r\n                    query_list={query_list}\r\n                    initial_values={query_data}\r\n                    query={query}\r\n                    setquery={setquery}\r\n                    update={update}\r\n                    setUpdate={setUpdate}\r\n                    setQueryTags={setQueryTags}\r\n                    querying={querying}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        ) : null}\r\n\r\n        <Row className=\"mt-5 mb-5\">\r\n          <div className=\"col\">\r\n            <Card className=\"bg-default shadow\">\r\n              <CardHeader className=\"bg-transparent border-0\">\r\n                <h3 className=\"text-white mb-0\">{title}</h3>\r\n                {print_url.length > 0 ? (\r\n                  query.length > 0 ? (\r\n                    <Button\r\n                      color=\"white\"\r\n                      className=\"m-2\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        window.open(\r\n                          \"/print/\" + print_url + query,\r\n                          \"Print Receipt\",\r\n                          \"height=600,width=800\"\r\n                        );\r\n                        return false;\r\n                      }}\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  ) : null\r\n                ) : null}\r\n\r\n                {add ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                    onClick={() => setOpenAdd(!openAdd)}\r\n                  >\r\n                    {add_button_title}\r\n                    <i\r\n                      className=\"ni ni-fat-add\"\r\n                      style={{ fontSize: \"1.5rem\" }}\r\n                    />\r\n                  </Button>\r\n                ) : null}\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                >\r\n                  {query_tags.length > 0\r\n                    ? query_tags.map((element, index) => (\r\n                        <Button\r\n                          key={index}\r\n                          color=\"success\"\r\n                          size=\"sm\"\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            maxWidth: \"250px\",\r\n                            marginRight: \"1rem\",\r\n                          }}\r\n                        >\r\n                          {element.title} : {element.value}\r\n                        </Button>\r\n                      ))\r\n                    : null}\r\n                </div>\r\n                <Button\r\n                  color=\"white\"\r\n                  size=\"sm\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    maxWidth: \"250px\",\r\n                    marginRight: \"1rem\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                >\r\n                  Total Records : {list.length}\r\n                </Button>\r\n              </CardHeader>\r\n              {list_active ? (\r\n                CustomListComponent == undefined ? (\r\n                  <List\r\n                    setOpenDelete={setOpenDelete}\r\n                    setOpenEdit={setOpenEdit}\r\n                    setDeleteInfo={setDeleteInfo}\r\n                    setEditInfo={setEditInfo}\r\n                    list={custom_list === undefined ? list : custom_list}\r\n                    list_head={list_head}\r\n                    edit={edit}\r\n                    remove={remove}\r\n                    loading={\r\n                      custom_loading !== undefined ? custom_loading : loading\r\n                    }\r\n                    indexed={indexed}\r\n                    {...other}\r\n                  />\r\n                ) : (\r\n                  <CustomListComponent\r\n                    list={list}\r\n                    list_head={list_head}\r\n                    query_tags={query_tags}\r\n                    query={query}\r\n                    loading={loading}\r\n                    url={list_url}\r\n                    setOpenDelete={setOpenDelete}\r\n                    setOpenEdit={setOpenEdit}\r\n                    setDeleteInfo={setDeleteInfo}\r\n                    setEditInfo={setEditInfo}\r\n                    update={update}\r\n                    setupdate={setUpdate}\r\n                    edit={edit}\r\n                    remove={remove}\r\n                    indexed={indexed}\r\n                    {...other}\r\n                  />\r\n                )\r\n              ) : null}\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n        {edit && Object.keys(editInfo).length > 0 ? (\r\n          <Edit\r\n            open={openEdit}\r\n            setOpenEdit={setOpenEdit}\r\n            edit_values={editInfo}\r\n            update={update}\r\n            setUpdate={setUpdate}\r\n            edit_data={edit_data}\r\n            url={list_url}\r\n            file={file}\r\n            setEditInfo={setEditInfo}\r\n            modal_size={modal_size}\r\n          />\r\n        ) : null}\r\n        {add ? (\r\n          <Add\r\n            url={list_url}\r\n            open={openAdd}\r\n            setOpenAdd={setOpenAdd}\r\n            add_data={add_data}\r\n            initial_values={add_initial_values}\r\n            update={update}\r\n            setUpdate={setUpdate}\r\n            modal_size={modal_size}\r\n            file={file}\r\n          />\r\n        ) : null}\r\n\r\n        {remove ? (\r\n          <Delete\r\n            open={openDelete}\r\n            setOpenDelete={setOpenDelete}\r\n            id={deleteInfo}\r\n            update={update}\r\n            setUpdate={setUpdate}\r\n            url={list_url}\r\n          />\r\n        ) : null}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\employee_assign\\EmployeeAssignModal.js",["1555","1556","1557","1558","1559","1560","1561"],"import { useForm } from \"components/useForm\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"reactstrap/lib/Alert\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Card from \"reactstrap/lib/Card\";\r\nimport CardBody from \"reactstrap/lib/CardBody\";\r\nimport CardHeader from \"reactstrap/lib/CardHeader\";\r\nimport Form from \"reactstrap/lib/Form\";\r\nimport Modal from \"reactstrap/lib/Modal\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport { Call } from \"services/API/Call\";\r\nimport InputField from \"components/controls/InputField\";\r\nimport { ValidateInput } from \"components/crud/ValidateInput\";\r\nexport default function EmployeeAssignModal(props) {\r\n  const {\r\n    url,\r\n    open,\r\n    setOpen,\r\n    add_data,\r\n    initial_values,\r\n    update,\r\n    setUpdate,\r\n    file = false,\r\n    modal_size,\r\n    title,\r\n  } = props;\r\n\r\n  const [failMessage, setFailMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [calling, setCalling] = useState(false);\r\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\r\n    initial_values\r\n  );\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    // eslint-disable-next-line array-callback-return\r\n    Object.values(add_data).map((element, index) => {\r\n      if (!element.required) {\r\n        temp[element.name] = false;\r\n      } else if (element.name in fieldValues) {\r\n        temp[element.name] = ValidateInput(element, fieldValues);\r\n      }\r\n    });\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      // eslint-disable-next-line eqeqeq\r\n      return Object.values(temp).every((x) => x == false);\r\n  };\r\n  const alert_message_time = 4000;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setCalling(true);\r\n    if (validate()) {\r\n      let request = {};\r\n      const data = { ...values };\r\n      request = {\r\n        method: \"post\",\r\n        url: url,\r\n        data: data,\r\n      };\r\n\r\n      Call(request)\r\n        .then((res) => {\r\n          setUpdate(!update);\r\n          setSuccessMessage(res.message);\r\n          setCalling(false);\r\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\r\n        })\r\n        .catch((err) => {\r\n          setFailMessage(err);\r\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\r\n          setCalling(false);\r\n        });\r\n    } else setCalling(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        size={modal_size}\r\n        isOpen={open}\r\n        toggle={() => setOpen(false)}\r\n        modalTransition={{ timeout: 50 }}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            {title != undefined ? title : \"Add\"}\r\n          </h5>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body p-0\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-4\">\r\n              {failMessage !== undefined && failMessage.length > 0 ? (\r\n                <Alert\r\n                  color=\"danger\"\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    textAlign: \"center\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                  }}\r\n                >\r\n                  {failMessage}\r\n                </Alert>\r\n              ) : null}\r\n              {successMessage !== undefined && successMessage.length > 0 ? (\r\n                <Alert\r\n                  color=\"success\"\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    textAlign: \"center\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                  }}\r\n                >\r\n                  {successMessage}\r\n                </Alert>\r\n              ) : null}\r\n              <Form role=\"form\" onSubmit={handleSubmit}>\r\n                {add_data.map((element, index) => {\r\n                  return element.customInput == undefined ? (\r\n                    <InputField\r\n                      key={index}\r\n                      type={element.type}\r\n                      placeholder={element.placeholder}\r\n                      name={element.name}\r\n                      handleChange={handleInputChange}\r\n                      value={values[element.name]}\r\n                      error={errors[element.name]}\r\n                      disabled={\r\n                        element.disabled != undefined\r\n                          ? element.disabled\r\n                          : calling\r\n                      }\r\n                      multiple={\r\n                        element.multiple != null &&\r\n                        element.multiple != undefined\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      options={element.options}\r\n                      setState={element.setState}\r\n                    />\r\n                  ) : (\r\n                    <element.customInput\r\n                      key={index}\r\n                      title={element.title}\r\n                      type={element.type}\r\n                      placeholder={element.placeholder}\r\n                      name={element.name}\r\n                      handleChange={handleInputChange}\r\n                      value={values[element.name]}\r\n                      error={errors[element.name]}\r\n                      disabled={\r\n                        element.disabled != undefined\r\n                          ? element.disabled\r\n                          : calling\r\n                      }\r\n                      children={element.children}\r\n                      options={element.options}\r\n                      setState={element.setState}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\r\n                  <Button\r\n                    className=\"my-4\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={calling}\r\n                  >\r\n                    {calling ? (\r\n                      <Spinner animation=\"border\" variant=\"dark\" />\r\n                    ) : (\r\n                      \"Submit\"\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\attendance\\student_assign\\StudentAssignModal.js",["1562","1563","1564","1565","1566","1567","1568"],"import { useForm } from \"components/useForm\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"reactstrap/lib/Alert\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Card from \"reactstrap/lib/Card\";\r\nimport CardBody from \"reactstrap/lib/CardBody\";\r\nimport CardHeader from \"reactstrap/lib/CardHeader\";\r\nimport Form from \"reactstrap/lib/Form\";\r\nimport Modal from \"reactstrap/lib/Modal\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport { Call } from \"services/API/Call\";\r\nimport InputField from \"components/controls/InputField\";\r\nimport { ValidateInput } from \"components/crud/ValidateInput\";\r\nexport default function StudentAssignModal(props) {\r\n  const {\r\n    url,\r\n    open,\r\n    setOpen,\r\n    add_data,\r\n    initial_values,\r\n    update,\r\n    setUpdate,\r\n    file = false,\r\n    modal_size,\r\n    title,\r\n  } = props;\r\n\r\n  const [failMessage, setFailMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [calling, setCalling] = useState(false);\r\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\r\n    initial_values\r\n  );\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    // eslint-disable-next-line array-callback-return\r\n    Object.values(add_data).map((element, index) => {\r\n      if (!element.required) {\r\n        temp[element.name] = false;\r\n      } else if (element.name in fieldValues) {\r\n        temp[element.name] = ValidateInput(element, fieldValues);\r\n      }\r\n    });\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === values)\r\n      // eslint-disable-next-line eqeqeq\r\n      return Object.values(temp).every((x) => x == false);\r\n  };\r\n  const alert_message_time = 4000;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setCalling(true);\r\n    if (validate()) {\r\n      let request = {};\r\n      const data = { ...values };\r\n      request = {\r\n        method: \"post\",\r\n        url: url,\r\n        data: data,\r\n      };\r\n\r\n      Call(request)\r\n        .then((res) => {\r\n          setUpdate(!update);\r\n          setSuccessMessage(res.message);\r\n          setCalling(false);\r\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\r\n        })\r\n        .catch((err) => {\r\n          setFailMessage(err);\r\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\r\n          setCalling(false);\r\n        });\r\n    } else setCalling(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        size={modal_size}\r\n        isOpen={open}\r\n        toggle={() => setOpen(false)}\r\n        modalTransition={{ timeout: 50 }}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            {title != undefined ? title : \"Add\"}\r\n          </h5>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body p-0\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-4\">\r\n              {failMessage !== undefined && failMessage.length > 0 ? (\r\n                <Alert\r\n                  color=\"danger\"\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    textAlign: \"center\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                  }}\r\n                >\r\n                  {failMessage}\r\n                </Alert>\r\n              ) : null}\r\n              {successMessage !== undefined && successMessage.length > 0 ? (\r\n                <Alert\r\n                  color=\"success\"\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                    textAlign: \"center\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                  }}\r\n                >\r\n                  {successMessage}\r\n                </Alert>\r\n              ) : null}\r\n              <Form role=\"form\" onSubmit={handleSubmit}>\r\n                {add_data.map((element, index) => {\r\n                  return element.customInput == undefined ? (\r\n                    <InputField\r\n                      key={index}\r\n                      type={element.type}\r\n                      placeholder={element.placeholder}\r\n                      name={element.name}\r\n                      handleChange={handleInputChange}\r\n                      value={values[element.name]}\r\n                      error={errors[element.name]}\r\n                      disabled={\r\n                        element.disabled != undefined\r\n                          ? element.disabled\r\n                          : calling\r\n                      }\r\n                      multiple={\r\n                        element.multiple != null &&\r\n                        element.multiple != undefined\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      options={element.options}\r\n                      setState={element.setState}\r\n                    />\r\n                  ) : (\r\n                    <element.customInput\r\n                      key={index}\r\n                      title={element.title}\r\n                      type={element.type}\r\n                      placeholder={element.placeholder}\r\n                      name={element.name}\r\n                      handleChange={handleInputChange}\r\n                      value={values[element.name]}\r\n                      error={errors[element.name]}\r\n                      disabled={\r\n                        element.disabled != undefined\r\n                          ? element.disabled\r\n                          : calling\r\n                      }\r\n                      children={element.children}\r\n                      options={element.options}\r\n                      setState={element.setState}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\r\n                  <Button\r\n                    className=\"my-4\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={calling}\r\n                  >\r\n                    {calling ? (\r\n                      <Spinner animation=\"border\" variant=\"dark\" />\r\n                    ) : (\r\n                      \"Submit\"\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\docs\\idcard\\ICard.js",["1569","1570"],"import React from \"react\";\nimport { Table } from \"reactstrap\";\n\nexport default function ICard(props) {\n  const { data, colors, size, school_info } = props;\n  const {\n    logo_size,\n    head_size,\n    data_size,\n    image_size,\n    card_width,\n    card_height,\n  } = size;\n  const { head_color, data_color, border_color } = colors;\n  const text = {\n    whiteSpace: \"pre-wrap\",\n    textAlign: \"left\",\n    color: data_color,\n    fontSize: data_size + \"px\",\n  };\n  const td_style = {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    maxWidth: \"70%\",\n    margin: \"auto\",\n    fontSize: head_size + \"px\",\n    marginTop: \"0.3rem\",\n    color: head_color,\n  };\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: card_width + \"px\",\n        height: card_height + \"px\",\n        margin: \"1rem\",\n        padding: \"0.5rem\",\n        border: \"1px solid grey\",\n        background: \"white\",\n      }}\n    >\n      <div>\n        <div\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <img\n            src={\n              process.env.REACT_APP_IMAGE_PATH +\n              \"/\" +\n              school_info.institute_logo\n            }\n            alt=\"Logo\"\n            style={{ width: logo_size + \"px\", objectFit: \"cover\" }}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>{school_info.institute_name}</div>\n      </div>\n      <div style={{ textAlign: \"center\" }}>\n        <img\n          src={process.env.REACT_APP_IMAGE_PATH + \"/\" + data.student_image}\n          alt=\"Student's\"\n          style={{\n            width: image_size + \"px\",\n            height: image_size + \"px\",\n            objectFit: \"cover\",\n          }}\n        />\n      </div>\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: \"14px\",\n          marginTop: \"0.3rem\",\n          color: data_color,\n        }}\n      >\n        <b>{data.student_name}</b>\n      </div>\n      <div style={td_style}>\n        <div>ID:</div>\n        <div style={text}>{data.student_identifier}</div>\n      </div>\n      <div style={td_style}>\n        <div>Class:</div>\n        <div style={text}>{data.class}</div>\n      </div>\n      <div style={td_style}>\n        <div>Department:</div>\n        <div style={text}>{data.department}</div>\n      </div>\n      <div style={td_style}>\n        <div>Session:</div>\n        <div style={text}>{data.session}</div>\n      </div>\n      <div style={td_style}>\n        <div>Mother Name:</div>\n        <div style={text}>{data.mother_name}</div>\n      </div>\n      <div style={td_style}>\n        <div>Father Name:</div>\n        <div style={text}>{data.father_name}</div>\n      </div>\n      <div style={td_style}>\n        <div>Contact:</div>\n        <div style={text}>{data.primary_phone}</div>\n      </div>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceListMonth.js",["1571","1572","1573"],"import React, { useState } from \"react\";\n\nimport EmployeeAttendanceTable from \"./StudentsAttendanceTable\";\n\nconst months = {\n  January: 1,\n  February: 2,\n  March: 3,\n  April: 4,\n  May: 5,\n  June: 6,\n  July: 7,\n  August: 8,\n  September: 9,\n  October: 10,\n  November: 11,\n  December: 12,\n};\nexport default function AttendanceList(props) {\n  const { query_tags, list, loading, indexed = true } = props;\n  const [head, sethead] = useState([]);\n  const [slice_length, setSliceLength] = useState(5);\n  const [year, setyear] = useState(\"\");\n  const [month, setmonth] = useState(\"\");\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      setyear(query_tags.filter((el) => el.title == \"Year\")[0].value);\n      setmonth(months[query_tags.filter((el) => el.title == \"Month\")[0].value]);\n    }\n    sethead(Object.keys(list));\n  }, [list, query_tags]);\n  return (\n    <>\n      {[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\n        <EmployeeAttendanceTable\n          key={i}\n          list={list}\n          top={head.slice(\n            (i + 1) * slice_length - slice_length,\n            (i + 1) * slice_length\n          )}\n          loading={loading}\n          year={year}\n          month={month}\n          indexed={indexed}\n        />\n      ))}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\payments\\PaymentReceiptList.js",["1574","1575","1576"],"import React from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function PaymentReceiptList(props) {\n  const { list, list_head, loading, indexed = true } = props;\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n          <th>Receipt</th>\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? <th scope=\"row\">{index + 1}</th> : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {element[item.identifier]}\n                </th>\n              ))}\n\n              {console.log(element.id)}\n              {index == 0 || list[index - 1].id != element.id ? (\n                <td rowSpan={list.filter((val) => val.id == element.id).length}>\n                  <Button\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      window.open(\n                        \"/print/receipt/\" + element.id,\n                        \"Print Receipt\",\n                        \"height=600,width=800\"\n                      );\n                      return false;\n                    }}\n                  >\n                    Receipt No: {element.id} <i className=\"fas fa-directions\" />\n                  </Button>\n                </td>\n              ) : null}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\attendance\\AttendanceListDay.js",["1577","1578"],"import React, { useState } from \"react\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function AttendanceList(props) {\n  const { query_tags, list, list_head, loading, indexed = true } = props;\n  const date =\n    query_tags.length > 0\n      ? query_tags.filter((element) => element.title == \"Date\")[0][\"value\"]\n      : \"\";\n  const [updated_list, setUpdatedList] = useState([]);\n  React.useEffect(() => {\n    if (list.length > 0) {\n      var merged = [];\n\n      list.forEach(function (item) {\n        var idx;\n        var found = merged.some(function (el, i) {\n          idx = el.student_id === item.student_id ? i : null;\n          return el.student_id === item.student_id;\n        });\n        if (!found) {\n          merged.push(item);\n        } else if (idx !== null) {\n          merged[idx][\"access_time\"] += \"\\n\" + item.access_time;\n        }\n      });\n      setUpdatedList(merged);\n    }\n  }, [list]);\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          updated_list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.identifier != \"date\" ? element[item.identifier] : date}\n                </th>\n              ))}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\PrintOptions.js",["1579","1580","1581"],"import React, { useState } from \"react\";\n\nimport { Input } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport \"./style.css\";\n\nexport default function PrintOptions(props) {\n  const {\n    logo_dir,\n    setLogoDir,\n    logo_size,\n    setLogoSize,\n    school_name_size,\n    setSchoolNameSize,\n    other_size,\n    setOtherSize,\n    school_name_color,\n    setSchoolNameColor,\n    other_color,\n    setOtherColor,\n    school_name,\n    setSchoolName,\n    other_info,\n    setOtherInfo,\n    logo,\n    setLogo,\n    line,\n    setLine,\n  } = props.val;\n  return (\n    <div>\n      <div className=\"bg-dark noprint printoptions\" style={{ right: \"0%\" }}>\n        <div className=\"mb-1 mt-1\">Print Dialog</div>\n        <Input\n          type=\"number\"\n          placeholder=\"Logo Size\"\n          value={logo_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setLogoSize(e.target.value)}\n        />\n        <small>Logo Direction</small>\n        <Input\n          type=\"select\"\n          value={logo_dir.left == undefined ? \"right\" : \"left\"}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => {\n            setLogoDir(\n              e.target.value == \"left\" ? { left: \"0%\" } : { right: \"0%\" }\n            );\n          }}\n        >\n          <option value=\"left\">Left</option>\n          <option value=\"right\">Right</option>\n        </Input>\n        <small>School Name Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"School Name Size\"\n          value={school_name_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setSchoolNameSize(e.target.value)}\n        />\n        <small>Address,Contact Size</small>\n        <Input\n          type=\"number\"\n          placeholder=\"Address,Number Size\"\n          value={other_size}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setOtherSize(e.target.value)}\n        />\n        <small>School Name Color</small>\n        <Input\n          type=\"color\"\n          placeholder=\"School Name Color\"\n          value={school_name_color}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setSchoolNameColor(e.target.value)}\n        />\n        <small>Address,Contact Color</small>\n        <Input\n          type=\"color\"\n          placeholder=\"Address,Number Color\"\n          value={other_color}\n          bsSize=\"sm\"\n          className=\"mb-1\"\n          onChange={(e) => setOtherColor(e.target.value)}\n        />\n        <small>School Name</small>\n        <input\n          type=\"checkbox\"\n          checked={school_name}\n          className=\"mb-1\"\n          onChange={(e) => setSchoolName(!school_name)}\n        />\n        <br />\n        <small>Other Info</small>\n        <input\n          type=\"checkbox\"\n          checked={other_info}\n          className=\"mb-1\"\n          onChange={(e) => setOtherInfo(!other_info)}\n        />\n        <br />\n        <small>Logo</small>\n        <input\n          type=\"checkbox\"\n          checked={logo}\n          className=\"mb-1\"\n          onChange={(e) => setLogo(!logo)}\n        />\n        <br />\n        <small>Line</small>\n        <input\n          type=\"checkbox\"\n          checked={line}\n          className=\"mb-1\"\n          onChange={(e) => setLine(!line)}\n        />\n        <br />\n        <Button size=\"sm\" type=\"button\" onClick={() => window.print()}>\n          Print\n        </Button>\n      </div>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\payments\\due_payment\\DuePaymentList.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceListMonth.js",["1582","1583","1584"],"J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\AttendanceListDay.js",["1585","1586","1587"],"J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendanceList.js",["1588","1589","1590","1591","1592","1593"],"J:\\Web\\school_argon\\src\\components\\teachers\\exams\\ExamCrud.js",[],"J:\\Web\\school_argon\\src\\components\\print\\result\\ResultCardTable.js",["1594","1595","1596","1597","1598","1599","1600","1601","1602","1603"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport TableRow from \"./ExamRow\";\nimport ExamRow from \"./ExamRow\";\nimport TotalRow from \"./TotalRow\";\n\nexport default function TabulationList(props) {\n\tconst {\n\t\tlist = [],\n\t\tloading = false,\n\t\tgpa_list,\n\t\tgrade_list,\n\t\tlogo_size,\n\t\tall_mark,\n\t} = props;\n\tconst [exams, setExams] = useState([]);\n\tconst [subjects, setSubjects] = useState([]);\n\tconst [student_marks, setStudentMarks] = useState([]);\n\tconst { data_color, head_color, border_color } = props.colors;\n\tconst { data_size, head_size } = props.size;\n\tconst td_style = {\n\t\twhiteSpace: \"pre-wrap\",\n\t\tfontSize: data_size + \"px\",\n\t\tcolor: head_color,\n\t\tborder: `1px solid ${border_color}`,\n\t\tpadding: \"0.4rem\",\n\t};\n\tconst th_style = {\n\t\twhiteSpace: \"pre-wrap\",\n\t\tfontSize: data_size + \"px\",\n\t\tcolor: data_color,\n\t\tborder: `1px solid ${border_color}`,\n\t\tpadding: \"0.4rem\",\n\t};\n\tReact.useEffect(() => {\n\t\tif (list.result_name != undefined) {\n\t\t\tsetExams(list.exams);\n\t\t\tsetStudentMarks(list.student_marks);\n\t\t\tlet subs = [];\n\t\t\tlist.exams.map((e) =>\n\t\t\t\te.subjects.map((el) => {\n\t\t\t\t\tlet sub = subs.filter((element) => element.id == el.id);\n\t\t\t\t\tif (sub.length == 0)\n\t\t\t\t\t\tsubs.push({\n\t\t\t\t\t\t\t...el,\n\t\t\t\t\t\t\tfull_mark:\n\t\t\t\t\t\t\t\tel.marks_structure != null\n\t\t\t\t\t\t\t\t\t? el.marks_structure.total_exam_mark\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\tpercentaged_full_mark:\n\t\t\t\t\t\t\t\tel.marks_structure != null\n\t\t\t\t\t\t\t\t\t? (el.marks_structure.total_exam_mark * e.exam_percentage) /\n\t\t\t\t\t\t\t\t\t  100\n\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t});\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet s = subs.filter((element) => element.id != el.id);\n\t\t\t\t\t\tsubs = [\n\t\t\t\t\t\t\t...s,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...el,\n\t\t\t\t\t\t\t\tfull_mark: el.marks_structure != null ? sub[0].full_mark : 0,\n\t\t\t\t\t\t\t\tpercentaged_full_mark:\n\t\t\t\t\t\t\t\t\tel.marks_structure != null\n\t\t\t\t\t\t\t\t\t\t? sub[0].percentaged_full_mark +\n\t\t\t\t\t\t\t\t\t\t  (el.marks_structure.total_exam_mark * e.exam_percentage) /\n\t\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t\tsetSubjects(subs);\n\t\t}\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\"d-flex w-100\"\n\t\t\t\tstyle={{\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\tminHeight: \"175px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Table\n\t\t\t\t\tclassName=\"align-items-center\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmaxWidth: \"300px\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"0%\",\n\t\t\t\t\t\tleft: \"0%\",\n\t\t\t\t\t}}\n\t\t\t\t\tborder={1}\n\t\t\t\t>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={th_style}>ID</th>\n\t\t\t\t\t\t\t<td style={td_style}>{list.student_identifier}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={th_style}>Name</th>\n\t\t\t\t\t\t\t<td style={td_style}>{list.student_name}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={th_style}>Class</th>\n\t\t\t\t\t\t\t<td style={td_style}>{list.class}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={th_style}>Department</th>\n\t\t\t\t\t\t\t<td style={td_style}>{list.department}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={th_style}>Roll</th>\n\t\t\t\t\t\t\t<td style={td_style}>{list.role}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t\t<div style={{ maxWidth: \"300px\" }}>\n\t\t\t\t\t<b\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{list.result_name}\n\t\t\t\t\t</b>\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tcolor: data_color,\n\t\t\t\t\t\t\tfontSize: data_size + \"px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tResult Card\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmaxWidth: \"300px\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"0%\",\n\t\t\t\t\t\tright: \"0%\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={process.env.REACT_APP_IMAGE_PATH + \"/\" + list.student_image}\n\t\t\t\t\t\talt=\"Student\"\n\t\t\t\t\t\tstyle={{ width: logo_size + \"px\", objectFit: \"cover\" }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Table className=\"align-items-center\" responsive border={1}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\trowSpan=\"2\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubjects\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\trowSpan=\"2\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFull Marks\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tcolSpan={exams.length}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tExams\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\trowSpan=\"2\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTotal Marks\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\trowSpan=\"2\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGPA\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\trowSpan=\"2\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGrade\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{exams.length > 0\n\t\t\t\t\t\t\t? exams.map((el, idx) => (\n\t\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: head_size + \"px\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: head_color,\n\t\t\t\t\t\t\t\t\t\t\tborder: `1px solid ${border_color}`,\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\t\t\t\twidth: \"120px\",\n\t\t\t\t\t\t\t\t\t\t\twhiteSpace: \"normal\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{el.exam_name} ({el.exam_percentage}%)\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan={6} className=\"text-center\">\n\t\t\t\t\t\t\t\t<Spinner color=\"primary\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t) : subjects.length > 0 &&\n\t\t\t\t\t  gpa_list.length > 0 &&\n\t\t\t\t\t  grade_list.length > 0 ? (\n\t\t\t\t\t\tsubjects.map((el, idx) => (\n\t\t\t\t\t\t\t<ExamRow\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tstyles={{ data_size, data_color, border_color }}\n\t\t\t\t\t\t\t\tsubject={el}\n\t\t\t\t\t\t\t\texams={exams}\n\t\t\t\t\t\t\t\tstudent_marks={student_marks}\n\t\t\t\t\t\t\t\tgpa_list={gpa_list}\n\t\t\t\t\t\t\t\tgrade_list={grade_list}\n\t\t\t\t\t\t\t\tsubjects={subjects.length}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan={6} className=\"text-center\">\n\t\t\t\t\t\t\t\tFound Nothing\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)}\n\t\t\t\t\t{subjects.length > 0 && grade_list.length > 0 ? (\n\t\t\t\t\t\t<TotalRow\n\t\t\t\t\t\t\tgrade_list={grade_list}\n\t\t\t\t\t\t\tgpa_list={gpa_list}\n\t\t\t\t\t\t\tsubjects={subjects}\n\t\t\t\t\t\t\texams={exams}\n\t\t\t\t\t\t\tstudent_id={list.student_id}\n\t\t\t\t\t\t\tstudent_marks={student_marks}\n\t\t\t\t\t\t\tstyles={{ head_size, head_color, border_color }}\n\t\t\t\t\t\t\tall_std_mark={all_mark}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t\t<div\n\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-between\" }}\n\t\t\t\tclassName=\"mt-5\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: \"1px dotted \" + head_color,\n\t\t\t\t\t\tpadding: \"0.2rem\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tExam Controller\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: \"1px dotted \" + head_color,\n\t\t\t\t\t\tpadding: \"0.2rem\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tPrincipal\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","J:\\Web\\school_argon\\src\\components\\print\\payments\\Due.js",["1604"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Call } from \"services/API/Call\";\r\nimport PrintOptions from \"../PrintOptions\";\r\nimport SchoolInfo from \"../SchoolInfo\";\r\nimport ListTable from \"./DueTable\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport default function Due(props) {\r\n\tconst { url, title, head, val, indexed = true, query_info = [] } = props;\r\n\tconst [list, setList] = useState([]);\r\n\tconst [logo_dir, setLogoDir] = useState({ left: \"0%\" });\r\n\tconst [logo_size, setLogoSize] = useState(100);\r\n\tconst [school_name_size, setSchoolNameSize] = useState(25);\r\n\tconst [other_size, setOtherSize] = useState(14);\r\n\tconst [school_name_color, setSchoolNameColor] = useState(\"#000\");\r\n\tconst [other_color, setOtherColor] = useState(\"#000\");\r\n\tconst [school_name, setSchoolName] = useState(true);\r\n\tconst [other_info, setOtherInfo] = useState(true);\r\n\tconst [logo, setLogo] = useState(true);\r\n\tconst [line, setLine] = useState(true);\r\n\r\n\tconst [head_color, setHeadColor] = useState(\"#000\");\r\n\tconst [data_color, setDataColor] = useState(\"#000\");\r\n\tconst [border_color, setBorderColor] = useState(\"#000\");\r\n\tconst [head_size, setHeadSize] = useState(15);\r\n\tconst [data_size, setDataSize] = useState(14);\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetList(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, [url]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\r\n\t\t\t\t<div className=\"mb-1 mt-1\">Table Options</div>\r\n\t\t\t\t<small>Head Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Head Size\"\r\n\t\t\t\t\tvalue={head_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Data Size\"\r\n\t\t\t\t\tvalue={data_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Head Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={head_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Data Color\"\r\n\t\t\t\t\tvalue={data_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Border Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Border Color\"\r\n\t\t\t\t\tvalue={border_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setBorderColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<PrintOptions\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tsetLogoDir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tsetLogoSize,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tsetSchoolNameSize,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tsetOtherSize,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tsetSchoolNameColor,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tsetOtherColor,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tsetSchoolName,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tsetOtherInfo,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tsetLogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t\tsetLine,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<SchoolInfo\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className=\"p-5\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\tmarginBottom: \"1rem\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{query_info.length > 0\r\n\t\t\t\t\t\t? query_info.map((el, idx) =>\r\n\t\t\t\t\t\t\t\tel.value != undefined && el.value.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: head_size,\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0rem 1rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>{el.title}</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{el.value}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<ListTable\r\n\t\t\t\t\thead={head}\r\n\t\t\t\t\tdata={list}\r\n\t\t\t\t\tval={val}\r\n\t\t\t\t\tcolors={{ data_color, head_color, border_color }}\r\n\t\t\t\t\tsize={{ data_size, head_size }}\r\n\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\accounts\\List.js",["1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624"],"import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Call } from \"services/API/Call\";\nimport PrintOptions from \"../PrintOptions\";\nimport SchoolInfo from \"../SchoolInfo\";\nimport ListTable from \"./ListTable\";\nimport { Input, Table } from \"reactstrap\";\n\nexport default function List(props) {\n  const { url, title, head, val, indexed = true } = props;\n  const [list, setList] = useState([]);\n  const [logo_dir, setLogoDir] = useState({ left: \"0%\" });\n  const [logo_size, setLogoSize] = useState(100);\n  const [school_name_size, setSchoolNameSize] = useState(25);\n  const [other_size, setOtherSize] = useState(12);\n  const [school_name_color, setSchoolNameColor] = useState(\"#525f7f\");\n  const [other_color, setOtherColor] = useState(\"#8898aa\");\n  const [school_name, setSchoolName] = useState(true);\n  const [other_info, setOtherInfo] = useState(true);\n  const [logo, setLogo] = useState(true);\n  const [line, setLine] = useState(true);\n\n  const [head_color, setHeadColor] = useState(\"#525f7f\");\n  const [data_color, setDataColor] = useState(\"#3D4956\");\n  const [border_color, setBorderColor] = useState(\"#e9ecef\");\n  const [head_size, setHeadSize] = useState(12);\n  const [data_size, setDataSize] = useState(11);\n  const [balance, setBalance] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url })\n      .then((res) => {\n        setList(res);\n      })\n      .catch((err) => console.log(err));\n    Call({ mehtod: \"get\", url: \"accounts/account_balance\" })\n      .then((res) => setBalance(res))\n      .catch((err) => console.log(err));\n  }, [url]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>\n        <div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\n          <div className=\"mb-1 mt-1\">Table Options</div>\n          <small>Head Size</small>\n          <Input\n            type=\"number\"\n            placeholder=\"Head Size\"\n            value={head_size}\n            bsSize=\"sm\"\n            className=\"mb-1\"\n            onChange={(e) => setHeadSize(e.target.value)}\n          />\n          <small>Data Size</small>\n          <Input\n            type=\"number\"\n            placeholder=\"Data Size\"\n            value={data_size}\n            bsSize=\"sm\"\n            className=\"mb-1\"\n            onChange={(e) => setDataSize(e.target.value)}\n          />\n          <small>Head Color</small>\n          <Input\n            type=\"color\"\n            placeholder=\"Address,Number Color\"\n            value={head_color}\n            bsSize=\"sm\"\n            className=\"mb-1\"\n            onChange={(e) => setHeadColor(e.target.value)}\n          />\n          <small>Data Color</small>\n          <Input\n            type=\"color\"\n            placeholder=\"Data Color\"\n            value={data_color}\n            bsSize=\"sm\"\n            className=\"mb-1\"\n            onChange={(e) => setDataColor(e.target.value)}\n          />\n          <small>Border Color</small>\n          <Input\n            type=\"color\"\n            placeholder=\"Border Color\"\n            value={border_color}\n            bsSize=\"sm\"\n            className=\"mb-1\"\n            onChange={(e) => setBorderColor(e.target.value)}\n          />\n        </div>\n        <PrintOptions\n          val={{\n            logo_dir,\n            setLogoDir,\n            logo_size,\n            setLogoSize,\n            school_name_size,\n            setSchoolNameSize,\n            other_size,\n            setOtherSize,\n            school_name_color,\n            setSchoolNameColor,\n            other_color,\n            setOtherColor,\n            school_name,\n            setSchoolName,\n            other_info,\n            setOtherInfo,\n            logo,\n            setLogo,\n            line,\n            setLine,\n          }}\n        />\n        <SchoolInfo\n          val={{\n            logo_dir,\n            logo_size,\n            school_name_size,\n            other_size,\n            school_name_color,\n            other_color,\n            school_name,\n            other_info,\n            logo,\n            line,\n          }}\n        />\n        <div className=\"p-5\">\n          <h2 className=\"text-center\">Cash - Credit</h2>\n          <ListTable\n            head={head}\n            data={list.filter(\n              (el) => el.balance_form == \"Cash\" && el.entry_type == \"Credit\"\n            )}\n            val={val}\n            colors={{ data_color, head_color, border_color }}\n            size={{ data_size, head_size }}\n            indexed={indexed}\n          />\n        </div>\n        <div className=\"p-5\">\n          <h2 className=\"text-center\">Cash - Debit</h2>\n          <ListTable\n            head={head}\n            data={list.filter(\n              (el) => el.balance_form == \"Cash\" && el.entry_type == \"Debit\"\n            )}\n            val={val}\n            colors={{ data_color, head_color, border_color }}\n            size={{ data_size, head_size }}\n            indexed={indexed}\n          />\n        </div>\n        <div className=\"p-5\">\n          <Table>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Cash Credit\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter(\n                      (el) =>\n                        el.balance_form == \"Cash\" && el.entry_type == \"Credit\"\n                    )\n                    .reduce(\n                      (cb, val) => (cb = parseInt(cb) + parseInt(val.amount)),\n                      0\n                    )}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Cash Debit\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter(\n                      (el) =>\n                        el.balance_form == \"Cash\" && el.entry_type == \"Debit\"\n                    )\n                    .reduce(\n                      (cb, val) => (cb = parseInt(cb) + parseInt(val.amount)),\n                      0\n                    )}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Cash\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter((el) => el.balance_form == \"Cash\")\n                    .reduce(\n                      (cb, val) =>\n                        (cb =\n                          parseInt(cb) +\n                          parseInt(\n                            val.entry_type == \"Debit\" ? -val.amount : val.amount\n                          )),\n                      0\n                    )}\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <hr />\n      <div>\n        <SchoolInfo\n          val={{\n            logo_dir,\n            logo_size,\n            school_name_size,\n            other_size,\n            school_name_color,\n            other_color,\n            school_name,\n            other_info,\n            logo,\n            line,\n          }}\n        />\n        <div className=\"p-5\">\n          <h2 className=\"text-center\">Bank - Credit</h2>\n          <ListTable\n            head={head}\n            data={list.filter(\n              (el) => el.balance_form == \"Bank\" && el.entry_type == \"Credit\"\n            )}\n            val={val}\n            colors={{ data_color, head_color, border_color }}\n            size={{ data_size, head_size }}\n            indexed={indexed}\n          />\n        </div>\n        <div className=\"p-5\">\n          <h2 className=\"text-center\">Bank - Debit</h2>\n          <ListTable\n            head={head}\n            data={list.filter(\n              (el) => el.balance_form == \"Bank\" && el.entry_type == \"Debit\"\n            )}\n            val={val}\n            colors={{ data_color, head_color, border_color }}\n            size={{ data_size, head_size }}\n            indexed={indexed}\n          />\n        </div>\n        <div className=\"p-5\">\n          <Table>\n            <tbody>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Bank Credit\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter(\n                      (el) =>\n                        el.balance_form == \"Bank\" && el.entry_type == \"Credit\"\n                    )\n                    .reduce(\n                      (cb, val) => (cb = parseInt(cb) + parseInt(val.amount)),\n                      0\n                    )}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Bank Debit\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter(\n                      (el) =>\n                        el.balance_form == \"Bank\" && el.entry_type == \"Debit\"\n                    )\n                    .reduce(\n                      (cb, val) => (cb = parseInt(cb) + parseInt(val.amount)),\n                      0\n                    )}\n                </td>\n              </tr>\n              <tr>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  Total Bank\n                </td>\n                <td\n                  style={{\n                    fontSize: data_size + \"px\",\n                    color: data_color,\n                    borderTop: `1px solid ${border_color}`,\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {list\n                    .filter((el) => el.balance_form == \"Bank\")\n                    .reduce(\n                      (cb, val) =>\n                        (cb =\n                          parseInt(cb) +\n                          parseInt(\n                            val.entry_type == \"Debit\" ? -val.amount : val.amount\n                          )),\n                      0\n                    )}\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n      <div className=\"p-5\">\n        <Table>\n          <tbody>\n            <tr>\n              <td\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                }}\n              >\n                Current Cash Balance\n              </td>\n              <td\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                }}\n              >\n                {balance.length > 0 ? balance[0].cash : null}\n              </td>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                }}\n              >\n                Current Bank Balance\n              </td>\n              <td\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                }}\n              >\n                {balance.length > 0 ? balance[0].bank : null}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\FindBooks.js",["1625","1626"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function FindBooks({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [categories, setCategories] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"library/books_category\" })\n      .then((res) => setCategories(res))\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div>\n      <Index\n        title=\"Books List\"\n        list_url=\"/library/books\"\n        list_head={[\n          {\n            title: \"Book\",\n            identifier: \"book_name\",\n          },\n          {\n            title: \"Book Category\",\n            identifier: \"category_name\",\n          },\n          {\n            title: \"Author\",\n            identifier: \"author_name\",\n          },\n          {\n            title: \"Shelf\",\n            identifier: \"shelf_no\",\n          },\n          {\n            title: \"Price\",\n            identifier: \"price\",\n          },\n          {\n            title: \"Stock\",\n            identifier: \"stock\",\n          },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        query_title=\"Query Exam Subject List\"\n        query_list={[\n          {\n            placeholder: \"Book Name\",\n            type: \"text\",\n            name: \"book_name\",\n            required: false,\n          },\n          {\n            placeholder: \"Book Category\",\n            type: \"select\",\n            name: \"category_name\",\n            options: categories,\n            required: false,\n          },\n          {\n            placeholder: \"Author Name\",\n            type: \"text\",\n            name: \"author_name\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          book_name: \"\",\n          category_name: -1,\n          author_name: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\payments\\List.js",["1627"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Call } from \"services/API/Call\";\r\nimport PrintOptions from \"../PrintOptions\";\r\nimport SchoolInfo from \"../SchoolInfo\";\r\nimport ListTable from \"./ListTable\";\r\nimport { Input, Table } from \"reactstrap\";\r\n\r\nexport default function List(props) {\r\n\tconst {\r\n\t\turl,\r\n\t\ttitle,\r\n\t\thead,\r\n\t\tval,\r\n\t\tindexed = true,\r\n\t\tstudent_id,\r\n\t\treceipt_id,\r\n\t} = props;\r\n\tconst [list, setList] = useState([]);\r\n\tconst [logo_dir, setLogoDir] = useState({ left: \"0%\" });\r\n\tconst [logo_size, setLogoSize] = useState(100);\r\n\tconst [school_name_size, setSchoolNameSize] = useState(25);\r\n\tconst [other_size, setOtherSize] = useState(12);\r\n\tconst [school_name_color, setSchoolNameColor] = useState(\"#00000\");\r\n\tconst [other_color, setOtherColor] = useState(\"#00000\");\r\n\tconst [school_name, setSchoolName] = useState(false);\r\n\tconst [other_info, setOtherInfo] = useState(false);\r\n\tconst [logo, setLogo] = useState(false);\r\n\tconst [line, setLine] = useState(false);\r\n\r\n\tconst [head_color, setHeadColor] = useState(\"#00000\");\r\n\tconst [data_color, setDataColor] = useState(\"#00000\");\r\n\tconst [border_color, setBorderColor] = useState(\"#00000\");\r\n\tconst [head_size, setHeadSize] = useState(15);\r\n\tconst [data_size, setDataSize] = useState(15);\r\n\tconst [student_info, setStudentInfo] = useState({});\r\n\tconst th_style = {\r\n\t\tcolor: head_color,\r\n\t\tfontSize: head_size + \"px\",\r\n\t};\r\n\tconst td_style = {\r\n\t\tcolor: data_color,\r\n\t\tfontSize: data_size + \"px\",\r\n\t};\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetList(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tCall({\r\n\t\t\tmethod: \"get\",\r\n\t\t\turl: \"students/student?student_id=\" + student_id,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetStudentInfo(res);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, [url]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\r\n\t\t\t\t<div className=\"mb-1 mt-1\">Table Options</div>\r\n\t\t\t\t<small>Head Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Head Size\"\r\n\t\t\t\t\tvalue={head_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Data Size\"\r\n\t\t\t\t\tvalue={data_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Head Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={head_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Data Color\"\r\n\t\t\t\t\tvalue={data_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Border Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Border Color\"\r\n\t\t\t\t\tvalue={border_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setBorderColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<PrintOptions\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tsetLogoDir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tsetLogoSize,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tsetSchoolNameSize,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tsetOtherSize,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tsetSchoolNameColor,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tsetOtherColor,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tsetSchoolName,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tsetOtherInfo,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tsetLogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t\tsetLine,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div style={{ height: \"100%\" }}>\r\n\t\t\t\t<SchoolInfo\r\n\t\t\t\t\tval={{\r\n\t\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\t\tlogo_size,\r\n\t\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\t\tother_size,\r\n\t\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\t\tother_color,\r\n\t\t\t\t\t\tschool_name,\r\n\t\t\t\t\t\tother_info,\r\n\t\t\t\t\t\tlogo,\r\n\t\t\t\t\t\tline,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<p style={{ color: head_color, margin: 0 }}>Payment Receipt</p>\r\n\t\t\t\t\t<small style={{ color: data_color }}>(Student's Copy)</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ maxWidth: \"300px\", margin: \"auto\" }}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>ID:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? student_info[0].student_identifier\r\n\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Name:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? student_info[0].student_name\r\n\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Class:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].class : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Department:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].department : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Roll:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].role : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Receipt No:</th>\r\n\t\t\t\t\t\t\t\t<td style={{ ...td_style, textAlign: \"left\" }}>{receipt_id}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"pl-5 pr-5\"\r\n\t\t\t\t\tstyle={{ maxWidth: \"85%\", margin: \"auto\", textAlign: \"center\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListTable\r\n\t\t\t\t\t\thead={head}\r\n\t\t\t\t\t\tdata={list}\r\n\t\t\t\t\t\tval={val}\r\n\t\t\t\t\t\tcolors={{ data_color, head_color, border_color }}\r\n\t\t\t\t\t\tsize={{ data_size, head_size }}\r\n\t\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: \"5rem\",\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t\t\tfontSize: head_size + \"px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: \"0.4rem\",\r\n\t\t\t\t\t\t\t\tborderTop: `1px solid ${border_color}`,\r\n\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStudent Signature\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: \"0.4rem\",\r\n\t\t\t\t\t\t\t\tborderTop: `1px solid ${border_color}`,\r\n\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReceipt Issuer Signature\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div style={{ height: \"100%\" }}>\r\n\t\t\t\t<SchoolInfo\r\n\t\t\t\t\tval={{\r\n\t\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\t\tlogo_size,\r\n\t\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\t\tother_size,\r\n\t\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\t\tother_color,\r\n\t\t\t\t\t\tschool_name,\r\n\t\t\t\t\t\tother_info,\r\n\t\t\t\t\t\tlogo,\r\n\t\t\t\t\t\tline,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<p style={{ color: head_color, margin: 0 }}>Payment Receipt</p>\r\n\t\t\t\t\t<small style={{ color: data_color }}>(Office Copy)</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ maxWidth: \"300px\", margin: \"auto\" }}>\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>ID:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? student_info[0].student_identifier\r\n\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Name:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0\r\n\t\t\t\t\t\t\t\t\t\t? student_info[0].student_name\r\n\t\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Class:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].class : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Department:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].department : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Roll:</th>\r\n\t\t\t\t\t\t\t\t<td style={td_style}>\r\n\t\t\t\t\t\t\t\t\t{student_info.length > 0 ? student_info[0].role : null}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<th style={th_style}>Receipt No:</th>\r\n\t\t\t\t\t\t\t\t<td style={{ ...td_style, textAlign: \"left\" }}>{receipt_id}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"pl-5 pr-5\"\r\n\t\t\t\t\tstyle={{ maxWidth: \"85%\", margin: \"auto\", textAlign: \"center\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListTable\r\n\t\t\t\t\t\thead={head}\r\n\t\t\t\t\t\tdata={list}\r\n\t\t\t\t\t\tval={val}\r\n\t\t\t\t\t\tcolors={{ data_color, head_color, border_color }}\r\n\t\t\t\t\t\tsize={{ data_size, head_size }}\r\n\t\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: \"5rem\",\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t\t\tfontSize: head_size + \"px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: \"0.4rem\",\r\n\t\t\t\t\t\t\t\tborderTop: `1px solid ${border_color}`,\r\n\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStudent Signature\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginTop: \"0.4rem\",\r\n\t\t\t\t\t\t\t\tborderTop: `1px solid ${border_color}`,\r\n\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReceipt Issuer Signature\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\AdmitCard.js",[],"J:\\Web\\school_argon\\src\\components\\print\\SchoolInfo.js",["1628"],"import React, { useState } from \"react\";\r\nimport { Call } from \"services/API/Call\";\r\nexport default function SchoolInfo(props) {\r\n  const [info, setInfo] = useState({});\r\n  const {\r\n    logo_dir,\r\n    logo_size,\r\n    school_name_size,\r\n    other_size,\r\n    school_name_color,\r\n    other_color,\r\n    school_name = false,\r\n    other_info = false,\r\n    logo = false,\r\n    line = false,\r\n    inf,\r\n  } = props.val;\r\n\r\n  React.useEffect(() => {\r\n    if (inf == undefined)\r\n      Call({ method: \"get\", url: \"settings/institute_info\" })\r\n        .then((res) => {\r\n          setInfo(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    else {\r\n      setInfo(inf);\r\n    }\r\n  }, [inf]);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        maxWidth: \"100%\",\r\n      }}\r\n    >\r\n      {logo ? (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0%\",\r\n            margin: \"1rem\",\r\n            ...logo_dir,\r\n          }}\r\n        >\r\n          <img\r\n            src={process.env.REACT_APP_IMAGE_PATH + \"/\" + info.institute_logo}\r\n            alt=\"School Logo\"\r\n            style={{ width: logo_size + \"px\", objectFit: \"cover\" }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      <div\r\n        className=\"w-100\"\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            maxWidth: \"450px\",\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {school_name ? (\r\n            <p\r\n              style={{\r\n                fontSize: school_name_size + \"px\",\r\n                marginBottom: 0,\r\n                color: school_name_color,\r\n              }}\r\n            >\r\n              {info.institute_name}\r\n            </p>\r\n          ) : null}\r\n          {other_info ? (\r\n            <>\r\n              <p\r\n                style={{\r\n                  fontSize: other_size + \"px\",\r\n                  marginBottom: 0,\r\n                  color: other_color,\r\n                }}\r\n              >\r\n                Address: {info.institute_address}\r\n              </p>\r\n\r\n              <p\r\n                style={{\r\n                  fontSize: other_size + \"px\",\r\n                  marginBottom: 0,\r\n                  color: other_color,\r\n                }}\r\n              >\r\n                Contact Numbers: {info.institute_phonenumbers}\r\n              </p>\r\n              <p\r\n                style={{\r\n                  fontSize: other_size + \"px\",\r\n                  marginBottom: 0,\r\n                  color: other_color,\r\n                }}\r\n              >\r\n                Institute Email: {info.institute_email}\r\n              </p>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {line ? <hr /> : null}\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\Tabulation.js",["1629"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport TabulationList from \"./TabulationList\";\n\nexport default function Tabulation() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Tabulation Sheet\"\n        list_url=\"/exams/marks\"\n        CustomListComponent={TabulationList}\n        query_title=\"Query Exam Marks\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\Marks.js",["1630"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport MarkList from \"./MarkList\";\n\nexport default function Marks() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Assignment\"\n        list_url=\"/exams/exam_subjects\"\n        list_head={[\n          { title: \"Subject\", identifier: \"subject\" },\n          { title: \"Exam\", identifier: \"exam\" },\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n        ]}\n        CustomListComponent={MarkList}\n        query_title=\"Query Exam Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePayment.js",["1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport Api from \"services/API/Api\";\nimport StudentPaymentList from \"./DuePaymentList\";\n\nexport default function DuePayment({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n  const [students, setStudents] = useState([]);\n  React.useEffect(() => {\n    if (class_id != -1 && session_id != -1 && department_id != -1)\n      Api({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id +\n          \"&session_id=\" +\n          session_id,\n      })\n        .then((res) => setStudents(res.data))\n        .catch((err) => console.log(err));\n  }, [class_id, department_id, session_id]);\n  return (\n    <div>\n      <Index\n        title=\"Due Payment\"\n        list_url=\"/payments/student_due\"\n        CustomListComponent={StudentPaymentList}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        edit_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"payment_category\",\n            required: false,\n            disabled: true,\n          },\n          {\n            placeholder: \"Payment Info\",\n            type: \"text\",\n            name: \"payment_info\",\n            required: false,\n            disabled: true,\n          },\n          {\n            placeholder: \"Fees\",\n            type: \"number\",\n            name: \"amount\",\n            required: true,\n          },\n        ]}\n        query_title=\"Query Student Due List\"\n        list_head={[\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Payment Category\",\n            identifier: \"payment_category\",\n          },\n          {\n            title: \"Payment Info\",\n            identifier: \"payment_info\",\n          },\n          {\n            title: \"Amount\",\n            identifier: \"amount\",\n          },\n        ]}\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setDepartment,\n            required: true,\n          },\n          {\n            placeholder: \"Students\",\n            type: \"select\",\n            name: \"student_id\",\n            options: students,\n            required: true,\n          },\n        ]}\n        query_data={{\n          student_id: -1,\n        }}\n        print_url=\"payments/due_list\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\StudentPayment.js",["1642","1643","1644","1645","1646","1647","1648"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport Api from \"services/API/Api\";\nimport StudentPaymentList from \"./StudentPaymentList\";\n\nexport default function StudentPayment({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n  const [students, setStudents] = useState([]);\n  React.useEffect(() => {\n    if (class_id != -1 && session_id != -1 && department_id != -1)\n      Api({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id +\n          \"&session_id=\" +\n          session_id,\n      })\n        .then((res) => setStudents(res.data))\n        .catch((err) => console.log(err));\n  }, [class_id, department_id, session_id]);\n  return (\n    <div>\n      <Index\n        title=\"Student Payment\"\n        list_url=\"/students/student_assignment\"\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        CustomListComponent={StudentPaymentList}\n        query_title=\"Query Student List\"\n        indexed={false}\n        list_head={[\n          {\n            title: \"Roll\",\n            identifier: \"role\",\n          },\n          {\n            title: \"ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n        ]}\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Students\",\n            type: \"select\",\n            name: \"student_id\",\n            options: students,\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\BooksOperation.js",["1649","1650","1651","1652","1653","1654","1655","1656","1657","1658"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport Books from \"./Books\";\n\nexport default function BooksOperation() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [student_list, setStudentList] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Issue Books\"\n        custom_list={[]}\n        CustomListComponent={Books}\n        query_title=\"Query Student\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            required: false,\n            options: session_list,\n            setState: setSelectedSession,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            required: selected_session != -1,\n            options: class_list,\n            setState: setSelectedClass,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            required: selected_session != -1,\n            setState: setSelectedDepartment,\n            options: department_list.filter((element) => {\n              return (\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n              );\n            }),\n          },\n          {\n            placeholder: \"Student\",\n            type: \"select\",\n            name: \"student\",\n            required:\n              selected_session != -1 ||\n              selected_class != -1 ||\n              selected_department != -1,\n            options: student_list,\n          },\n        ]}\n        query_data={{\n          student_id: \"\",\n          session_id: -1,\n          class_id: -1,\n          department_id: -1,\n          student: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BooksCategoryCrud.js",["1659","1660","1661","1662","1663","1664","1665","1666"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function BooksCategoryCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Book Category Name\",\n      type: \"text\",\n      name: \"category_name\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Book Category List\"\n        list_url=\"/library/books_category\"\n        list_head={[{ title: \"Book Category\", identifier: \"category_name\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          category_name: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BooksCrud.js",["1667","1668","1669","1670","1671","1672","1673","1674"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function BooksCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [categories, setCategories] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"library/books_category\" })\n      .then((res) => setCategories(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const send_data = [\n    {\n      placeholder: \"Book Name\",\n      type: \"text\",\n      name: \"book_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Author Name\",\n      type: \"text\",\n      name: \"author_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Category Name\",\n      type: \"select\",\n      name: \"category_name\",\n      options: categories,\n      required: true,\n    },\n    {\n      placeholder: \"Shelf No\",\n      type: \"text\",\n      name: \"shelf_no\",\n      required: true,\n    },\n    {\n      placeholder: \"Price\",\n      type: \"number\",\n      name: \"price\",\n      required: true,\n    },\n    {\n      placeholder: \"Stock\",\n      type: \"number\",\n      name: \"stock\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Books List\"\n        list_url=\"/library/books\"\n        list_head={[\n          { title: \"Book Name\", identifier: \"book_name\" },\n          { title: \"Author Name\", identifier: \"author_name\" },\n          { title: \"Category Name\", identifier: \"category_name\" },\n          { title: \"Shelf No\", identifier: \"shelf_no\" },\n          { title: \"Price\", identifier: \"price\" },\n          { title: \"Stock\", identifier: \"stock\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          book_name: \"\",\n          author_name: \"\",\n          category_name: \"\",\n          shelf_no: \"\",\n          price: \"\",\n          stock: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultPublishing.js",["1675","1676","1677","1678","1679","1680","1681","1682","1683","1684"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport PublishList from \"./PublishList\";\n\nexport default function ResultPublishing({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [selected_session, setSelectedSession] = useState();\n\n  const [result_list, setResultList] = useState([]);\n\n  React.useEffect(() => {\n    if (\n      selected_class != -1 &&\n      selected_session != -1 &&\n      selected_department != -1\n    ) {\n      Call({\n        method: \"get\",\n        url:\n          \"results/result?result=true&session_id=\" +\n          selected_session +\n          \"&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department,\n      })\n        .then((res) => setResultList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Results List\"\n        list_url=\"/results/result_publishing\"\n        list_head={[\n          { title: \"Student ID\", identifier: \"student_identifier\" },\n          { title: \"Student name\", identifier: \"student_name\" },\n          { title: \"Result\", identifier: \"result_name\" },\n          { title: \"Result Status\", identifier: \"result_status\" },\n        ]}\n        CustomListComponent={PublishList}\n        add_initial_values={{\n          result_name: \"\",\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          exams: [],\n        }}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: true,\n            setState: setSelectedDepartment,\n          },\n          {\n            placeholder: \"Result\",\n            type: \"select\",\n            name: \"result_id\",\n            options: result_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session &&\n                element.department_id == selected_department\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultCrud.js",["1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport ResultExamInput from \"./ResultExamInput\";\n\nexport default function ResultCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n\n  const [exam_list, setExamList] = useState([]);\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => setExamList(res))\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n  const add_data = [\n    {\n      placeholder: \"Result Name\",\n      type: \"text\",\n      name: \"result_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      required: true,\n      options: session_list,\n      setState: setSession,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      required: true,\n      options: class_list,\n      setState: setClass,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      setState: setDepartment,\n      options: department_list.filter(\n        (element) =>\n          element.class_id == class_id && element.session_id == session_id\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Exams\",\n      type: \"custom\",\n      name: \"exams\",\n      options: exam_list,\n      required: true,\n      customInput: ResultExamInput,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Results List\"\n        list_url=\"/results/result\"\n        list_head={[\n          { title: \"Result name\", identifier: \"result_name\" },\n          { title: \"Exams\", identifier: \"exams\" },\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={add_data}\n        add_initial_values={{\n          result_name: \"\",\n          class_id: -1,\n          department_id: -1,\n          session_id: -1,\n          exams: [],\n        }}\n        query_title=\"Query Result List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\List.js",["1698","1699"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Call } from \"services/API/Call\";\r\nimport PrintOptions from \"../../PrintOptions\";\r\nimport SchoolInfo from \"../../SchoolInfo\";\r\nimport ListTable from \"./ListTable\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport default function List(props) {\r\n\tconst { url, title, indexed = true, year, month, query_info } = props;\r\n\tconst [list, setList] = useState([]);\r\n\tconst [logo_dir, setLogoDir] = useState({ left: \"0%\" });\r\n\tconst [logo_size, setLogoSize] = useState(100);\r\n\tconst [school_name_size, setSchoolNameSize] = useState(25);\r\n\tconst [other_size, setOtherSize] = useState(14);\r\n\tconst [school_name_color, setSchoolNameColor] = useState(\"#000\");\r\n\tconst [other_color, setOtherColor] = useState(\"#000\");\r\n\tconst [school_name, setSchoolName] = useState(true);\r\n\tconst [other_info, setOtherInfo] = useState(true);\r\n\tconst [logo, setLogo] = useState(true);\r\n\tconst [line, setLine] = useState(true);\r\n\r\n\tconst [head_color, setHeadColor] = useState(\"#000\");\r\n\tconst [data_color, setDataColor] = useState(\"#000\");\r\n\tconst [small_color, setSmallColor] = useState(\"#000\");\r\n\tconst [border_color, setBorderColor] = useState(\"#000\");\r\n\tconst [head_size, setHeadSize] = useState(15);\r\n\tconst [data_size, setDataSize] = useState(14);\r\n\tconst [small_size, setSmallSize] = useState(12);\r\n\tconst [slice_length, setSliceLength] = useState(5);\r\n\tconst [head, setHead] = useState([]);\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetList({ ...res, ...res, ...res });\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\tReact.useEffect(() => {\r\n\t\tsetHead(Object.keys(list));\r\n\t}, [list]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\r\n\t\t\t\t<div className=\"mb-1 mt-1\">Table Options</div>\r\n\t\t\t\t<small>Head Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Head Size\"\r\n\t\t\t\t\tvalue={head_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Data Size\"\r\n\t\t\t\t\tvalue={data_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Small Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Small Size\"\r\n\t\t\t\t\tvalue={small_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSmallSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Students Per Row</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Students Per Row\"\r\n\t\t\t\t\tvalue={slice_length}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSliceLength(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Head Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={head_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Data Color\"\r\n\t\t\t\t\tvalue={data_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Small Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={small_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSmallColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Border Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Border Color\"\r\n\t\t\t\t\tvalue={border_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setBorderColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<PrintOptions\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tsetLogoDir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tsetLogoSize,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tsetSchoolNameSize,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tsetOtherSize,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tsetSchoolNameColor,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tsetOtherColor,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tsetSchoolName,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tsetOtherInfo,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tsetLogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t\tsetLine,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<SchoolInfo\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className=\"p-5\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\tmarginBottom: \"1rem\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{query_info.length > 0\r\n\t\t\t\t\t\t? query_info.map((el, idx) =>\r\n\t\t\t\t\t\t\t\tel.value != undefined && el.value.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: head_size,\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0rem 1rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>{el.title}</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{el.value}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t\t{[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\r\n\t\t\t\t\t<ListTable\r\n\t\t\t\t\t\tcolors={{ head_color, data_color, small_color, border_color }}\r\n\t\t\t\t\t\tsize={{ head_size, data_size, small_size }}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tlist={list}\r\n\t\t\t\t\t\ttop={head.slice(\r\n\t\t\t\t\t\t\t(i + 1) * slice_length - slice_length,\r\n\t\t\t\t\t\t\t(i + 1) * slice_length\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tyear={year}\r\n\t\t\t\t\t\tmonth={month}\r\n\t\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\List.js",["1700","1701"],"import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Call } from \"services/API/Call\";\r\nimport PrintOptions from \"../../PrintOptions\";\r\nimport SchoolInfo from \"../../SchoolInfo\";\r\nimport ListTable from \"./ListTable\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport default function List(props) {\r\n\tconst { url, title, indexed = true, year, month, query_info } = props;\r\n\tconst [list, setList] = useState([]);\r\n\tconst [logo_dir, setLogoDir] = useState({ left: \"0%\" });\r\n\tconst [logo_size, setLogoSize] = useState(100);\r\n\tconst [school_name_size, setSchoolNameSize] = useState(25);\r\n\tconst [other_size, setOtherSize] = useState(14);\r\n\tconst [school_name_color, setSchoolNameColor] = useState(\"#000\");\r\n\tconst [other_color, setOtherColor] = useState(\"#000\");\r\n\tconst [school_name, setSchoolName] = useState(true);\r\n\tconst [other_info, setOtherInfo] = useState(true);\r\n\tconst [logo, setLogo] = useState(true);\r\n\tconst [line, setLine] = useState(true);\r\n\r\n\tconst [head_color, setHeadColor] = useState(\"#000\");\r\n\tconst [data_color, setDataColor] = useState(\"#000\");\r\n\tconst [small_color, setSmallColor] = useState(\"#000\");\r\n\tconst [border_color, setBorderColor] = useState(\"#000\");\r\n\tconst [head_size, setHeadSize] = useState(15);\r\n\tconst [data_size, setDataSize] = useState(14);\r\n\tconst [small_size, setSmallSize] = useState(12);\r\n\tconst [slice_length, setSliceLength] = useState(5);\r\n\tconst [head, setHead] = useState([]);\r\n\tReact.useEffect(() => {\r\n\t\tCall({ method: \"get\", url })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetList({ ...res, ...res, ...res });\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}, []);\r\n\tReact.useEffect(() => {\r\n\t\tsetHead(Object.keys(list));\r\n\t}, [list]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"bg-dark noprint printoptions\" left={{ right: \"0%\" }}>\r\n\t\t\t\t<div className=\"mb-1 mt-1\">Table Options</div>\r\n\t\t\t\t<small>Head Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Head Size\"\r\n\t\t\t\t\tvalue={head_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Data Size\"\r\n\t\t\t\t\tvalue={data_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Small Size</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Small Size\"\r\n\t\t\t\t\tvalue={small_size}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSmallSize(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Employee Per Row</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tplaceholder=\"Students Per Row\"\r\n\t\t\t\t\tvalue={slice_length}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSliceLength(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Head Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={head_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setHeadColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Data Color\"\r\n\t\t\t\t\tvalue={data_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setDataColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Small Data Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Address,Number Color\"\r\n\t\t\t\t\tvalue={small_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setSmallColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<small>Border Color</small>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\tplaceholder=\"Border Color\"\r\n\t\t\t\t\tvalue={border_color}\r\n\t\t\t\t\tbsSize=\"sm\"\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\tonChange={(e) => setBorderColor(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<PrintOptions\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tsetLogoDir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tsetLogoSize,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tsetSchoolNameSize,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tsetOtherSize,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tsetSchoolNameColor,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tsetOtherColor,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tsetSchoolName,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tsetOtherInfo,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tsetLogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t\tsetLine,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<SchoolInfo\r\n\t\t\t\tval={{\r\n\t\t\t\t\tlogo_dir,\r\n\t\t\t\t\tlogo_size,\r\n\t\t\t\t\tschool_name_size,\r\n\t\t\t\t\tother_size,\r\n\t\t\t\t\tschool_name_color,\r\n\t\t\t\t\tother_color,\r\n\t\t\t\t\tschool_name,\r\n\t\t\t\t\tother_info,\r\n\t\t\t\t\tlogo,\r\n\t\t\t\t\tline,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className=\"p-5\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\tmarginBottom: \"1rem\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{query_info.length > 0\r\n\t\t\t\t\t\t? query_info.map((el, idx) =>\r\n\t\t\t\t\t\t\t\tel.value != undefined && el.value.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: head_size,\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: \"0rem 1rem\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>{el.title}</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{el.value}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</div>\r\n\t\t\t\t{[...Array(Math.ceil(head.length / slice_length))].map((el, i) => (\r\n\t\t\t\t\t<ListTable\r\n\t\t\t\t\t\tcolors={{ head_color, data_color, small_color, border_color }}\r\n\t\t\t\t\t\tsize={{ head_size, data_size, small_size }}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tlist={list}\r\n\t\t\t\t\t\ttop={head.slice(\r\n\t\t\t\t\t\t\t(i + 1) * slice_length - slice_length,\r\n\t\t\t\t\t\t\t(i + 1) * slice_length\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tyear={year}\r\n\t\t\t\t\t\tmonth={month}\r\n\t\t\t\t\t\tindexed={indexed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceReportMonth.js",["1702","1703","1704","1705"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport AttendanceListMonth from \"./AttendanceListMonth\";\nexport default function AttendanceReportMonth({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n  return (\n    <div className=\"employee_attendance\">\n      <Index\n        title=\"Students Attendance Month\"\n        list_url=\"/students/student_monthly_attendance\"\n        CustomListComponent={AttendanceListMonth}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        query_title=\"Query Student Attendance\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Year\",\n            type: \"select\",\n            name: \"year\",\n            options: session_list,\n            required: true,\n          },\n          {\n            placeholder: \"Month\",\n            type: \"select\",\n            name: \"month\",\n            options: [\n              { text: \"January\", value: \"01\" },\n              { text: \"February\", value: \"02\" },\n              { text: \"March\", value: \"03\" },\n              { text: \"April\", value: \"04\" },\n              { text: \"May\", value: \"05\" },\n              { text: \"June\", value: \"06\" },\n              { text: \"July\", value: \"07\" },\n              { text: \"August\", value: \"08\" },\n              { text: \"September\", value: \"09\" },\n              { text: \"October\", value: \"10\" },\n              { text: \"November\", value: \"11\" },\n              { text: \"December\", value: \"12\" },\n            ],\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n          year: -1,\n          month: -1,\n        }}\n        print_url=\"students/monthly_attendance\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\StudentsAttendanceReportDay.js",["1706","1707","1708","1709"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport AttendanceListDay from \"./AttendanceListDay\";\nexport default function StudentsAttendanceReportDay({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n  return (\n    <div>\n      <Index\n        title=\"Student Attendance (Day)\"\n        list_url=\"/students/student_attendance\"\n        indexed={false}\n        list_head={[\n          {\n            title: \"Roll\",\n            identifier: \"role\",\n          },\n          {\n            title: \"ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Name\",\n            identifier: \"student_name\",\n          },\n          {\n            title: \"Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Attendance\",\n            identifier: \"attendance_status\",\n          },\n          {\n            title: \"Access Time\",\n            identifier: \"access_time\",\n          },\n        ]}\n        CustomListComponent={AttendanceListDay}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        query_title=\"Query Student Attendance\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n          date: \"\",\n        }}\n        print_url=\"students/attendance\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentsPhonebook.js",["1710","1711","1712","1713"],"import Index from \"components/crud/Index\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nimport React, { useContext, useState } from \"react\";\r\n\r\nexport default function StudentsPhonebook({ permission }) {\r\n  const user_role = localStorage.getItem(\"role\");\r\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  const [selected_class, setSelectedClass] = useState(\"\");\r\n  const [selected_session, setSelectedSession] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Index\r\n        title=\"Student Phonebook\"\r\n        list_url=\"/students/student_assignment\"\r\n        def_url_param=\"phonebook=true\"\r\n        indexed={false}\r\n        list_head={[\r\n          {\r\n            title: \"Roll\",\r\n            identifier: \"role\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            identifier: \"student_name\",\r\n          },\r\n          {\r\n            title: \"Mother\",\r\n            identifier: \"mother_name\",\r\n          },\r\n          {\r\n            title: \"Father\",\r\n            identifier: \"father_name\",\r\n          },\r\n          {\r\n            title: \"Primary Phone\",\r\n            identifier: \"primary_phone\",\r\n          },\r\n          {\r\n            title: \"Secondary Phone\",\r\n            identifier: \"secondary_phone\",\r\n          },\r\n        ]}\r\n        list_active={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.view) != -1\r\n        }\r\n        query_title=\"Query Student List\"\r\n        query_list={[\r\n          {\r\n            placeholder: \"Session\",\r\n            type: \"select\",\r\n            name: \"session_id\",\r\n            options: session_list,\r\n            setState: setSelectedSession,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Class\",\r\n            type: \"select\",\r\n            name: \"class_id\",\r\n            options: class_list,\r\n            setState: setSelectedClass,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Department\",\r\n            type: \"select\",\r\n            name: \"department_id\",\r\n            options: department_list.filter(\r\n              (element) =>\r\n                element.class_id == selected_class &&\r\n                element.session_id == selected_session\r\n            ),\r\n            required: false,\r\n          },\r\n        ]}\r\n        query_data={{\r\n          class_id: -1,\r\n          session_id: -1,\r\n          department_id: -1,\r\n        }}\r\n        print_url=\"students/phonebook\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\documents\\StudentsAdmitCard.js",["1714","1715","1716","1717","1718","1719"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport Api from \"services/API/Api\";\n\nexport default function StudentAdmitCard() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Api({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.data.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n  return (\n    <div>\n      <Index\n        list_active={false}\n        query_title=\"Query ID Card\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n        print_url=\"admit\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\PaymentReceiptList.js",["1720","1721","1722","1723","1724","1725","1726"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function PaymentReceiptList(props) {\n  const {\n    setOpenDelete,\n    setDeleteInfo,\n    list,\n    list_head,\n    remove = false,\n    loading,\n    indexed = true,\n  } = props;\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n          <th>Receipt</th>\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? <th scope=\"row\">{index + 1}</th> : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {element[item.identifier]}\n                </th>\n              ))}\n\n              {console.log(element.id)}\n              {index == 0 || list[index - 1].id != element.id ? (\n                <td rowSpan={list.filter((val) => val.id == element.id).length}>\n                  <Button\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      window.open(\n                        \"/print/payments/receipt?receipt_id=\" +\n                          element.id +\n                          \"&student_id=\" +\n                          element.student_identifier,\n                        \"Print Receipt\",\n                        \"height=600,width=800\"\n                      );\n                      return false;\n                    }}\n                  >\n                    Receipt No: {element.id} <i className=\"fas fa-directions\" />\n                  </Button>\n                </td>\n              ) : null}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\TabulationList.js",["1727","1728","1729","1730","1731","1732","1733"],"import React, { useState } from \"react\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport { Call } from \"services/API/Call\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nexport default function TabulationList(props) {\r\n  const { list = [], list_head, loading, indexed = true, exam_id } = props;\r\n  const [open, setopen] = useState(false);\r\n  const [data, setdata] = useState({});\r\n  const [student_list, setStudentList] = useState([]);\r\n  const [subject_cols, setSubjectCols] = useState([]);\r\n  const groupBy = (items, key) =>\r\n    items.reduce((result, item) => {\r\n      item[\"marks\"] =\r\n        item[\"marks\"] != null && typeof item[\"marks\"] == \"string\"\r\n          ? JSON.parse(item[\"marks\"])\r\n          : [];\r\n      return {\r\n        ...result,\r\n        [item[key]]: [...(result[item[key]] || []), item],\r\n      };\r\n    }, {});\r\n  const sortByRoll = (list) => {\r\n    let new_list = {};\r\n\r\n    Object.values(list).map(\r\n      (el) => (new_list[el[0].role + el[0].student_identifier] = el)\r\n    );\r\n    return new_list;\r\n  };\r\n  React.useEffect(() => {\r\n    if (exam_id != null)\r\n      Call({\r\n        method: \"get\",\r\n        url: \"exams/mark_structure?exam=1&exam_id=\" + exam_id,\r\n      })\r\n        .then((res) => {\r\n          let new_list = groupBy(list, \"student_identifier\");\r\n          new_list = sortByRoll(new_list);\r\n          setStudentList(new_list);\r\n          setSubjectCols(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n  }, [exam_id, list]);\r\n  return (\r\n    <>\r\n      <Table className=\"align-items-center table-flush\" responsive>\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th rowSpan=\"3\">Roll</th>\r\n            <th rowSpan=\"3\">Student Name</th>\r\n          </tr>\r\n          <tr>\r\n            {subject_cols.map((el, index) => (\r\n              <th\r\n                colSpan={\r\n                  el.structure != null ? JSON.parse(el.structure).length : 1\r\n                }\r\n                style={{ textAlign: \"center\" }}\r\n                key={index}\r\n              >\r\n                {el.subject_name}\r\n              </th>\r\n            ))}\r\n            <th rowSpan=\"2\">Total</th>\r\n          </tr>\r\n          <tr>\r\n            {subject_cols.map((el, idx) =>\r\n              el.structure != null ? (\r\n                JSON.parse(el.structure).map((element, index) => (\r\n                  <th\r\n                    style={{ textAlign: \"center\", fontSize: \"7px\" }}\r\n                    key={uuid()}\r\n                  >\r\n                    {element.mark_name}\r\n                  </th>\r\n                ))\r\n              ) : (\r\n                <th key={uuid()}> </th>\r\n              )\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\r\n                <Spinner color=\"primary\" />\r\n              </td>\r\n            </tr>\r\n          ) : Object.values(student_list).length > 0 ? (\r\n            Object.values(student_list).map((element, index) => {\r\n              return (\r\n                <TableRow key={index} info={element} subjects={subject_cols} />\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\r\n                Found Nothing\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\ListTable.js",["1734"],"import React from \"react\";\nimport Table from \"reactstrap/lib/Table\";\n\nexport default function ListTable(props) {\n  const { head, val, data, indexed } = props;\n  const { data_color, head_color, border_color } = props.colors;\n  const { data_size, head_size } = props.size;\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            {indexed ? (\n              <th\n                scope=\"col\"\n                style={{\n                  fontSize: head_size + \"px\",\n                  color: head_color,\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                #\n              </th>\n            ) : null}\n\n            {head != undefined\n              ? head.map((e, idx) => (\n                  <th\n                    scope=\"col\"\n                    style={{\n                      fontSize: head_size + \"px\",\n                      color: head_color,\n                      borderTop: `1px solid ${border_color}`,\n                    }}\n                    key={idx}\n                  >\n                    {e}\n                  </th>\n                ))\n              : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0\n            ? data.map((e, idx) => (\n                <tr key={idx}>\n                  {indexed ? (\n                    <td\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                      }}\n                    >\n                      {idx + 1}\n                    </td>\n                  ) : null}\n\n                  {val.map((el, index) => (\n                    <td\n                      key={index}\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                        whiteSpace: \"pre\",\n                      }}\n                    >\n                      {e[el]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\crud\\ValidateInput.js",[],"J:\\Web\\school_argon\\src\\components\\controls\\InputField.js",[],"J:\\Web\\school_argon\\src\\components\\crud\\Query.js",["1735","1736","1737"],"/* eslint-disable eqeqeq */\nimport InputField from \"components/controls/InputField\";\nimport { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport { Form } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { ValidateInput } from \"./ValidateInput\";\n\nexport default function Query(props) {\n  const {\n    setquery,\n    query_list,\n    querying,\n    initial_values,\n    update,\n    setUpdate,\n    setQueryTags,\n  } = props;\n  const [calling, setCalling] = useState(false);\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(query_list).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      let query_to_set = \"?\";\n      let query_tag_to_set = [];\n      query_list.map((element, index) => {\n        if (values[element.name] != -1 && values[element.name] != \"\") {\n          query_to_set += element.name + \"=\" + values[element.name] + \"&\";\n          let value =\n            element.type == \"select\" &&\n            values[element.name] != -1 &&\n            element.options.length > 0\n              ? element.options.filter(\n                  (option) => option.value == values[element.name]\n                )[0][\"text\"]\n              : values[element.name];\n          let id =\n            element.type == \"select\" &&\n            values[element.name] != -1 &&\n            element.options.length > 0\n              ? element.options.filter(\n                  (option) => option.value == values[element.name]\n                )[0][\"value\"]\n              : values[element.name];\n          query_tag_to_set = [\n            ...query_tag_to_set,\n            { title: element.placeholder, value, id },\n          ];\n        }\n      });\n      setquery(query_to_set);\n      setQueryTags(query_tag_to_set);\n      setUpdate(!update);\n    } else setCalling(false);\n  };\n  return (\n    <>\n      <Form role=\"form\" onSubmit={handleSubmit}>\n        {query_list.length > 0\n          ? query_list.map((element, index) => (\n              <InputField\n                key={index}\n                type={element.type}\n                name={element.name}\n                placeholder={element.placeholder}\n                options={element.options}\n                value={values[element.name]}\n                error={errors[element.name]}\n                handleChange={handleInputChange}\n                setState={element.setState}\n                disabled={element.disabled ? element.disabled : querying}\n              />\n            ))\n          : null}\n        <div className=\"text-center\" style={{ clear: \"left\" }}>\n          <Button\n            className=\"my-4\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={querying}\n          >\n            {querying ? (\n              <Spinner animation=\"border\" variant=\"dark\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </div>\n      </Form>\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\crud\\List.js",["1738"],"import React from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function List(props) {\n  const {\n    setOpenEdit,\n    setOpenDelete,\n    setDeleteInfo,\n    setEditInfo,\n    list,\n    list_head,\n    edit = false,\n    remove = false,\n    loading,\n    indexed = true,\n  } = props;\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n          {remove ? <th scope=\"col\">Delete</th> : null}\n          {edit ? <th scope=\"col\">Edit</th> : null}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.type != \"image\" ? (\n                    element[item.identifier]\n                  ) : (\n                    <img\n                      src={\n                        process.env.REACT_APP_IMAGE_PATH +\n                        \"/\" +\n                        element[item.identifier]\n                      }\n                      alt=\"Gallery IMG\"\n                      style={{ width: \"80px\", objectFit: \"cover\" }}\n                    />\n                  )}\n                </th>\n              ))}\n\n              <DeleteButton\n                remove={remove}\n                id={element.id}\n                setOpenDelete={setOpenDelete}\n                setDeleteInfo={setDeleteInfo}\n              />\n              <EditButton\n                edit={edit}\n                element={element}\n                setOpenEdit={setOpenEdit}\n                setEditInfo={setEditInfo}\n              />\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\n  return remove ? (\n    <td>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          setOpenDelete(true);\n          setDeleteInfo(id);\n        }}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </td>\n  ) : null;\n}\n\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\n  const change = () => {\n    setEditInfo(element);\n  };\n  return edit ? (\n    <td>\n      <Button color=\"primary\" onClick={change}>\n        <i className=\"fas fa-pencil-alt\" />\n      </Button>\n    </td>\n  ) : null;\n}\n","J:\\Web\\school_argon\\src\\components\\crud\\Delete.js",[],"J:\\Web\\school_argon\\src\\components\\crud\\Edit.js",["1739","1740","1741","1742","1743","1744"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"../controls/InputField\";\nimport { ValidateInput } from \"./ValidateInput\";\n\nexport default function Edit(props) {\n  const {\n    url,\n    open,\n    setOpenEdit,\n    edit_values,\n    update,\n    setUpdate,\n    setEditInfo,\n    edit_data,\n    modal_size,\n    file = false,\n  } = props;\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const id = edit_values.id;\n  const { values, handleInputChange, errors, setErrors } = useForm(edit_values);\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(edit_data).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      return Object.values(temp).every((x) => x === false);\n  };\n\n  const alert_message_time = 2500;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setCalling(true);\n    if (validate()) {\n      let request = {};\n      if (file) {\n        let data = new FormData();\n        let i = 0;\n        edit_data.map((el) => {\n          console.log(el.name, values[el.name]);\n          if (\n            values[el.name] != null &&\n            typeof values[el.name] == \"object\" &&\n            values[el.name].length > 0 &&\n            values[el.name][0].type != undefined\n          ) {\n            Array.from(values[el.name]).map((e) => data.append(el.name, e));\n            i++;\n          } else {\n            data.append(el.name, values[el.name]);\n          }\n        });\n        data.append(\"_method\", \"put\");\n        request = {\n          method: \"post\",\n          url: url + \"/\" + id,\n          data: data,\n          headers: {\n            \"Content-Type\": i > 0 ? \"multipart/form-data\" : \"application/json\",\n          },\n        };\n      } else {\n        let data = {};\n        Object.values(edit_data).map((el) => (data[el.name] = values[el.name]));\n        request = {\n          method: \"put\",\n          url: url + \"/\" + id,\n          data: data,\n        };\n      }\n      Call(request)\n        .then((res) => {\n          console.log(res);\n          setUpdate(!update);\n          setSuccessMessage(res.message);\n\n          setCalling(false);\n          setTimeout(() => {\n            if (open) setSuccessMessage(\"\");\n          }, alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setCalling(false);\n          setTimeout(() => {\n            if (open) setFailMessage(\"\");\n          }, alert_message_time);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size={modal_size}\n        isOpen={open}\n        toggle={() => {\n          if (open) setEditInfo({});\n          setOpenEdit(false);\n        }}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Edit\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => {\n              if (open) setEditInfo({});\n              setOpenEdit(false);\n            }}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\"></CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                {edit_data.map((element, index) => {\n                  return element.customInput == undefined ? (\n                    <InputField\n                      key={index}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      multiple={\n                        element.multiple != null &&\n                        element.multiple != undefined\n                          ? true\n                          : false\n                      }\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  ) : (\n                    <element.customInput\n                      key={index}\n                      title={element.title}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      children={element.children}\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  );\n                })}\n\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\students\\attendance\\StudentsAttendanceTable.js",["1745","1746","1747","1748","1749","1750","1751","1752","1753"],"import React, { useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"./style.css\";\nimport uuid from \"react-uuid\";\nimport Api from \"services/API/Api\";\nexport default function StudentsAttendanceTable(props) {\n  const { list, loading, top, indexed = true, year, month } = props;\n  const [days, setDays] = useState([]);\n  const [weekdays, setWeekDays] = useState(0);\n  const [week_day_active, setWeekdayActive] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    month = month < 10 ? \"0\" + month : month;\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  function daysInMonth(iMonth, iYear) {\n    return 32 - new Date(iYear, iMonth, 32).getDate();\n  }\n  function isWeekday(year, month, day) {\n    var day = new Date(year, month, day).getDay();\n\n    return week_day_active.indexOf(day) == -1;\n  }\n\n  function getWeekdaysInMonth(month, year) {\n    var days = daysInMonth(month, year);\n    var weekdays = 0;\n    for (var i = 0; i < days; i++) {\n      if (isWeekday(year, month, i + 1)) weekdays++;\n    }\n    return days - weekdays;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n    Api({ method: \"get\", url: \"settings/weekdays?attendance=true\" })\n      .then((res) => {\n        setWeekdayActive(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [list]);\n  React.useEffect(() => {\n    setWeekDays(getWeekdaysInMonth(month, year));\n  }, [week_day_active]);\n  return (\n    <Table\n      className=\"align-items-center table-light table-flush\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\" rowSpan=\"2\" style={{ width: \"75px\" }}>\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Students\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th key={uuid()} rowSpan=\"2\">\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n\n              <small>\n                Present:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) =>\n                    el.includes(\"Present\")\n                  ).length\n                }\n              </small>\n              <br />\n              <small>\n                Late:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) => el.includes(\"Late\"))\n                    .length\n                }\n              </small>\n              <br />\n              <small>\n                Absent:{\" \"}\n                {days.length - Object.keys(list[item]).length - weekdays}\n              </small>\n              <br />\n              <small>Weekdays: {weekdays}</small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr>\n              <td style={{ width: \"75px\" }}>{item}</td>\n              {top.map((element, index) => (\n                <td style={{ whiteSpace: \"pre\" }}>\n                  <small\n                    className=\"text-muted\"\n                    style={{ fontSize: \"8px\", lineHeight: \"0.1\" }}\n                  >\n                    {item}\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Present\") ? (\n                    <>\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Present\", \"\")}\n                      </small>{\" \"}\n                    </>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Late\") ? (\n                    <>\n                      Late{\" \"}\n                      <i\n                        className=\"text-warning fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Late\", \"\")}\n                      </small>{\" \"}\n                    </>\n                  ) : (\n                    <>\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\employee_attendance\\EmployeeAttendanceTable.js",["1754","1755","1756","1757","1758","1759","1760","1761","1762"],"J:\\Web\\school_argon\\src\\components\\teachers\\students\\manual_attendance\\ManualAttendanceModel.js",[],"J:\\Web\\school_argon\\src\\components\\print\\payments\\DueTable.js",["1763"],"import React from \"react\";\nimport Table from \"reactstrap/lib/Table\";\n\nexport default function DueTable(props) {\n  const { head, val, data, indexed } = props;\n  const { data_color, head_color, border_color } = props.colors;\n  const { data_size, head_size } = props.size;\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            {indexed ? (\n              <th\n                scope=\"col\"\n                style={{\n                  fontSize: head_size + \"px\",\n                  color: head_color,\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                #\n              </th>\n            ) : null}\n\n            {head != undefined\n              ? head.map((e, idx) => (\n                  <th\n                    scope=\"col\"\n                    style={{\n                      fontSize: head_size + \"px\",\n                      color: head_color,\n                      borderTop: `1px solid ${border_color}`,\n                    }}\n                    key={idx}\n                  >\n                    {e}\n                  </th>\n                ))\n              : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0\n            ? data.map((e, idx) => (\n                <tr key={idx}>\n                  {indexed ? (\n                    <td\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                      }}\n                    >\n                      {idx + 1}\n                    </td>\n                  ) : null}\n\n                  {val.map((el, index) => (\n                    <td\n                      key={index}\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                        whiteSpace: \"pre\",\n                      }}\n                    >\n                      {e[el]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            : null}\n          <tr>\n            <th\n              colSpan=\"3\"\n              style={{\n                fontSize: data_size + \"px\",\n                color: data_color,\n                borderTop: `1px solid ${border_color}`,\n                textAlign: \"right\",\n              }}\n            >\n              {\" \"}\n              Total\n            </th>\n            <th>\n              {data.reduce(\n                (cb, val) => (cb = parseInt(cb) + parseInt(val.fees)),\n                0\n              )}\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\accounts\\ListTable.js",["1764"],"import React from \"react\";\nimport Table from \"reactstrap/lib/Table\";\n\nexport default function ListTable(props) {\n  const { head, val, data, indexed } = props;\n  const { data_color, head_color, border_color } = props.colors;\n  const { data_size, head_size } = props.size;\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            {indexed ? (\n              <th\n                scope=\"col\"\n                style={{\n                  fontSize: head_size + \"px\",\n                  color: head_color,\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                #\n              </th>\n            ) : null}\n\n            {head != undefined\n              ? head.map((e) => (\n                  <th\n                    scope=\"col\"\n                    style={{\n                      fontSize: head_size + \"px\",\n                      color: head_color,\n                      borderTop: `1px solid ${border_color}`,\n                    }}\n                  >\n                    {e}\n                  </th>\n                ))\n              : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0 ? (\n            data.map((e, idx) => (\n              <tr>\n                {indexed ? (\n                  <td\n                    style={{\n                      fontSize: data_size + \"px\",\n                      color: data_color,\n                      borderTop: `1px solid ${border_color}`,\n                    }}\n                  >\n                    {idx + 1}\n                  </td>\n                ) : null}\n\n                {val.map((el) => (\n                  <td\n                    style={{\n                      fontSize: data_size + \"px\",\n                      color: data_color,\n                      borderTop: `1px solid ${border_color}`,\n                      whiteSpace: \"pre\",\n                    }}\n                  >\n                    {e[el]}\n                  </td>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td\n                colSpan={val.length + 1}\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                }}\n                className=\"text-center\"\n              >\n                Found Nothing!\n              </td>\n            </tr>\n          )}\n          {data.length > 0 ? (\n            <tr>\n              <td\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                  textAlign: \"right\",\n                }}\n                colSpan=\"3\"\n              >\n                Total Credit\n              </td>\n              <td\n                colSpan=\"2\"\n                style={{\n                  fontSize: data_size + \"px\",\n                  color: data_color,\n                  borderTop: `1px solid ${border_color}`,\n                  whiteSpace: \"pre\",\n                  textAlign: \"left\",\n                }}\n              >\n                {data.reduce(\n                  (cb, val) => (cb = parseInt(cb) + parseInt(val.amount)),\n                  0\n                )}\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\payments\\ListTable.js",["1765"],"import React from \"react\";\nimport Table from \"reactstrap/lib/Table\";\n\nexport default function ListTable(props) {\n  const { head, val, data, indexed } = props;\n  const { data_color, head_color, border_color } = props.colors;\n  const { data_size, head_size } = props.size;\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            {indexed ? (\n              <th\n                scope=\"col\"\n                style={{\n                  fontSize: head_size + \"px\",\n                  color: head_color,\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                #\n              </th>\n            ) : null}\n\n            {head != undefined\n              ? head.map((e) => (\n                  <th\n                    scope=\"col\"\n                    style={{\n                      fontSize: head_size + \"px\",\n                      color: head_color,\n                      borderTop: `1px solid ${border_color}`,\n                    }}\n                  >\n                    {e}\n                  </th>\n                ))\n              : null}\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0\n            ? data.map((e, idx) => (\n                <tr>\n                  {indexed ? (\n                    <td\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                      }}\n                    >\n                      {idx + 1}\n                    </td>\n                  ) : null}\n\n                  {val.map((el) => (\n                    <td\n                      style={{\n                        fontSize: data_size + \"px\",\n                        color: data_color,\n                        borderTop: `1px solid ${border_color}`,\n                        whiteSpace: \"pre\",\n                      }}\n                    >\n                      {e[el]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            : null}\n          <tr>\n            <th\n              colSpan={4}\n              style={{\n                fontSize: head_size + \"px\",\n                color: data_color,\n                borderTop: `1px solid ${border_color}`,\n                whiteSpace: \"pre\",\n                textAlign: \"right\",\n              }}\n            >\n              Total\n            </th>\n            <th\n              style={{\n                fontSize: head_size + \"px\",\n                color: data_color,\n                borderTop: `1px solid ${border_color}`,\n                whiteSpace: \"pre\",\n              }}\n            >\n              {data.reduce(\n                (cb, val) => (cb = parseInt(cb) + parseInt(val.payment_amount)),\n                0\n              )}\n            </th>\n            <th\n              style={{\n                fontSize: head_size + \"px\",\n                color: data_color,\n                borderTop: `1px solid ${border_color}`,\n                whiteSpace: \"pre\",\n              }}\n            >\n              {data.reduce(\n                (cb, val) => (cb = parseInt(cb) + parseInt(val.paid_amount)),\n                0\n              )}\n            </th>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\result\\ExamRow.js",["1766","1767","1768","1769","1770","1771","1772"],"J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkList.js",["1773"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport MarkAssignModal from \"./MarkAssignModal\";\n\nexport default function MarkList(props) {\n  const { list, list_head, loading, indexed = true, query_tags } = props;\n  const [open, setopen] = useState(false);\n  const [data, setdata] = useState({});\n  const [tags, settags] = useState({});\n\n  return (\n    <>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            {indexed ? <th scope=\"col\">#</th> : null}\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            <th>Assign Mark</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                {indexed ? (\n                  <th scope=\"row\" key={index}>\n                    {index + 1}\n                  </th>\n                ) : null}\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <th>\n                  <Button\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={() => {\n                      setdata({\n                        session_id: element.session_id,\n                        class_id: element.class_id,\n                        exam_id: element.exam_id,\n                        department_id: element.department_id,\n                        subject_id: element.subject_id,\n                      });\n                      settags([\n                        { title: \"Class\", value: element.class },\n                        { title: \"Department\", value: element.department },\n                        { title: \"Session\", value: element.session },\n                        { title: \"Exam\", value: element.exam },\n                        { title: \"Subject\", value: element.subject },\n                      ]);\n                      setopen(true);\n                    }}\n                  >\n                    Assign Marks\n                  </Button>\n                </th>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <MarkAssignModal open={open} setopen={setopen} data={data} tags={tags} />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\Books.js",["1774","1775","1776","1777","1778","1779"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Index from \"components/crud/Index\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport CustomBookList from \"./CustomBookList\";\nimport IssuedList from \"./IssuedList\";\n\nexport default function Books(props) {\n  const { update, loading, indexed = true, query_tags } = props;\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      console.log(query_tags);\n      let id = query_tags.filter(\n        (el) => el.title == \"Student ID\" || el.title == \"Student\"\n      )[0].value;\n      id = id.split(\" \");\n      id = id[0];\n      Call({ method: \"get\", url: \"students/student?student_id=\" + id })\n        .then((res) => {\n          if (res.length > 0) setStudentInfo(res[0]);\n          else setStudentInfo({});\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [query_tags, update]);\n  return (\n    <>\n      {Object.values(student_info).length > 0 ? (\n        <>\n          <div className=\"mb-3 ml-3\">\n            <p className=\"text-white\">User Info: </p>\n            <div className=\"d-flex space-between flex-wrap\">\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student Name: {student_info.student_name}\n              </Button>\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student ID: {student_info.student_identifier}\n              </Button>\n            </div>\n          </div>\n          {query_tags.length > 0 ? (\n            <>\n              <Index\n                title=\"Issued Books List\"\n                list_url={`/library/issue_books?book_issued_to_id=${student_info.id}`}\n                CustomListComponent={IssuedList}\n                list_head={[\n                  {\n                    title: \"Book\",\n                    identifier: \"book_name\",\n                  },\n                  {\n                    title: \"Issued Date\",\n                    identifier: \"book_issued_date\",\n                  },\n                  {\n                    title: \"To Return Date\",\n                    identifier: \"book_return_date\",\n                  },\n                  {\n                    title: \"Returned Date\",\n                    identifier: \"returned_at\",\n                  },\n                  {\n                    title: \"Status\",\n                    identifier: \"issue_status\",\n                  },\n                ]}\n                book_issuer_data={{\n                  book_issuer_type: \"student\",\n                  book_issued_to_id: student_info.student_id,\n                  book_issued_to_name: student_info.student_name,\n                }}\n              />\n              <Index\n                title=\"Books List\"\n                list_url=\"/library/books?all=true\"\n                CustomListComponent={CustomBookList}\n                list_head={[\n                  {\n                    title: \"Book\",\n                    identifier: \"book_name\",\n                  },\n                  {\n                    title: \"Category\",\n                    identifier: \"category_name\",\n                  },\n                  {\n                    title: \"Author\",\n                    identifier: \"author_name\",\n                  },\n                  {\n                    title: \"Shelf\",\n                    identifier: \"shelf_no\",\n                  },\n                  {\n                    title: \"Price\",\n                    identifier: \"price\",\n                  },\n                  {\n                    title: \"Stock\",\n                    identifier: \"stock\",\n                  },\n                ]}\n                book_issuer_data={{\n                  book_issuer_type: \"student\",\n                  book_issued_to_id: student_info.student_id,\n                  book_issued_to_name: student_info.student_name,\n                }}\n              />\n            </>\n          ) : (\n            <div className=\"w-100 text-center\">\n              <Spinner color=\"white\" />\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\PublishList.js",["1780","1781","1782","1783","1784"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport PublishModal from \"./PublishModal\";\n\nexport default function PublishList(props) {\n  const { list, list_head, loading, update, setupdate, query } = props;\n  const [open, setopen] = useState(false);\n  const [values, setvalues] = useState([]);\n  const [all_value, setAll] = useState([]);\n\n  const handleChange = (element) => {\n    const index = values.indexOf(element.id);\n    if (index != -1) {\n      let new_val = [...values];\n      new_val.splice(index, 1);\n      setvalues(new_val);\n    } else {\n      setvalues([...values, element.id]);\n    }\n  };\n  React.useEffect(() => {\n    setvalues([]);\n    let val = [];\n    if (list.length > 0) list.map((element) => val.push(element.id));\n    setAll(val);\n  }, [loading]);\n  return (\n    <>\n      {query.length > 0 ? (\n        <>\n          <Button\n            color=\"secondary\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              fontSize: \"12px\",\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open(\n                \"/print/results/result_card\" + query + \"&published=true\",\n                \"Print Receipt\",\n                \"height=600,width=800\"\n              );\n              return false;\n            }}\n          >\n            Print Published Result\n          </Button>\n          <Button\n            color=\"secondary\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              fontSize: \"12px\",\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              window.open(\n                \"/print/results/result_card\" + query + \"&unpublished=true\",\n                \"Print Receipt\",\n                \"height=600,width=800\"\n              );\n              return false;\n            }}\n          >\n            Print All Result\n          </Button>\n        </>\n      ) : null}\n\n      {list.length > 0 && values.length > 0 ? (\n        <Button\n          color=\"warning\"\n          style={{\n            maxWidth: \"200px\",\n            marginLeft: \"1.5rem\",\n            marginBottom: \"1.5rem\",\n            fontSize: \"12px\",\n          }}\n          onClick={() => {\n            setopen(true);\n          }}\n        >\n          Publish/Unpublish Result\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">\n              <InputField\n                type=\"checkbox\"\n                placeholder=\"\"\n                name=\"all\"\n                checked={all_value.sort() == values.sort()}\n                handleChange={() => {\n                  if (values == all_value) setvalues([]);\n                  else setvalues(all_value);\n                }}\n              />\n            </th>\n            <th scope=\"col\">#</th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <th>\n                  <InputField\n                    key={index}\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    name={index}\n                    checked={values.indexOf(element.id) != -1}\n                    handleChange={() => {\n                      handleChange(element);\n                    }}\n                  />\n                </th>\n                <th scope=\"row\">{index + 1}</th>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"normal\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {list.length > 0 ? (\n        <PublishModal\n          data={values}\n          setopen={setopen}\n          open={open}\n          url=\"/results/result_publishing\"\n          setupdate={setupdate}\n          update={update}\n        />\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\ResultExamInput.js",["1785","1786","1787","1788","1789","1790","1791","1792","1793"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from \"react\";\nimport { FormGroup, InputGroupText } from \"reactstrap\";\nimport Input from \"reactstrap/lib/Input\";\nimport InputGroup from \"reactstrap/lib/InputGroup\";\nimport InputGroupAddon from \"reactstrap/lib/InputGroupAddon\";\n\nexport default function ResultExamInput(props) {\n  const {\n    name,\n    placeholder,\n    handleChange,\n    invalid_msg = \"\",\n    valid_msg = \"\",\n    options = [],\n    value = \"[]\",\n    error,\n  } = props;\n  const [checked_value, setCheckedValue] = useState([]);\n  const check = (id, percentage = 100, percentile = false) => {\n    if (percentile) {\n      let vals = [...checked_value];\n      vals.map((val, index) => {\n        if (val.exam_id == id) {\n          val[\"exam_percentage\"] = percentage;\n        }\n      });\n      setCheckedValue(vals);\n    } else {\n      const index = checked_value.filter((val) => val.exam_id == id);\n      if (index.length > 0) {\n        let new_val = checked_value.filter((val) => val.exam_id != id);\n        setCheckedValue(new_val);\n      } else\n        setCheckedValue([\n          ...checked_value,\n          { exam_id: id, exam_percentage: percentage },\n        ]);\n    }\n  };\n\n  React.useEffect(() => {\n    console.log(checked_value);\n    let event = {\n      target: { value: checked_value, name: name },\n    };\n    handleChange(event);\n  }, [checked_value]);\n\n  React.useEffect(() => {\n    setCheckedValue(value);\n  }, []);\n\n  return (\n    <>\n      <div className=\"text-dark\">{placeholder}:</div>\n      {options.map((element, index) => (\n        <div\n          className=\"bg-dark mb-3 p-3\"\n          style={{ borderRadius: 10 }}\n          key={index}\n        >\n          <div>\n            <div\n              className=\"custom-control custom-checkbox mb-3 mr-3\"\n              key={index}\n            >\n              <input\n                className=\"custom-control-input\"\n                id={index}\n                type=\"checkbox\"\n                onChange={() => check(element.id, 100)}\n                checked={\n                  value.filter((val) => val.exam_id == element.id).length > 0\n                }\n              />\n              <label\n                className=\"custom-control-label text-white\"\n                htmlFor={index}\n              >\n                {element.name}\n              </label>\n            </div>\n          </div>\n          <div>\n            <FormGroup>\n              <InputGroup className=\"mb-4\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i\n                      className=\" fas fa-percent\"\n                      style={{ fontSize: \"9px\" }}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"number\"\n                  name=\"percentage\"\n                  placeholder=\"Percentage (%)\"\n                  onChange={(e) => {\n                    check(element.id, e.target.value, true);\n                  }}\n                  disabled={\n                    value.filter((val) => val.exam_id == element.id).length == 0\n                  }\n                  value={\n                    value.filter((val) => val.exam_id == element.id).length > 0\n                      ? value.filter((val) => val.exam_id == element.id)[0][\n                          \"exam_percentage\"\n                        ]\n                      : \"\"\n                  }\n                  max={100}\n                  min={0}\n                />\n              </InputGroup>\n            </FormGroup>\n          </div>\n        </div>\n      ))}\n\n      <small className=\"text-danger\">{error ? invalid_msg : valid_msg}</small>\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\StudentPaymentList.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePaymentList.js",["1794","1795","1796"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport DuePaymentModal from \"./DuePaymentModal\";\n\nexport default function DuePaymentList(props) {\n  const {\n    list,\n    list_head,\n    loading,\n    update,\n    setupdate,\n    remove,\n    edit,\n    setOpenEdit,\n    setOpenDelete,\n    setDeleteInfo,\n    setEditInfo,\n  } = props;\n  const [open, setopen] = useState(false);\n  const [values, setvalues] = useState([]);\n\n  const [query_data, setQueryData] = useState({});\n  const handleChange = (element) => {\n    if (values.filter((val) => val.id == element.id).length > 0) {\n      const new_val = values.filter((val) => val.id != element.id);\n      setvalues(new_val);\n    } else {\n      setvalues([\n        ...values,\n        {\n          id: element.id,\n          payment_id: element.payment_id,\n          payment_category: \"Due: \" + element.payment_category,\n          payment_info: element.payment_info,\n          payment_amount: element.amount,\n          paid_amount: \"\",\n        },\n      ]);\n    }\n    setQueryData({\n      student_identifier: element.student_identifier,\n      student_id: element.student_id,\n      student_name: element.student_name,\n      session_id: element.session_id,\n      session: element.session,\n    });\n  };\n  React.useEffect(() => {\n    setQueryData({});\n    setvalues([]);\n  }, [loading]);\n  return (\n    <>\n      {list.length > 0 && values.length > 0 ? (\n        <Button\n          color=\"warning\"\n          style={{\n            maxWidth: \"200px\",\n            marginLeft: \"1.5rem\",\n            marginBottom: \"1.5rem\",\n          }}\n          onClick={() => {\n            setopen(true);\n            console.log(values);\n          }}\n        >\n          Pay Due\n        </Button>\n      ) : null}\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">#</th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            {remove ? <th scope=\"col\">Delete</th> : null}\n            {edit ? <th scope=\"col\">Edit</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <th>\n                  <InputField\n                    key={index}\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    name={index}\n                    checked={\n                      values.filter((val) => val.id == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(element);\n                    }}\n                  />\n                </th>\n                <th scope=\"row\">{index + 1}</th>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"normal\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <DeleteButton\n                  remove={remove}\n                  id={element.id}\n                  setOpenDelete={setOpenDelete}\n                  setDeleteInfo={setDeleteInfo}\n                />\n                <EditButton\n                  edit={edit}\n                  element={element}\n                  setOpenEdit={setOpenEdit}\n                  setEditInfo={setEditInfo}\n                />\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {list.length > 0 ? (\n        <DuePaymentModal\n          data={values}\n          setPaymentModal={setopen}\n          open={open}\n          query_data={query_data}\n          url=\"/payments/student_due/pay\"\n          setupdate={setupdate}\n          update={update}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\n  return remove ? (\n    <td>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          setOpenDelete(true);\n          setDeleteInfo(id);\n        }}\n      >\n        <i className=\"fas fa-trash\" />\n      </Button>\n    </td>\n  ) : null;\n}\n\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\n  const change = () => {\n    setEditInfo(element);\n  };\n  return edit ? (\n    <td>\n      <Button color=\"primary\" onClick={change}>\n        <i className=\"fas fa-pencil-alt\" />\n      </Button>\n    </td>\n  ) : null;\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\TabulationList.js",["1797","1798","1799","1800","1801","1802","1803","1804"],"import React, { useState } from \"react\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\n\r\nimport uuid from \"react-uuid\";\r\nimport { Call } from \"services/API/Call\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nexport default function TabulationList(props) {\r\n  const { list = [], list_head, loading, indexed = true, query_tags } = props;\r\n  const [open, setopen] = useState(false);\r\n  const [data, setdata] = useState({});\r\n  const [student_list, setStudentList] = useState([]);\r\n  const [subject_cols, setSubjectCols] = useState([]);\r\n  const groupBy = (items, key) =>\r\n    items.reduce((result, item) => {\r\n      item[\"marks\"] =\r\n        item[\"marks\"] != null && typeof item[\"marks\"] == \"string\"\r\n          ? JSON.parse(item[\"marks\"])\r\n          : [];\r\n      return {\r\n        ...result,\r\n        [item[key]]: [...(result[item[key]] || []), item],\r\n      };\r\n    }, {});\r\n  const sortByRoll = (list) => {\r\n    let new_list = {};\r\n\r\n    Object.values(list).map(\r\n      (el) => (new_list[el[0].role + el[0].student_identifier] = el)\r\n    );\r\n    return new_list;\r\n  };\r\n  React.useEffect(() => {\r\n    let exam_id =\r\n      query_tags.length > 0\r\n        ? query_tags.filter((el) => el.title == \"Exams\")[0][\"id\"]\r\n        : null;\r\n    if (exam_id != null)\r\n      Call({\r\n        method: \"get\",\r\n        url: \"exams/mark_structure?exam=1&exam_id=\" + exam_id,\r\n      })\r\n        .then((res) => {\r\n          let new_list = groupBy(list, \"student_identifier\");\r\n          new_list = sortByRoll(new_list);\r\n          setStudentList(new_list);\r\n          setSubjectCols(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n  }, [query_tags, list]);\r\n  return (\r\n    <>\r\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th rowSpan=\"3\">Roll</th>\r\n            <th rowSpan=\"3\">Student Name</th>\r\n          </tr>\r\n          <tr>\r\n            {subject_cols.map((el, index) => (\r\n              <th\r\n                colSpan={\r\n                  el.structure != null ? JSON.parse(el.structure).length : 1\r\n                }\r\n                style={{ textAlign: \"center\" }}\r\n                key={index}\r\n              >\r\n                {el.subject_name}\r\n              </th>\r\n            ))}\r\n            <th rowSpan=\"2\">Total</th>\r\n          </tr>\r\n          <tr>\r\n            {subject_cols.map((el, idx) =>\r\n              el.structure != null ? (\r\n                JSON.parse(el.structure).map((element, index) => (\r\n                  <th\r\n                    style={{ textAlign: \"center\", fontSize: \"7px\" }}\r\n                    key={uuid()}\r\n                  >\r\n                    {element.mark_name}\r\n                  </th>\r\n                ))\r\n              ) : (\r\n                <th key={uuid()}> </th>\r\n              )\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\r\n                <Spinner color=\"primary\" />\r\n              </td>\r\n            </tr>\r\n          ) : Object.values(student_list).length > 0 ? (\r\n            Object.values(student_list).map((element, index) => {\r\n              return (\r\n                <TableRow key={index} info={element} subjects={subject_cols} />\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={subject_cols.length + 4} className=\"text-center\">\r\n                Found Nothing\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\result\\TotalRow.js",["1805","1806","1807","1808","1809","1810"],"J:\\Web\\school_argon\\src\\components\\print\\students\\attendance_month\\ListTable.js",["1811","1812","1813","1814","1815","1816","1817"],"import React, { useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"../../style.css\";\nimport uuid from \"react-uuid\";\nimport Api from \"services/API/Api\";\nexport default function ListTable(props) {\n  const { list, loading, top, year, month, colors, size } = props;\n  const { head_color, data_color, small_color, border_color } = colors;\n  const { head_size, data_size, small_size } = size;\n  const [days, setDays] = useState([]);\n  const [weekdays, setWeekDays] = useState(0);\n  const [week_day_active, setWeekdayActive] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  function daysInMonth(iMonth, iYear) {\n    return 32 - new Date(iYear, iMonth, 32).getDate();\n  }\n  function isWeekday(year, month, day) {\n    var day = new Date(year, month, day).getDay();\n\n    return week_day_active.indexOf(day) == -1;\n  }\n\n  function getWeekdaysInMonth(month, year) {\n    var days = daysInMonth(month, year);\n    var weekdays = 0;\n    for (var i = 0; i < days; i++) {\n      if (isWeekday(year, month, i + 1)) weekdays++;\n    }\n    return days - weekdays;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n    Api({ method: \"get\", url: \"settings/weekdays?attendance=true\" })\n      .then((res) => {\n        setWeekdayActive(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [list]);\n  React.useEffect(() => {\n    setWeekDays(getWeekdaysInMonth(month, year));\n  }, [week_day_active]);\n  return (\n    <Table\n      className=\"align-items-center attendance\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead>\n        <tr>\n          <th\n            scope=\"col\"\n            rowSpan=\"2\"\n            style={{\n              width: \"75px\",\n              borderTop: `1px solid ${border_color}`,\n              borderBottom: `1px solid ${border_color}`,\n            }}\n          >\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Students\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th\n              key={uuid()}\n              rowSpan=\"2\"\n              style={{\n                color: head_color,\n                fontSize: head_size + \"px\",\n                borderTop: `1px solid ${border_color}`,\n                borderBottom: `1px solid ${border_color}`,\n                whiteSpace: \"pre\",\n              }}\n            >\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n              <small>\n                Present:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) =>\n                    el.includes(\"Present\")\n                  ).length\n                }\n              </small>\n              <br />\n              <small>\n                Late:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) => el.includes(\"Late\"))\n                    .length\n                }\n              </small>\n              <br />\n              <small>\n                Absent:{\" \"}\n                {days.length - Object.keys(list[item]).length - weekdays}\n              </small>\n              <br />\n              <small>Weekdays: {weekdays}</small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr key={index}>\n              <th\n                style={{\n                  width: \"75px\",\n                  color: head_color,\n                  fontSize: head_size + \"px\",\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                {item}\n              </th>\n              {top.map((element, index) => (\n                <td\n                  key={index}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderTop: `1px solid ${border_color}`,\n                  }}\n                >\n                  <small\n                    style={{\n                      fontSize: small_size + \"px\",\n                      lineHeight: \"0.1\",\n                      color: small_color,\n                    }}\n                  >\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </div>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Present\") ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small\n                        style={{\n                          color: small_color,\n                          fontSize: small_size + \"px\",\n                        }}\n                      >\n                        {list[element][item].replace(\"Present\", \"\")}\n                      </small>{\" \"}\n                    </div>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Late\") ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Late{\" \"}\n                      <i\n                        className=\"text-warning fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Late\", \"\")}\n                      </small>{\" \"}\n                    </div>\n                  ) : (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\employee\\attendance_month\\ListTable.js",["1818","1819","1820","1821","1822","1823","1824"],"import React, { useState } from \"react\";\nimport Table from \"reactstrap/lib/Table\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport \"../../style.css\";\nimport uuid from \"react-uuid\";\nimport Api from \"services/API/Api\";\nexport default function ListTable(props) {\n  const { list, loading, top, year, month, colors, size } = props;\n  const { head_color, data_color, small_color, border_color } = colors;\n  const { head_size, data_size, small_size } = size;\n  const [days, setDays] = useState([]);\n  const [weekdays, setWeekDays] = useState(0);\n  const [week_day_active, setWeekdayActive] = useState([]);\n  function getDaysInMonth(month, year) {\n    var date = new Date(year, month, 0);\n    let i = 1;\n    let date_length = date.getDate();\n    let _days = [];\n    while (i <= date_length) {\n      let day = i < 10 ? \"0\" + i : i;\n      _days.push(day + \"/\" + month + \"/\" + year);\n      i++;\n    }\n    return _days;\n  }\n  function daysInMonth(iMonth, iYear) {\n    return 32 - new Date(iYear, iMonth, 32).getDate();\n  }\n  function isWeekday(year, month, day) {\n    var day = new Date(year, month, day).getDay();\n\n    return week_day_active.indexOf(day) == -1;\n  }\n\n  function getWeekdaysInMonth(month, year) {\n    var days = daysInMonth(month, year);\n    var weekdays = 0;\n    for (var i = 0; i < days; i++) {\n      if (isWeekday(year, month, i + 1)) weekdays++;\n    }\n    return days - weekdays;\n  }\n  React.useEffect(() => {\n    setDays(getDaysInMonth(month, year));\n    Api({ method: \"get\", url: \"settings/weekdays?attendance=true\" })\n      .then((res) => {\n        setWeekdayActive(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [list]);\n  React.useEffect(() => {\n    setWeekDays(getWeekdaysInMonth(month, year));\n  }, [week_day_active]);\n  return (\n    <Table\n      className=\"align-items-center attendance\"\n      style={{ marginTop: \"1rem\" }}\n      responsive\n    >\n      <thead>\n        <tr>\n          <th\n            scope=\"col\"\n            rowSpan=\"2\"\n            style={{\n              width: \"75px\",\n              borderTop: `1px solid ${border_color}`,\n              borderBottom: `1px solid ${border_color}`,\n            }}\n          >\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>\n              Employees\n            </p>\n            <hr style={{ margin: 0 }} />\n            <p style={{ fontSize: \"9px\", color: \"black\", margin: 0 }}>Date</p>\n          </th>\n          {top.map((item, index) => (\n            <th\n              key={uuid()}\n              rowSpan=\"2\"\n              style={{\n                color: head_color,\n                fontSize: head_size + \"px\",\n                borderTop: `1px solid ${border_color}`,\n                borderBottom: `1px solid ${border_color}`,\n                whiteSpace: \"pre\",\n              }}\n            >\n              {item}\n              <br />\n              <small>Total Days: {days.length}</small>\n              <br />\n              <small>\n                Present:\n                {\n                  Object.values(list[item]).filter((el) =>\n                    el.includes(\"Present\")\n                  ).length\n                }\n              </small>\n              <br />\n              <small>\n                Late:{\" \"}\n                {\n                  Object.values(list[item]).filter((el) => el.includes(\"Late\"))\n                    .length\n                }\n              </small>\n              <br />\n              <small>\n                Absent:{\" \"}\n                {days.length - Object.keys(list[item]).length - weekdays}\n              </small>\n              <br />\n              <small>Weekdays: {weekdays}</small>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={top.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : (\n          days.map((item, index) => (\n            <tr key={index}>\n              <th\n                style={{\n                  width: \"75px\",\n                  color: head_color,\n                  fontSize: head_size + \"px\",\n                  borderTop: `1px solid ${border_color}`,\n                }}\n              >\n                {item}\n              </th>\n              {top.map((element, index) => (\n                <td\n                  key={index}\n                  style={{\n                    whiteSpace: \"pre\",\n                    borderTop: `1px solid ${border_color}`,\n                  }}\n                >\n                  <small\n                    style={{\n                      fontSize: small_size + \"px\",\n                      lineHeight: \"0.1\",\n                      color: small_color,\n                    }}\n                  >\n                    <br style={{ margin: 0 }} />\n                    {element}\n                  </small>\n                  <br />\n                  {list[element].length == 0 ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </div>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Present\") ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Present{\" \"}\n                      <i\n                        className=\"text-success fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small\n                        style={{\n                          color: small_color,\n                          fontSize: small_size + \"px\",\n                        }}\n                      >\n                        {list[element][item].replace(\"Present\", \"\")}\n                      </small>{\" \"}\n                    </div>\n                  ) : list[element][item] != undefined &&\n                    list[element][item].includes(\"Late\") ? (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Late{\" \"}\n                      <i\n                        className=\"text-warning fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                      <small className=\"text-muted\">\n                        {list[element][item].replace(\"Late\", \"\")}\n                      </small>{\" \"}\n                    </div>\n                  ) : (\n                    <div\n                      style={{ fontSize: data_size + \"px\", color: data_color }}\n                    >\n                      Absent{\" \"}\n                      <i\n                        className=\"text-danger fas fa-circle\"\n                        style={{ fontSize: \"8px\" }}\n                      />\n                    </div>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\AdCard.js",["1825"],"import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nexport default function AdCard(props) {\r\n\tconst { data, colors, size, exam_data } = props;\r\n\tconst { logo_size, head_size, data_size } = size;\r\n\tconst { head_color, data_color, border_color } = colors;\r\n\tconst th_style = {\r\n\t\tpadding: \"0.4rem\",\r\n\t\tcolor: head_color,\r\n\t\tfontSize: head_size + \"px\",\r\n\t\tborderTop: \"1px solid \" + border_color,\r\n\t};\r\n\tconst td_style = {\r\n\t\tpadding: \"0.4rem\",\r\n\t\tcolor: data_color,\r\n\t\tfontSize: data_size + \"px\",\r\n\t\tborderTop: \"1px solid \" + border_color,\r\n\t};\r\n\treturn (\r\n\t\t<div style={{ position: \"relative\" }}>\r\n\t\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t\t<b\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontSize: head_size + \"px\",\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tcolor: head_color,\r\n\t\t\t\t\t\tmargin: \"0.3rem\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdmit Card\r\n\t\t\t\t</b>\r\n\t\t\t</div>\r\n\t\t\t<Table style={{ maxWidth: \"65%\", margin: \"auto\" }}>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style={th_style}>Student ID</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.student_identifier}</td>\r\n\t\t\t\t\t\t<th style={th_style}>Student Name</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.student_name}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style={th_style}>Roll</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.role}</td>\r\n\t\t\t\t\t\t<th style={th_style}>Class</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.class}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style={th_style}>Department</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.department}</td>\r\n\t\t\t\t\t\t<th style={th_style}>Session</th>\r\n\t\t\t\t\t\t<td style={td_style}>{data.session}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr className=\"text-center\">\r\n\t\t\t\t\t\t<th colSpan=\"2\" style={th_style}>\r\n\t\t\t\t\t\t\tExam\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<td colSpan=\"2\" style={td_style}>\r\n\t\t\t\t\t\t\t{exam_data.exam_name}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"d-flex\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"65%\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\tmargin: \"2.5rem auto\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div style={{ ...th_style, borderTop: \"1px dotted black\" }}>\r\n\t\t\t\t\tExam Controller\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ ...th_style, borderTop: \"1px dotted black\" }}>\r\n\t\t\t\t\tOffice Executive\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\print\\docs\\admit\\SchoolInfo.js",["1826","1827"],"import React, { useState } from \"react\";\r\nimport { Call } from \"services/API/Call\";\r\nexport default function SchoolInfo(props) {\r\n\tconst [info, setInfo] = useState({});\r\n\tconst {\r\n\t\tlogo_dir,\r\n\t\tlogo_size,\r\n\t\tschool_name_size,\r\n\t\tother_size,\r\n\t\tschool_name_color,\r\n\t\tother_color,\r\n\t\tschool_name = false,\r\n\t\tother_info = false,\r\n\t\tlogo = false,\r\n\t\tline = false,\r\n\t\tinf,\r\n\t\tdata,\r\n\t} = props.val;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (inf == undefined)\r\n\t\t\tCall({ method: \"get\", url: \"settings/institute_info\" })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetInfo(res);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log(err));\r\n\t\telse {\r\n\t\t\tsetInfo(inf);\r\n\t\t}\r\n\t}, [inf]);\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{logo ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: \"0%\",\r\n\t\t\t\t\t\tmargin: \"1rem\",\r\n\t\t\t\t\t\t...logo_dir,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={process.env.REACT_APP_IMAGE_PATH + \"/\" + info.institute_logo}\r\n\t\t\t\t\t\talt=\"School Logo\"\r\n\t\t\t\t\t\tstyle={{ width: logo_size + \"px\", objectFit: \"cover\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"0%\",\r\n\t\t\t\t\tright: \"0%\",\r\n\t\t\t\t\tmargin: \"1rem\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={process.env.REACT_APP_IMAGE_PATH + \"/\" + data.student_image}\r\n\t\t\t\t\talt=\"Student Image\"\r\n\t\t\t\t\tstyle={{ width: logo_size + \"px\", objectFit: \"cover\" }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmaxWidth: \"450px\",\r\n\t\t\t\t\t\tmargin: \"auto\",\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{school_name ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: school_name_size + \"px\",\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: school_name_color,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tEDEN RESIDENTIAL SCHOOL & COLLEGE\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: school_name_size + \"px\",\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: school_name_color,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{info.institute_name}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{other_info ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: other_size + \"px\",\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: other_color,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAddress: {info.institute_address}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: other_size + \"px\",\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: other_color,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tContact Numbers: {info.institute_phonenumbers}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: other_size + \"px\",\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: other_color,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tInstitute Email: {info.institute_email}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{line ? <hr /> : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\documents\\StudentsIDCard.js",["1828","1829"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function StudentIDCard() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  return (\n    <div>\n      <Index\n        list_active={false}\n        query_title=\"Query ID Card\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n        }}\n        print_url=\"id\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentPaymentFees.js",["1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function StudentPaymentFees({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [payment_category_list, setPaymentCategoryList] = useState([]);\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(-1);\n  const [selected_session, setSelectedSession] = useState(-1);\n  const [selected_department, setSelectedDepartment] = useState(-1);\n  const [student_list, setStudentList] = useState([]);\n\n  const [class_id, setClass] = useState(-1);\n  const [session_id, setSession] = useState(-1);\n  const [department_id, setDepartment] = useState(-1);\n  const [students, setStudents] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  React.useEffect(() => {\n    if (class_id != -1 && session_id != -1 && department_id != -1)\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id +\n          \"&session_id=\" +\n          session_id,\n      })\n        .then((res) => setStudents(res))\n        .catch((err) => console.log(err));\n  }, [class_id, department_id, session_id]);\n\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/payment_category?use=true\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.category_name;\n        });\n        setPaymentCategoryList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const add_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: false,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: false,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      setState: setSelectedDepartment,\n      required: false,\n    },\n    {\n      placeholder: \"Students\",\n      type: \"select\",\n      name: \"student_id\",\n      options: student_list,\n      required: true,\n    },\n    {\n      placeholder: \"Payment Category\",\n      type: \"select\",\n      name: \"payment_category_id\",\n      options: payment_category_list,\n      required: true,\n    },\n    {\n      placeholder: \"Default Fees\",\n      type: \"text\",\n      name: \"student_default_fees\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student Payment Fees List\"\n        list_url=\"/students/assign_fees\"\n        query_title=\"Query Student Payment Fees\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setDepartment,\n            required: true,\n          },\n          {\n            placeholder: \"Students\",\n            type: \"select\",\n            name: \"student_id\",\n            options: students,\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Student ID\", identifier: \"student_identifier\" },\n          { title: \"Student Name\", identifier: \"student_name\" },\n          { title: \"Payment\", identifier: \"payment_category\" },\n          { title: \"Default Fees\", identifier: \"student_default_fees\" },\n        ]}\n        query_data={{ student_id: \"\" }}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={add_data}\n        add_initial_values={{ student_id: -1, class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\AssignClassStudent.js",["1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport StudentList from \"./class_assignment/StudentList\";\n\nexport default function AssignClassStudent({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const add_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) =>\n          element.class_id == selected_class &&\n          element.session_id == selected_session\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Student ID\",\n      type: \"text\",\n      name: \"student_id\",\n      required: true,\n    },\n    {\n      placeholder: \"Student Role\",\n      type: \"number\",\n      name: \"role\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Student List\"\n        list_url=\"/students/student_assignment\"\n        CustomListComponent={StudentList}\n        list_head={[\n          {\n            title: \"Roll\",\n            identifier: \"role\",\n          },\n          {\n            title: \"Session\",\n            identifier: \"session\",\n          },\n          {\n            title: \"Class\",\n            identifier: \"class\",\n          },\n          {\n            title: \"Department\",\n            identifier: \"department\",\n          },\n          {\n            title: \"Student ID\",\n            identifier: \"student_identifier\",\n          },\n          {\n            title: \"Student Name\",\n            identifier: \"student_name\",\n          },\n        ]}\n        indexed={false}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={add_data}\n        edit_data={[\n          {\n            placeholder: \"Student Role\",\n            type: \"number\",\n            name: \"role\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{\n          student_id: \"\",\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          role: \"\",\n        }}\n        query_title=\"Query Student List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSelectedSession,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setSelectedClass,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n            ),\n            required: false,\n          },\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          student_id: \"\",\n        }}\n        print_url=\"students/list\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\ExamCrud.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceListDay.js",["1862","1863","1864"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\n\nexport default function AttendanceList(props) {\n  const { query_tags, list, list_head, loading, indexed = true } = props;\n  const date =\n    query_tags.length > 0\n      ? query_tags.filter((element) => element.title == \"Date\")[0][\"value\"]\n      : \"\";\n  const [updated_list, setUpdatedList] = useState([]);\n  React.useEffect(() => {\n    if (list.length > 0) {\n      var merged = [];\n\n      list.forEach(function (item) {\n        var idx;\n        var found = merged.some(function (el, i) {\n          idx = el.student_id === item.student_id ? i : null;\n          return el.student_id === item.student_id;\n        });\n        if (!found) {\n          merged.push(item);\n        } else if (idx !== null) {\n          merged[idx][\"access_time\"] += \"\\n\" + item.access_time;\n        }\n      });\n      setUpdatedList(merged);\n    }\n  }, [list]);\n  return (\n    <Table className=\"align-items-center table-dark table-flush\" responsive>\n      <thead className=\"thead-dark\">\n        <tr>\n          {indexed ? <th scope=\"col\">#</th> : null}\n          {list_head.map((item, index) => (\n            <th key={uuid()}>{item.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {loading ? (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              <Spinner color=\"primary\" />\n            </td>\n          </tr>\n        ) : typeof list == \"object\" && list.length > 0 ? (\n          updated_list.map((element, index) => (\n            <tr key={uuid()}>\n              {indexed ? (\n                <th scope=\"row\" key={index}>\n                  {index + 1}\n                </th>\n              ) : null}\n              {list_head.map((item, index) => (\n                <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                  {item.identifier != \"date\" ? element[item.identifier] : date}\n                </th>\n              ))}\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={list_head.length + 3} className=\"text-center\">\n              Found Nothing\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\AttendanceListMonth.js",["1865","1866","1867"],"J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountsReport.js",["1868","1869","1870","1871","1872","1873"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function AccountsCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Entry Date\",\n      type: \"date\",\n      name: \"date\",\n      required: true,\n    },\n    {\n      placeholder: \"Account Type\",\n      type: \"select\",\n      name: \"balance_form\",\n\n      options: [\n        {\n          text: \"Cash\",\n          value: \"Cash\",\n        },\n        {\n          text: \"Bank\",\n          value: \"Bank\",\n        },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Entry Type\",\n      type: \"select\",\n      name: \"entry_type\",\n\n      options: [\n        {\n          text: \"Credit\",\n          value: \"Credit\",\n        },\n        {\n          text: \"Debit\",\n          value: \"Debit\",\n        },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Entry Category\",\n      type: \"text\",\n      name: \"entry_category\",\n      required: true,\n    },\n    {\n      placeholder: \"Entry Info\",\n      type: \"textarea\",\n      name: \"entry_info\",\n      required: false,\n    },\n    {\n      placeholder: \"Amount\",\n      type: \"number\",\n      name: \"amount\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Accounts Report\"\n        list_url=\"/accounts/account\"\n        edit_data={send_data}\n        list_head={[\n          {\n            title: \"Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Balance\",\n            identifier: \"balance_form\",\n          },\n          {\n            title: \"Type\",\n            identifier: \"entry_type\",\n          },\n          {\n            title: \"Category\",\n            identifier: \"entry_category\",\n          },\n          {\n            title: \"Info\",\n            identifier: \"entry_info\",\n          },\n          {\n            title: \"Amount\",\n            identifier: \"amount\",\n          },\n        ]}\n        query_title=\"Query Account Report\"\n        query_list={[\n          {\n            placeholder: \"From\",\n            type: \"date\",\n            name: \"from\",\n            required: true,\n          },\n          {\n            placeholder: \"To\",\n            type: \"date\",\n            name: \"to\",\n            required: true,\n          },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        query_data={{ from: \"\", to: \"\" }}\n        print_url=\"accounts/report\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountsCrud.js",["1874","1875","1876","1877"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function AccountsCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Entry Date\",\n      type: \"date\",\n      name: \"date\",\n      required: true,\n    },\n    {\n      placeholder: \"Account Type\",\n      type: \"select\",\n      name: \"balance_form\",\n\n      options: [\n        {\n          text: \"Cash\",\n          value: \"Cash\",\n        },\n        {\n          text: \"Bank\",\n          value: \"Bank\",\n        },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Entry Type\",\n      type: \"select\",\n      name: \"entry_type\",\n\n      options: [\n        {\n          text: \"Credit\",\n          value: \"Credit\",\n        },\n        {\n          text: \"Debit\",\n          value: \"Debit\",\n        },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Entry Category\",\n      type: \"text\",\n      name: \"entry_category\",\n      required: true,\n    },\n    {\n      placeholder: \"Entry Info\",\n      type: \"textarea\",\n      name: \"entry_info\",\n      required: false,\n    },\n    {\n      placeholder: \"Amount\",\n      type: \"number\",\n      name: \"amount\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Accounts Entries\"\n        list_url=\"/accounts/account\"\n        list_head={[\n          {\n            title: \"Entry Date\",\n            identifier: \"date\",\n          },\n          {\n            title: \"Account Type\",\n            identifier: \"balance_form\",\n          },\n          {\n            title: \"Entry Type\",\n            identifier: \"entry_type\",\n          },\n          {\n            title: \"Entry Category\",\n            identifier: \"entry_category\",\n          },\n          {\n            title: \"Entry Info\",\n            identifier: \"entry_info\",\n          },\n          {\n            title: \"Amount\",\n            identifier: \"amount\",\n          },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        add_data={send_data}\n        add_initial_values={{\n          date: \"\",\n          balance_form: -1,\n          entry_type: -1,\n          entry_info: \"\",\n          entry_category: \"\",\n          amount: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\StudentsCrud.js",["1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890"],"import Index from \"components/crud/Index\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Call } from \"services/API/Call\";\r\nimport ExtendedInput from \"./ExtendedInput\";\r\n\r\nexport default function StudentsCrud({ permission }) {\r\n  const user_role = localStorage.getItem(\"role\");\r\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  const [class_id, setClass] = useState(\"\");\r\n  const [session_id, setSession] = useState(\"\");\r\n  const [selected_session, setSelectedSession] = useState(\"\");\r\n  const [selected_class, setSelectedClass] = useState(\"\");\r\n  const [religion_list, setreligion_list] = useState([]);\r\n  const [extended_info, setextended_info] = useState([]);\r\n  React.useEffect(() => {\r\n    Call({ method: \"get\", url: \"/settings/religion\" })\r\n      .then((res) => {\r\n        res.map((element) => {\r\n          element[\"text\"] = element.religion_name;\r\n          element[\"value\"] = element.religion_name;\r\n        });\r\n        setreligion_list(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    Call({ method: \"get\", url: \"/settings/students_extended_info?use=true\" })\r\n      .then((res) => {\r\n        setextended_info(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  React.useEffect(() => console.log(extended_info), [extended_info]);\r\n\r\n  const add_data = [\r\n    {\r\n      placeholder: \"Student Name\",\r\n      type: \"text\",\r\n      name: \"student_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Mother Name\",\r\n      type: \"text\",\r\n      name: \"mother_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Father Name\",\r\n      type: \"text\",\r\n      name: \"father_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Image\",\r\n      type: \"file\",\r\n      name: \"student_image\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Gender\",\r\n      type: \"select\",\r\n      name: \"gender\",\r\n      options: [\r\n        { text: \"Male\", value: \"Male\" },\r\n        { text: \"Female\", value: \"Female\" },\r\n      ],\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Religion\",\r\n      type: \"select\",\r\n      name: \"religion\",\r\n      options: religion_list,\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Date of Birth\",\r\n      type: \"date\",\r\n      name: \"date_of_birth\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Primary Phone\",\r\n      type: \"text\",\r\n      name: \"primary_phone\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Secondary Phone\",\r\n      type: \"text\",\r\n      name: \"secondary_phone\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Student Email\",\r\n      type: \"email\",\r\n      name: \"student_email\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Session\",\r\n      type: \"select\",\r\n      name: \"session_id\",\r\n      options: session_list,\r\n      setState: setSelectedSession,\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Class\",\r\n      type: \"select\",\r\n      name: \"class_id\",\r\n      options: class_list,\r\n      setState: setSelectedClass,\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Department\",\r\n      type: \"select\",\r\n      name: \"department_id\",\r\n      options: department_list.filter(\r\n        (element) =>\r\n          element.class_id == selected_class &&\r\n          element.session_id == selected_session\r\n      ),\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Role\",\r\n      type: \"number\",\r\n      name: \"role\",\r\n      required: true,\r\n    },\r\n    {\r\n      customInput: ExtendedInput,\r\n      title: \"Student's Additional Info\",\r\n      name: \"extended_info\",\r\n      children: extended_info,\r\n    },\r\n  ];\r\n  const edit_data = [\r\n    {\r\n      placeholder: \"Student Name\",\r\n      type: \"text\",\r\n      name: \"student_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Mother Name\",\r\n      type: \"text\",\r\n      name: \"mother_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Father Name\",\r\n      type: \"text\",\r\n      name: \"father_name\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Student Image\",\r\n      type: \"file\",\r\n      name: \"student_image\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Gender\",\r\n      type: \"select\",\r\n      name: \"gender\",\r\n      options: [\r\n        { text: \"Male\", value: \"Male\" },\r\n        { text: \"Female\", value: \"Female\" },\r\n      ],\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Religion\",\r\n      type: \"select\",\r\n      name: \"religion\",\r\n      options: religion_list,\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Date of Birth\",\r\n      type: \"date\",\r\n      name: \"date_of_birth\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Primary Phone\",\r\n      type: \"text\",\r\n      name: \"primary_phone\",\r\n      required: true,\r\n    },\r\n    {\r\n      placeholder: \"Secondary Phone\",\r\n      type: \"text\",\r\n      name: \"secondary_phone\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Student Email\",\r\n      type: \"email\",\r\n      name: \"student_email\",\r\n      required: false,\r\n    },\r\n    {\r\n      placeholder: \"Student Status\",\r\n      type: \"select\",\r\n      name: \"enrollment_status\",\r\n      options: [\r\n        { text: \"Student\", value: \"student\" },\r\n        { text: \"Inactive\", value: \"inactive\" },\r\n      ],\r\n      required: true,\r\n    },\r\n    {\r\n      customInput: ExtendedInput,\r\n      title: \"Student's Additional Info\",\r\n      name: \"extended_info\",\r\n      children: extended_info,\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Index\r\n        title=\"Student List\"\r\n        list_url=\"/students/student\"\r\n        indexed={false}\r\n        list_head={[\r\n          {\r\n            title: \"Roll\",\r\n            identifier: \"role\",\r\n          },\r\n          {\r\n            title: \"Name\",\r\n            identifier: \"student_name\",\r\n          },\r\n          {\r\n            title: \"Mother\",\r\n            identifier: \"mother_name\",\r\n          },\r\n          {\r\n            title: \"Father\",\r\n            identifier: \"father_name\",\r\n          },\r\n          {\r\n            title: \"Religion\",\r\n            identifier: \"religion\",\r\n          },\r\n          {\r\n            title: \"Primary Phone\",\r\n            identifier: \"primary_phone\",\r\n          },\r\n          {\r\n            title: \"Secondary Phone\",\r\n            identifier: \"secondary_phone\",\r\n          },\r\n          {\r\n            title: \"Image\",\r\n            identifier: \"student_image\",\r\n            type: \"image\",\r\n          },\r\n        ]}\r\n        file={true}\r\n        add={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.create) != -1\r\n        }\r\n        list_active={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.view) != -1\r\n        }\r\n        remove={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.delete) != -1\r\n        }\r\n        edit={\r\n          user_role == \"Super Admin\" ||\r\n          user_permissions.indexOf(permission.update) != -1\r\n        }\r\n        add_data={add_data}\r\n        edit_data={edit_data}\r\n        add_initial_values={{\r\n          student_name: \"\",\r\n          mother_name: \"\",\r\n          father_name: \"\",\r\n          student_image: \"\",\r\n          gender: -1,\r\n          religion: -1,\r\n          age: \"\",\r\n          primary_phone: \"\",\r\n          secondary_phone: \"\",\r\n          student_email: \"\",\r\n          class_id: -1,\r\n          session_id: -1,\r\n          department_id: -1,\r\n          role: \"\",\r\n          extended_info: \"{}\",\r\n        }}\r\n        query_title=\"Query Student List\"\r\n        query_list={[\r\n          {\r\n            placeholder: \"Session\",\r\n            type: \"select\",\r\n            name: \"session_id\",\r\n            options: session_list,\r\n            setState: setSession,\r\n            required: true,\r\n          },\r\n          {\r\n            placeholder: \"Class\",\r\n            type: \"select\",\r\n            name: \"class_id\",\r\n            options: class_list,\r\n            setState: setClass,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Department\",\r\n            type: \"select\",\r\n            name: \"department_id\",\r\n            options: department_list.filter(\r\n              (element) =>\r\n                element.class_id == class_id && element.session_id == session_id\r\n            ),\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Religion\",\r\n            type: \"select\",\r\n            name: \"religion\",\r\n            options: religion_list,\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Gender\",\r\n            type: \"select\",\r\n            name: \"gender\",\r\n            options: [\r\n              { text: \"Male\", value: \"Male\" },\r\n              { text: \"Female\", value: \"Female\" },\r\n            ],\r\n            required: false,\r\n          },\r\n          {\r\n            placeholder: \"Age\",\r\n            type: \"number\",\r\n            name: \"age\",\r\n            required: false,\r\n          },\r\n        ]}\r\n        query_data={{\r\n          session_id: -1,\r\n          class_id: -1,\r\n          department_id: -1,\r\n          religion: -1,\r\n          gender: -1,\r\n          age: \"\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\accounts\\AccountBalance.js",["1891","1892","1893","1894"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function AccountBalance({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Cash Balance\",\n      type: \"number\",\n      name: \"cash\",\n      required: true,\n    },\n    {\n      placeholder: \"Bank Balance\",\n      type: \"number\",\n      name: \"bank\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Account Balance\"\n        list_url=\"/accounts/account_balance\"\n        list_head={[\n          {\n            title: \"Cash Balance\",\n            identifier: \"cash\",\n          },\n          {\n            title: \"Bank Balance\",\n            identifier: \"bank\",\n          },\n        ]}\n        add={false}\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={false}\n        edit_data={send_data}\n        add_initial_values={{\n          cash: \"\",\n          bank: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\InstituteInfo.js",["1895","1896","1897","1898"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function InstituteInfo({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Institute Info Update\"\n        list_url=\"/settings/institute_info\"\n        list_head={[{ title: \"Institute Name\", identifier: \"institute_name\" }]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        file={true}\n        edit_data={[\n          {\n            placeholder: \"Institute Name\",\n            type: \"textarea\",\n            name: \"institute_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Motto\",\n            type: \"textarea\",\n            name: \"institute_motto\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Phonenumbers\",\n            type: \"textarea\",\n            name: \"institute_phonenumbers\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Email\",\n            type: \"text\",\n            name: \"institute_email\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Facebook\",\n            type: \"textarea\",\n            name: \"institute_facebook\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Youtube\",\n            type: \"textarea\",\n            name: \"institute_youtube\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Address\",\n            type: \"textarea\",\n            name: \"institute_address\",\n            required: true,\n          },\n          {\n            placeholder: \"Institute Logo\",\n            type: \"file\",\n            name: \"institute_logo\",\n            required: false,\n          },\n        ]}\n        def_url_param=\"update=true\"\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\ProductCrud.js",["1899","1900","1901","1902","1903","1904","1905","1906"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function ProductCrud({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const send_data = [\n    {\n      placeholder: \"Product Name\",\n      type: \"text\",\n      name: \"product_name\",\n      required: true,\n    },\n    {\n      placeholder: \"Product Info\",\n      type: \"text\",\n      name: \"product_info\",\n      required: true,\n    },\n    {\n      placeholder: \"Price\",\n      type: \"number\",\n      name: \"price\",\n      required: true,\n    },\n    {\n      placeholder: \"Stock\",\n      type: \"number\",\n      name: \"stock\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Products List\"\n        list_url=\"/products/product\"\n        list_head={[\n          { title: \"Product Name\", identifier: \"product_name\" },\n          { title: \"Product Info\", identifier: \"product_info\" },\n          { title: \"Price\", identifier: \"price\" },\n          { title: \"Stock\", identifier: \"stock\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          product_name: \"\",\n          product_info: \"\",\n          price: \"\",\n          stock: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\EmployeesExtendedInfo.js",["1907","1908","1909","1910","1911","1912","1913","1914","1915"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function TeachersExtendedInfo({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Employee Extended Info List\"\n        list_url=\"/settings/employees_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\StudentsExtendedInfo.js",["1916","1917","1918","1919","1920","1921","1922","1923","1924"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\n\nexport default function StudentsExtendedInfo({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [type, settype] = useState(\"\");\n  const send_data = [\n    {\n      placeholder: \"Type\",\n      type: \"select\",\n      name: \"type\",\n      options: [\n        { value: \"select\", text: \"Selection\" },\n        { value: \"text\", text: \"Small Text\" },\n        { value: \"number\", text: \"Number\" },\n        { value: \"textarea\", text: \"Big Text\" },\n      ],\n      setState: settype,\n      required: true,\n    },\n    {\n      placeholder: \"Placeholder\",\n      type: \"text\",\n      name: \"placeholder\",\n      required: true,\n    },\n    {\n      placeholder: \"Options\",\n      type: \"text\",\n      name: \"options\",\n      required: type == \"select\",\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Students Extended Info List\"\n        list_url=\"/settings/students_extended_info\"\n        list_head={[\n          { title: \"Type\", identifier: \"type\" },\n          { title: \"Placeholder\", identifier: \"placeholder\" },\n          { title: \"Options\", identifier: \"options\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ type: -1, placeholder: \"\", options: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\Tabulation.js",["1925"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport TabulationList from \"./TabulationList\";\n\nexport default function Tabulation() {\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Tabulation Sheet\"\n        list_url=\"/exams/marks\"\n        CustomListComponent={TabulationList}\n        query_title=\"Query Exam Marks\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n        print_url=\"exams/tabulation\"\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\Marks.js",["1926"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport MarkList from \"./MarkList\";\n\nexport default function Marks({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, session_list, department_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [department_id, setSelectedDepartment] = useState();\n  const [class_id, setClassID] = useState();\n  const [session_id, setSessionID] = useState();\n  const [exam_list, setExamList] = useState([]);\n\n  React.useEffect(() => {\n    if (session_id != -1 && class_id != -1 && department_id != -1) {\n      Call({\n        method: \"get\",\n        url:\n          \"exams/exam?result=true&session_id=\" +\n          session_id +\n          \"&class_id=\" +\n          class_id +\n          \"&department_id=\" +\n          department_id,\n      })\n        .then((res) => {\n          res.map((el) => {\n            el[\"text\"] = el.name;\n            el[\"value\"] = el.id;\n          });\n          setExamList(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [session_id, class_id, department_id]);\n\n  return (\n    <>\n      <Index\n        title=\"Marks Assignment\"\n        list_url=\"/exams/exam_subjects\"\n        list_head={[\n          { title: \"Subject\", identifier: \"subject\" },\n          { title: \"Exam\", identifier: \"exam\" },\n          { title: \"Session\", identifier: \"session\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n        ]}\n        CustomListComponent={MarkList}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        query_title=\"Query Exam Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setSessionID,\n            required: false,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setClassID,\n            required: false,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == class_id && element.session_id == session_id\n            ),\n            setState: setSelectedDepartment,\n            required: false,\n          },\n          {\n            placeholder: \"Exams\",\n            type: \"select\",\n            name: \"exam_id\",\n            options: exam_list,\n            required: true,\n          },\n        ]}\n        query_data={{\n          class_id: -1,\n          session_id: -1,\n          department_id: -1,\n          exam_id: -1,\n        }}\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\AssignSubject.js",["1927","1928"],"/* eslint-disable eqeqeq */\nimport Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function AssignSubject({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [subject_list, setSubjectList] = useState([]);\n  const [selected_class, setSelectedClass] = useState(\"\");\n  const [selected_session, setSelectedSession] = useState(\"\");\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const [selected_query_session, setQuerySession] = useState(\"\");\n\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/subject\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"name\"] = element.subject_name;\n        });\n        setSubjectList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      options: session_list,\n      setState: setSelectedSession,\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      options: class_list,\n      setState: setSelectedClass,\n      required: true,\n    },\n    {\n      placeholder: \"Department\",\n      type: \"select\",\n      name: \"department_id\",\n      options: department_list.filter(\n        (element) => element.class_id == selected_class\n      ),\n      required: true,\n    },\n    {\n      placeholder: \"Subjects\",\n      type: \"checkboxarr\",\n      name: \"subjects\",\n      options: subject_list,\n      required: true,\n    },\n  ];\n  React.useEffect(() => {\n    console.log(selected_query_class);\n  }, [selected_query_class]);\n  return (\n    <div>\n      <Index\n        title=\"Assigned Subjects\"\n        list_url=\"/settings/assign_subject\"\n        query_title=\"Get Assigned Subject List\"\n        query_list={[\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            setState: setQuerySession,\n            required: true,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            options: department_list.filter(\n              (element) =>\n                element.class_id == selected_query_class &&\n                element.session_id == selected_query_session\n            ),\n            required: true,\n          },\n        ]}\n        query_data={{ class_id: -1, department_id: -1 }}\n        list_head={[\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Department\", identifier: \"department\" },\n          { title: \"Subject\", identifier: \"name\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.assign) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ class_id: \"\", department_id: \"\", subjects: \"[]\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Grade.js",["1929","1930","1931","1932","1933","1934","1935","1936"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Grade({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"GPA\"\n        list_url=\"/settings/grade\"\n        list_head={[\n          { title: \"Grade\", identifier: \"grade\" },\n          { title: \"Starting GPA\", identifier: \"starting_gpa\" },\n          { title: \"Ending GPA\", identifier: \"ending_gpa\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Starting GPA\",\n            type: \"number\",\n            name: \"starting_gpa\",\n            required: true,\n          },\n          {\n            placeholder: \"Ending GPA\",\n            type: \"number\",\n            name: \"ending_gpa\",\n            required: true,\n          },\n          {\n            placeholder: \"Grade\",\n            type: \"text\",\n            name: \"grade\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Starting GPA\",\n            type: \"number\",\n            name: \"starting_gpa\",\n            required: true,\n          },\n          {\n            placeholder: \"Ending GPA\",\n            type: \"number\",\n            name: \"ending_gpa\",\n            required: true,\n          },\n          {\n            placeholder: \"Grade\",\n            type: \"text\",\n            name: \"grade\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ starting_gpa: \"\", ending_gpa: \"\", grade: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\ProductsOperation.js",["1937","1938","1939","1940","1941","1942","1943","1944","1945","1946"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\nimport { Call } from \"services/API/Call\";\nimport Products from \"./Products\";\n\nexport default function ProductsOperation() {\n  const { class_list, department_list, session_list } = useContext(\n    ClassDeptSessionContext\n  );\n  const [selected_class, setSelectedClass] = useState();\n  const [selected_session, setSelectedSession] = useState();\n  const [selected_department, setSelectedDepartment] = useState();\n  const [student_list, setStudentList] = useState([]);\n  React.useEffect(() => {\n    if (\n      selected_session != -1 &&\n      selected_class != -1 &&\n      selected_department != -1\n    )\n      Call({\n        method: \"get\",\n        url:\n          \"students/student_assignment?student_options=true&class_id=\" +\n          selected_class +\n          \"&department_id=\" +\n          selected_department +\n          \"&session_id=\" +\n          selected_session,\n      })\n        .then((res) => setStudentList(res))\n        .catch((err) => console.log(err));\n  }, [selected_session, selected_class, selected_department]);\n\n  return (\n    <div>\n      <Index\n        title=\"Issue Products\"\n        CustomListComponent={Products}\n        query_title=\"Query Student\"\n        query_list={[\n          {\n            placeholder: \"Student ID\",\n            type: \"text\",\n            name: \"student_id\",\n            required: false,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            required: false,\n            options: session_list,\n            setState: setSelectedSession,\n          },\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            required: selected_session != -1,\n            options: class_list,\n            setState: setSelectedClass,\n          },\n          {\n            placeholder: \"Department\",\n            type: \"select\",\n            name: \"department_id\",\n            required: selected_session != -1,\n            setState: setSelectedDepartment,\n            options: department_list.filter((element) => {\n              return (\n                element.class_id == selected_class &&\n                element.session_id == selected_session\n              );\n            }),\n          },\n          {\n            placeholder: \"Student\",\n            type: \"select\",\n            name: \"student\",\n            required:\n              selected_session != -1 ||\n              selected_class != -1 ||\n              selected_department != -1,\n            options: student_list,\n          },\n        ]}\n        query_data={{\n          student_id: \"\",\n          session_id: -1,\n          class_id: -1,\n          department_id: -1,\n          student: -1,\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\print\\exam\\Tabulation\\TableRow.js",["1947","1948"],"import React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport default function TableRow(props) {\r\n  const { info, subjects } = props;\r\n  const subjectMark = (com_subject_id) => {\r\n    return info.filter((element) => element.subject_id == com_subject_id);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td>{info[0].role}</td>\r\n      <td>{info[0].student_name}</td>\r\n      {subjects.map((el, idx) =>\r\n        subjectMark(el.subject_id).length > 0 &&\r\n        subjectMark(el.subject_id)[0].marks != undefined ? (\r\n          subjectMark(el.subject_id)[0].marks.map((element) => (\r\n            <th key={uuid()} className=\"text-center\">\r\n              {element.value}\r\n            </th>\r\n          ))\r\n        ) : (\r\n          <th key={uuid()} className=\"text-center\">\r\n            A\r\n          </th>\r\n        )\r\n      )}\r\n      <th>\r\n        {subjects.reduce((cb, el) => {\r\n          cb =\r\n            parseInt(cb) +\r\n            parseInt(\r\n              subjectMark(el.subject_id)[0]?.marks?.reduce(\r\n                (ecb, element) =>\r\n                  (ecb = parseInt(ecb) + parseInt(element.value)),\r\n                0\r\n              ) || 0\r\n            );\r\n          return cb;\r\n        }, 0) || 0}\r\n      </th>\r\n    </tr>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\GPA.js",["1949","1950","1951","1952","1953","1954","1955","1956"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function GPA({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"GPA\"\n        list_url=\"/settings/gpa\"\n        list_head={[\n          { title: \"GPA\", identifier: \"gpa\" },\n          { title: \"Start From\", identifier: \"starting_number\" },\n          { title: \"End In\", identifier: \"ending_number\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Start From\",\n            type: \"number\",\n            name: \"starting_number\",\n            required: true,\n          },\n          {\n            placeholder: \"End In\",\n            type: \"number\",\n            name: \"ending_number\",\n            required: true,\n          },\n          {\n            placeholder: \"GPA\",\n            type: \"number\",\n            name: \"gpa\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Start From\",\n            type: \"number\",\n            name: \"starting_number\",\n            required: true,\n          },\n          {\n            placeholder: \"End In\",\n            type: \"number\",\n            name: \"ending_number\",\n            required: true,\n          },\n          {\n            placeholder: \"GPA\",\n            type: \"number\",\n            name: \"gpa\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ starting_number: \"\", ending_number: \"\", gpa: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Roles.js",["1957","1958","1959","1960","1961","1962","1963","1964"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Roles({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [permission_list, setPermissionList] = useState([]);\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/permission\" })\n      .then((res) => setPermissionList(res))\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"Role Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Permissions\",\n      type: \"checkboxarr\",\n      name: \"permissions\",\n      options: permission_list,\n      required: true,\n    },\n  ];\n\n  return (\n    <div>\n      <Index\n        title=\"User Roles\"\n        list_url=\"/settings/role\"\n        modal_size=\"lg\"\n        list_head={[\n          { title: \"Role Name\", identifier: \"name\" },\n          { title: \"Permissions\", identifier: \"permission_names\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{ name: \"\", permissions: \"[]\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Permissions.js",["1965","1966"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Permissions({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Permission List\"\n        list_url=\"/settings/permission\"\n        list_head={[\n          { title: \"Permission\", identifier: \"name\" },\n          { title: \"Parent Controller\", identifier: \"parent_controller\" },\n          { title: \"Parent Group\", identifier: \"parent_group\" },\n        ]}\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\PaymentCategory.js",["1967","1968","1969","1970","1971","1972","1973","1974","1975"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function PaymentCategory({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [info_type, setInfoType] = React.useState(\"\");\n  return (\n    <div>\n      <Index\n        title=\"Payment Category List\"\n        list_url=\"/settings/payment_category\"\n        list_head={[\n          { title: \"Payment Category\", identifier: \"category_name\" },\n          { title: \"Info Type\", identifier: \"info_type\" },\n          { title: \"Info Options\", identifier: \"info_options\" },\n          { title: \"Default Amount\", identifier: \"default_amount\" },\n          { title: \"Recurring Type\", identifier: \"recurring_type\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                text: \"Selection\",\n                value: \"select\",\n              },\n              {\n                text: \"Text Area\",\n                value: \"textarea\",\n              },\n            ],\n            setState: setInfoType,\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: info_type == \"select\",\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"select\",\n            name: \"recurring_type\",\n            options: [\n              {\n                text: \"Monthly\",\n                value: \"Monthly\",\n              },\n              {\n                text: \"Occasion Based\",\n                value: \"Ocassion Based\",\n              },\n            ],\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Payment Category\",\n            type: \"text\",\n            name: \"category_name\",\n            required: true,\n          },\n          {\n            placeholder: \"Info Type\",\n            type: \"select\",\n            name: \"info_type\",\n            options: [\n              {\n                name: \"Selection\",\n                id: 1,\n              },\n              {\n                name: \"Text\",\n                id: 2,\n              },\n            ],\n            required: true,\n          },\n          {\n            placeholder: \"Info Options\",\n            type: \"text\",\n            name: \"info_options\",\n            required: true,\n          },\n          {\n            placeholder: \"Default Amount\",\n            type: \"number\",\n            name: \"default_amount\",\n            required: true,\n          },\n          {\n            placeholder: \"Recurring Type\",\n            type: \"number\",\n            name: \"recurring_type\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{\n          category_name: \"\",\n          info_type: \"\",\n          info_options: \"\",\n          default_amount: \"\",\n          recurring_type: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Subject.js",["1976","1977","1978","1979","1980","1981","1982","1983"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Subject({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Subject List\"\n        list_url=\"/settings/subject\"\n        list_head={[{ title: \"Subject Name\", identifier: \"subject_name\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Subject Name\",\n            type: \"text\",\n            name: \"subject_name\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Subject Name\",\n            type: \"text\",\n            name: \"subject_name\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ subject_name: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Users.js",["1984","1985","1986","1987","1988","1989","1990","1991","1992"],"import Index from \"components/crud/Index\";\nimport React, { useState } from \"react\";\nimport { Call } from \"services/API/Call\";\n\nexport default function Users({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const [roles_list, setRolesList] = useState([]);\n  const user_type_list = [\n    { value: \"admin\", text: \"admin\" },\n    { value: \"teacher\", text: \"teacher\" },\n    { value: \"student\", text: \"student\" },\n  ];\n  React.useEffect(() => {\n    Call({ method: \"get\", url: \"/settings/role\" })\n      .then((res) => {\n        res.map((element) => {\n          element[\"value\"] = element.id;\n          element[\"text\"] = element.name;\n        });\n        setRolesList(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  const send_data = [\n    {\n      placeholder: \"User Type\",\n      type: \"select\",\n      name: \"user_type\",\n      options: [\n        { value: \"admin\", text: \"admin\" },\n        { value: \"teacher\", text: \"teacher\" },\n        { value: \"student\", text: \"student\" },\n      ],\n      required: true,\n    },\n    {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      required: true,\n    },\n    {\n      placeholder: \"User Role\",\n      type: \"select\",\n      name: \"role\",\n      options: roles_list,\n      required: true,\n    },\n    {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"User List\"\n        list_url=\"/settings/user\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"User Type\",\n            type: \"select\",\n            name: \"user_type\",\n            options: user_type_list,\n            required: true,\n          },\n        ]}\n        query_data={{ user_type: -1 }}\n        list_head={[\n          { title: \"Name\", identifier: \"name\" },\n          { title: \"Username\", identifier: \"username\" },\n          { title: \"User Type\", identifier: \"user_type\" },\n          { title: \"Roles\", identifier: \"role_name\" },\n        ]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={send_data}\n        edit_data={send_data}\n        add_initial_values={{\n          name: \"\",\n          username: \"\",\n          user_type: \"\",\n          password: \"\",\n        }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\SchoolClass.js",["1993","1994","1995","1996","1997","1998","1999","2000"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function SchoolClass({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Class List\"\n        list_url=\"/settings/class\"\n        list_head={[{ title: \"Class Name\", identifier: \"name\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Class Name\",\n            type: \"text\",\n            name: \"name\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Class Name\",\n            type: \"text\",\n            name: \"name\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ name: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Department.js",["2001","2002","2003","2004","2005","2006","2007","2008","2009"],"import Index from \"components/crud/Index\";\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\nimport React, { useContext, useState } from \"react\";\n\nexport default function Department({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  const { class_list, session_list } = useContext(ClassDeptSessionContext);\n\n  const [selected_query_class, setQueryClass] = useState(\"\");\n  const add_data = [\n    {\n      placeholder: \"Department Name\",\n      type: \"text\",\n      name: \"name\",\n      required: true,\n    },\n    {\n      placeholder: \"Class\",\n      type: \"select\",\n      name: \"class_id\",\n      required: true,\n      options: class_list,\n    },\n    {\n      placeholder: \"Session\",\n      type: \"select\",\n      name: \"session_id\",\n      required: true,\n      options: session_list,\n    },\n  ];\n  return (\n    <div>\n      <Index\n        title=\"Department List\"\n        list_url=\"/settings/department\"\n        query_title=\"Query Department List\"\n        query_list={[\n          {\n            placeholder: \"Class\",\n            type: \"select\",\n            name: \"class_id\",\n            options: class_list,\n            setState: setQueryClass,\n            required: true,\n          },\n          {\n            placeholder: \"Session\",\n            type: \"select\",\n            name: \"session_id\",\n            options: session_list,\n            required: true,\n          },\n        ]}\n        list_head={[\n          { title: \"Department\", identifier: \"name\" },\n          { title: \"Class\", identifier: \"class\" },\n          { title: \"Session\", identifier: \"session\" },\n        ]}\n        query_data={{ class_id: -1, session_id: -1 }}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={add_data}\n        edit_data={add_data}\n        add_initial_values={{ name: \"\", class_id: -1, session_id: -1 }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\settings\\Session.js",["2010","2011","2012","2013","2014","2015","2016","2017"],"import Index from \"components/crud/Index\";\nimport React from \"react\";\n\nexport default function Session({ permission }) {\n  const user_role = localStorage.getItem(\"role\");\n  const user_permissions = JSON.parse(localStorage.getItem(\"permissions\"));\n  return (\n    <div>\n      <Index\n        title=\"Session List\"\n        list_url=\"/settings/session\"\n        list_head={[{ title: \"Session\", identifier: \"session\" }]}\n        add={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.create) != -1\n        }\n        list_active={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.view) != -1\n        }\n        remove={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.delete) != -1\n        }\n        edit={\n          user_role == \"Super Admin\" ||\n          user_permissions.indexOf(permission.update) != -1\n        }\n        add_data={[\n          {\n            placeholder: \"Session\",\n            type: \"number\",\n            name: \"session\",\n            required: true,\n          },\n        ]}\n        edit_data={[\n          {\n            placeholder: \"Session\",\n            type: \"number\",\n            name: \"session\",\n            required: true,\n          },\n        ]}\n        add_initial_values={{ session: \"\" }}\n      />\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkAssignModal.js",["2018","2019","2020","2021","2022","2023","2024","2025","2026","2027"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nimport MarkAssignment from \"./MarkAssignment\";\nexport default function MarkAssignModal(props) {\n  const { url, open, setopen, data, update, setUpdate, tags } = props;\n\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"lg\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Add\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0  p-0\">\n            <CardHeader className=\"bg-transparent p-3\">\n              {tags.length > 0\n                ? tags.map((el, idx) => (\n                    <Button color=\"success\" size=\"sm\" key={idx}>\n                      {el.title} : {el.value}\n                    </Button>\n                  ))\n                : null}\n            </CardHeader>\n            <CardBody className=\"py-lg-4 pl-0  pr-0\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <MarkAssignment data={data} />\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssuedList.js",["2028"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport ReturnModal from \"./ReturnModal\";\nimport uuid from \"react-uuid\";\nimport IssuedBookDelete from \"./IssuedBookDelete\";\n\nexport default function IssuedList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    book_issuer_data,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [del, setDelete] = useState(false);\n  const [del_info, setDeleteInfo] = useState(false);\n  const [book, setBook] = useState({});\n  return (\n    <>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            {indexed ? <th scope=\"col\">#</th> : null}\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n            <th>Return</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                {indexed ? (\n                  <th scope=\"row\" key={index}>\n                    {index + 1}\n                  </th>\n                ) : null}\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n                <th>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => {\n                      setBook(element);\n                      setOpen(true);\n                    }}\n                  >\n                    Return\n                  </Button>\n                </th>\n                <td>\n                  <Button\n                    color=\"danger\"\n                    onClick={() => {\n                      setDelete(true);\n                      setDeleteInfo(element.id);\n                    }}\n                  >\n                    <i className=\"fas fa-trash\" />\n                  </Button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      {book != undefined && book != null ? (\n        <ReturnModal\n          update={update}\n          setUpdate={setupdate}\n          open={open}\n          setopen={setOpen}\n          book={book}\n          book_issuer_data={book_issuer_data}\n        />\n      ) : null}\n      <IssuedBookDelete\n        open={del}\n        setOpenDelete={setDelete}\n        id={del_info}\n        update={update}\n        setUpdate={setupdate}\n        url=\"library/issue_books\"\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\results\\PublishModal.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\AddStudentPayment.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\DuePaymentModal.js",[],"J:\\Web\\school_argon\\src\\components\\teachers\\exams\\Tabulation\\TableRow.js",["2029","2030"],"import React from \"react\";\nimport uuid from \"react-uuid\";\n\nexport default function TableRow(props) {\n  const { info, subjects } = props;\n  console.log(\"now\");\n  const subjectMark = (com_subject_id) => {\n    return info.filter((element) => element.subject_id == com_subject_id);\n  };\n  return (\n    <tr>\n      <td>{info[0].student_identifier}</td>\n      <td>{info[0].student_name}</td>\n      {subjects.map((el, idx) =>\n        subjectMark(el.subject_id).length > 0 ? (\n          subjectMark(el.subject_id)[0].marks != undefined ? (\n            subjectMark(el.subject_id)[0].marks.map((element) => (\n              <th key={uuid()} className=\"text-center\">\n                {element.value}\n              </th>\n            ))\n          ) : (\n            <th key={uuid()} className=\"text-center\">\n              A\n            </th>\n          )\n        ) : (\n          <th key={uuid()} className=\"text-center\">\n            A\n          </th>\n        )\n      )}\n    </tr>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\students\\attendance\\StudentsAttendanceTable.js",["2031","2032","2033","2034","2035","2036","2037","2038","2039"],"J:\\Web\\school_argon\\src\\components\\dashboard\\students\\class_assignment\\StudentList.js",["2040","2041","2042","2043"],"import React, { useContext, useState } from \"react\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nimport Promote from \"./Promote\";\r\nimport { ClassDeptSessionContext } from \"contexts/ClassDeptSessionContext\";\r\nexport default function StudentList(props) {\r\n  const {\r\n    setOpenEdit,\r\n    setOpenDelete,\r\n    setDeleteInfo,\r\n    setEditInfo,\r\n    list,\r\n    list_head,\r\n    edit = false,\r\n    remove = false,\r\n    loading,\r\n    indexed = true,\r\n  } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ student_id: \"\", student_name: \"\" });\r\n\r\n  const { class_list, department_list, session_list } = useContext(\r\n    ClassDeptSessionContext\r\n  );\r\n  const [selected_class, setSelectedClass] = useState(\"\");\r\n  const [selected_session, setSelectedSession] = useState(\"\");\r\n  React.useEffect(() => {\r\n    if (!open) setData({ student_id: \"\", student_name: \"\" });\r\n  }, [open]);\r\n  return (\r\n    <>\r\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            {indexed ? <th scope=\"col\">#</th> : null}\r\n            {list_head.map((item, index) => (\r\n              <th key={uuid()}>{item.title}</th>\r\n            ))}\r\n            {remove ? <th scope=\"col\">Delete</th> : null}\r\n            {edit ? <th scope=\"col\">Edit</th> : null}\r\n            <th>Promote</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                <Spinner color=\"primary\" />\r\n              </td>\r\n            </tr>\r\n          ) : typeof list == \"object\" && list.length > 0 ? (\r\n            list.map((element, index) => (\r\n              <tr key={uuid()}>\r\n                {indexed ? (\r\n                  <th scope=\"row\" key={index}>\r\n                    {index + 1}\r\n                  </th>\r\n                ) : null}\r\n                {list_head.map((item, index) => (\r\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\r\n                    {item.type != \"image\" ? (\r\n                      element[item.identifier]\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          process.env.REACT_APP_IMAGE_PATH +\r\n                          \"/\" +\r\n                          element[item.identifier]\r\n                        }\r\n                        alt=\"Gallery IMG\"\r\n                        style={{ width: \"80px\", objectFit: \"cover\" }}\r\n                      />\r\n                    )}\r\n                  </th>\r\n                ))}\r\n\r\n                <DeleteButton\r\n                  remove={remove}\r\n                  id={element.id}\r\n                  setOpenDelete={setOpenDelete}\r\n                  setDeleteInfo={setDeleteInfo}\r\n                />\r\n                <EditButton\r\n                  edit={edit}\r\n                  element={element}\r\n                  setOpenEdit={setOpenEdit}\r\n                  setEditInfo={setEditInfo}\r\n                />\r\n                <th>\r\n                  <Button\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      setData({\r\n                        student_id: element.student_id,\r\n                        student_name: element.student_name,\r\n                      });\r\n                      setOpen(true);\r\n                    }}\r\n                    size=\"sm\"\r\n                  >\r\n                    Promote\r\n                  </Button>\r\n                </th>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={list_head.length + 3} className=\"text-center\">\r\n                Found Nothing\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      {data.student_name != \"\" ? (\r\n        <Promote\r\n          open={open}\r\n          setOpen={setOpen}\r\n          add_data={[\r\n            {\r\n              placeholder: \"Session\",\r\n              type: \"select\",\r\n              name: \"session_id\",\r\n              options: session_list,\r\n              setState: setSelectedSession,\r\n              required: true,\r\n            },\r\n            {\r\n              placeholder: \"Class\",\r\n              type: \"select\",\r\n              name: \"class_id\",\r\n              options: class_list,\r\n              setState: setSelectedClass,\r\n              required: true,\r\n            },\r\n            {\r\n              placeholder: \"Department\",\r\n              type: \"select\",\r\n              name: \"department_id\",\r\n              options: department_list.filter(\r\n                (element) =>\r\n                  element.class_id == selected_class &&\r\n                  element.session_id == selected_session\r\n              ),\r\n              required: true,\r\n            },\r\n            {\r\n              placeholder: \"Student Role\",\r\n              type: \"number\",\r\n              name: \"role\",\r\n              required: true,\r\n            },\r\n          ]}\r\n          std_data={data}\r\n          update={false}\r\n          setUpdate={() => {}}\r\n          title=\"Promote\"\r\n          url=\"/students/student_assignment\"\r\n          initial_values={{\r\n            session_id: -1,\r\n            class_id: -1,\r\n            department_id: -1,\r\n            role: \"\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nfunction DeleteButton({ id, remove, setOpenDelete, setDeleteInfo }) {\r\n  return remove ? (\r\n    <td>\r\n      <Button\r\n        color=\"danger\"\r\n        onClick={() => {\r\n          setOpenDelete(true);\r\n          setDeleteInfo(id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-trash\" />\r\n      </Button>\r\n    </td>\r\n  ) : null;\r\n}\r\n\r\nfunction EditButton({ element, edit, setOpenEdit, setEditInfo }) {\r\n  const change = () => {\r\n    setEditInfo(element);\r\n  };\r\n  return edit ? (\r\n    <td>\r\n      <Button color=\"primary\" onClick={change}>\r\n        <i className=\"fas fa-pencil-alt\" />\r\n      </Button>\r\n    </td>\r\n  ) : null;\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkList.js",["2044"],"J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\CustomBookList.js",["2045","2046","2047"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport IssueModal from \"./IssueModal\";\nimport SellModal from \"./SellModal\";\n\nexport default function CustomBookList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    book_issuer_data,\n  } = props;\n  const [values, setvalues] = React.useState([]);\n  const [price, setPrice] = React.useState([]);\n  const [val_to_show, setValToShow] = React.useState([]);\n  const [issue, setIssue] = useState(false);\n  const [sell, setSell] = useState(false);\n  const handleChange = (id, book_name, prc) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    let new_val_to_show = [...val_to_show];\n    let new_price = [...price];\n    if (index != -1) {\n      new_val.splice(index, 1);\n      new_val_to_show.splice(index, 1);\n      new_price.splice(index, 1);\n    } else {\n      new_val.push(id);\n      new_val_to_show.push(id + \". \" + book_name);\n      new_price.push(prc);\n    }\n    setvalues(new_val);\n    setPrice(new_price);\n    setValToShow(new_val_to_show);\n  };\n  return (\n    <>\n      <div className=\"mb-3 ml-3\">\n        <p className=\"text-white\">Selected Books: </p>\n        <div className=\"d-flex space-between flex-wrap\">\n          {val_to_show.length > 0\n            ? val_to_show.map((element, index) => (\n                <Button\n                  key={index}\n                  color=\"success\"\n                  size=\"sm\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginRight: \"1rem\",\n                  }}\n                >\n                  {element}\n                </Button>\n              ))\n            : null}\n        </div>\n      </div>\n      <div className=\"d-flex\">\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"warning\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setIssue(true);\n            }}\n          >\n            Issue Book\n          </Button>\n        ) : null}\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"info\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setSell(true);\n            }}\n          >\n            Sell Book\n          </Button>\n        ) : null}\n      </div>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={\n                      values.filter((val) => val == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(\n                        element.id,\n                        element.book_name,\n                        element.price\n                      );\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <IssueModal\n        open={issue}\n        setopen={setIssue}\n        books_ids={values}\n        books_show={val_to_show}\n        book_issuer_data={book_issuer_data}\n        update={update}\n        setUpdate={setupdate}\n      />\n      <SellModal\n        open={sell}\n        setopen={setSell}\n        books_ids={values}\n        books_show={val_to_show}\n        book_issuer_data={book_issuer_data}\n        price={price}\n        update={update}\n        setUpdate={setupdate}\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\TabulationList.js",["2048","2049","2050","2051","2052","2053","2054","2055"],"J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\Products.js",["2056","2057","2058","2059","2060","2061"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Index from \"components/crud/Index\";\n\nimport uuid from \"react-uuid\";\nimport { Call } from \"services/API/Call\";\nimport CustomProductList from \"./CustomProductList\";\n\nexport default function Products(props) {\n  const { update, loading, indexed = true, query_tags } = props;\n  const [student_info, setStudentInfo] = useState({});\n  React.useEffect(() => {\n    if (query_tags.length > 0) {\n      console.log(query_tags);\n      let id = query_tags.filter(\n        (el) => el.title == \"Student ID\" || el.title == \"Student\"\n      )[0].value;\n      id = id.split(\" \");\n      id = id[0];\n      Call({ method: \"get\", url: \"students/student?student_id=\" + id })\n        .then((res) => {\n          if (res.length > 0) setStudentInfo(res[0]);\n          else setStudentInfo({});\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [query_tags, update]);\n  return (\n    <>\n      {Object.values(student_info).length > 0 ? (\n        <>\n          <div className=\"mb-3 ml-3\">\n            <p className=\"text-white\">User Info: </p>\n            <div className=\"d-flex space-between flex-wrap\">\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student Name: {student_info.student_name}\n              </Button>\n              <Button\n                color=\"warning\"\n                size=\"sm\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                Student ID: {student_info.student_identifier}\n              </Button>\n            </div>\n          </div>\n          {query_tags.length > 0 ? (\n            <>\n              <Index\n                title=\"Products List\"\n                list_url=\"/products/product?all=true\"\n                CustomListComponent={CustomProductList}\n                list_head={[\n                  {\n                    title: \"Product\",\n                    identifier: \"product_name\",\n                  },\n                  {\n                    title: \"Info\",\n                    identifier: \"product_info\",\n                  },\n                  {\n                    title: \"Price\",\n                    identifier: \"price\",\n                  },\n                  {\n                    title: \"Stock\",\n                    identifier: \"stock\",\n                  },\n                ]}\n                product_issuer_data={{\n                  product_issuer_type: \"student\",\n                  product_issued_to_id: student_info.student_id,\n                  product_issued_to_name: student_info.student_name,\n                }}\n              />\n            </>\n          ) : (\n            <div className=\"w-100 text-center\">\n              <Spinner color=\"white\" />\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\teachers\\exams\\MarkAssignment\\MarkAssignment.js",["2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079"],"import InputField from \"components/controls/InputField\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Form from \"reactstrap/lib/Form\";\nimport Input from \"reactstrap/lib/Input\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\nimport Toast from \"reactstrap/lib/Toast\";\nimport ToastBody from \"reactstrap/lib/ToastBody\";\nimport ToastHeader from \"reactstrap/lib/ToastHeader\";\nimport { Call } from \"services/API/Call\";\n\nexport default function MarkAssignment({ data }) {\n  const { exam_id, session_id, department_id, class_id, subject_id } = data;\n  const [calling, setCalling] = useState(true);\n  const [student_list, setStudentList] = useState([]);\n  const [show, setShow] = useState(false);\n  const [fail, setFail] = useState(false);\n  const deleteField = (idx) => {\n    let new_fields = [...mark_fields];\n    let new_data = [...form_data];\n    new_fields.splice(idx, 1);\n    new_data.map((el) => el.marks.splice(idx, 1));\n    setMarkFields(new_fields);\n    setFormData(new_data);\n  };\n  const validate = () => {\n    let status = false;\n    status = mark_fields.every((el) => {\n      return el.mark_name != \"\" && el.total_mark != \"\";\n    });\n    if (!status) return false;\n    status = form_data.every((el) =>\n      el.marks.length > 0\n        ? el.marks.every((element) => {\n            return (\n              element.title != \"\" &&\n              element.title != null &&\n              element.value != \"\" &&\n              element.value != null\n            );\n          })\n        : false\n    );\n    if (!status) return false;\n    return true;\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setCalling(true);\n      Call({\n        method: \"post\",\n        url: \"exams/marks\",\n        data: {\n          mark_structure_id,\n          exam_id,\n          session_id,\n          department_id,\n          class_id,\n          subject_id,\n          total_exam_mark,\n          mark_data: form_data,\n          mark_structure: mark_fields,\n        },\n      })\n        .then((res) => {\n          setCalling(false);\n          setShow(true);\n          setTimeout(() => setShow(false), 1500);\n          console.log(res);\n        })\n        .catch((err) => {\n          setCalling(false);\n          setFail(true);\n          setTimeout(() => setFail(false), 1500);\n          console.log(err);\n        });\n    }\n  };\n  const [form_data, setFormData] = useState([]);\n  const [mark_fields, setMarkFields] = useState([]);\n  const [mark_structure_id, setMarkStructureID] = useState(\"\");\n  const [total_exam_mark, setTotalExamMark] = useState();\n  React.useEffect(() => {\n    Call({\n      method: \"get\",\n      url:\n        \"exams/mark_structure?exam_id=\" + exam_id + \"&subject_id=\" + subject_id,\n    })\n      .then((res) => {\n        if (res[0] != null) {\n          const structure = JSON.parse(res[0].structure);\n\n          setTotalExamMark(res[0].total_exam_mark);\n          setMarkStructureID(res[0].id);\n          setMarkFields(\n            structure != undefined || structure != null ? structure : []\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n    Call({\n      method: \"get\",\n      url:\n        \"exams/student_marks?exam_id=\" +\n        exam_id +\n        \"&session_id=\" +\n        session_id +\n        \"&department_id=\" +\n        department_id +\n        \"&class_id=\" +\n        class_id +\n        \"&subject_id=\" +\n        subject_id,\n    })\n      .then((res) => {\n        let new_form_data = [];\n        res.map((el, idx) => {\n          const t_mark = JSON.parse(el.marks == null ? \"[]\" : el.marks).reduce(\n            (cb, val) =>\n              (cb = parseInt(cb) + parseInt(val.value != \"\" ? val.value : 0)),\n            0\n          );\n          new_form_data.push({\n            id: el.id,\n            student_id: el.student_id,\n            exam_id: el.exam_id,\n            subject_id: el.subject_id,\n            subject_type: false,\n            absent: false,\n            total_mark: t_mark,\n            marks: JSON.parse(el.marks == null ? \"[]\" : el.marks),\n          });\n        });\n        setFormData(new_form_data);\n        setStudentList(res);\n\n        setCalling(false);\n      })\n      .catch((err) => {\n        setCalling(false);\n        console.log(err);\n      });\n  }, []);\n  return (\n    <Form role=\"form\" onSubmit={handleSubmit}>\n      <Table className=\"align-items-center\" responsive>\n        <thead className=\"thead-light\">\n          <tr>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              #\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              ID\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Name\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Optional\n            </th>\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\n              Absent\n            </th>\n            <th\n              colSpan={mark_fields.length + 1}\n              className=\"text-center\"\n              style={{ padding: \"0.1rem\" }}\n            >\n              Marks (Total Mark :{\" \"}\n              {mark_fields.reduce(\n                (cb, val) =>\n                  (cb =\n                    parseInt(cb) +\n                    parseInt(val.total_mark != \"\" ? val.total_mark : 0)),\n                0\n              )}\n              )\n            </th>\n          </tr>\n          <tr>\n            {mark_fields.length > 0\n              ? mark_fields.map((el, idx) => (\n                  <th key={idx} style={{ padding: \"0.1rem\" }}>\n                    <Button\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={() => deleteField(idx)}\n                    >\n                      <i className=\"fas fa-times\" />\n                    </Button>\n                    <InputField\n                      style={{ minWidth: \"110px\" }}\n                      type=\"text\"\n                      placeholder=\"Mark Name\"\n                      handleChange={(e) => {\n                        let new_val = [...mark_fields];\n                        new_val[idx].mark_name = e.target.value;\n                        let new_data = [...form_data];\n                        new_data.map(\n                          (element, index) =>\n                            (element[\"marks\"][idx].title = e.target.value)\n                        );\n                        setFormData(new_data);\n                        setMarkFields(new_val);\n                      }}\n                      value={mark_fields[idx].mark_name}\n                      error={mark_fields[idx].mark_name == \"\"}\n                      disabled={calling}\n                    />\n                    <InputField\n                      style={{ minWidth: \"50px\" }}\n                      type=\"text\"\n                      placeholder=\"Total Mark\"\n                      handleChange={(e) => {\n                        let new_val = [...mark_fields];\n                        new_val[idx].total_mark = e.target.value;\n                        let t_xm_mrk = mark_fields.reduce(\n                          (cb, val) =>\n                            (cb =\n                              parseInt(cb) +\n                              parseInt(\n                                val.total_mark != \"\" ? val.total_mark : 0\n                              )),\n                          0\n                        );\n                        setTotalExamMark(t_xm_mrk);\n                        setMarkFields(new_val);\n                      }}\n                      value={mark_fields[idx].total_mark}\n                      error={mark_fields[idx].total_mark == \"\"}\n                      disabled={calling}\n                    />\n                  </th>\n                ))\n              : null}\n            <th className=\"text-center\">\n              <Button\n                color=\"info\"\n                size=\"sm\"\n                onClick={() => {\n                  setMarkFields([\n                    ...mark_fields,\n                    { mark_name: \"\", total_mark: \"\" },\n                  ]);\n                  let new_data = [...form_data];\n                  new_data.map((el, idx) => {\n                    el[\"marks\"] = [\n                      ...el[\"marks\"],\n                      {\n                        title: \"\",\n                        value: \"0\",\n                      },\n                    ];\n                  });\n                  setFormData(new_data);\n                }}\n                disabled={calling}\n              >\n                <i className=\"fas fa-plus\" />\n              </Button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {student_list.length > 0\n            ? student_list.map((el, idx) => (\n                <tr key={idx}>\n                  <td>{idx + 1}</td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    {el[\"student_identifier\"]}\n                  </td>\n                  <td style={{ padding: \"0.1rem\" }}>{el[\"student_name\"]}</td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    <InputField\n                      type=\"checkbox\"\n                      checked={form_data[idx].subject_type}\n                      handleChange={() => {\n                        let new_data = [...form_data];\n                        new_data[idx].subject_type = !new_data[idx]\n                          .subject_type;\n                        setFormData(new_data);\n                      }}\n                    />\n                  </td>\n                  <td style={{ padding: \"0.1rem\" }}>\n                    <InputField\n                      type=\"checkbox\"\n                      checked={form_data[idx].absent}\n                      handleChange={() => {\n                        let new_data = [...form_data];\n                        new_data[idx].absent = !new_data[idx].absent;\n                        setFormData(new_data);\n                      }}\n                    />\n                  </td>\n\n                  {mark_fields.map((element, index) => (\n                    <td key={index} style={{ padding: \"0.1rem\" }}>\n                      <InputField\n                        style={{ minWidth: \"80px\" }}\n                        type=\"text\"\n                        placeholder={mark_fields[index].mark_name}\n                        handleChange={(e) => {\n                          let new_data = [...form_data];\n                          new_data[idx][\"marks\"][index].value = e.target.value;\n                          new_data[idx].total_mark = new_data[idx][\n                            \"marks\"\n                          ].reduce(\n                            (cb, val) =>\n                              (cb =\n                                parseInt(cb) +\n                                parseInt(val.value != \"\" ? val.value : 0)),\n                            0\n                          );\n                          setFormData(new_data);\n                        }}\n                        value={form_data[idx][\"marks\"][index].value}\n                        error={form_data[idx][\"marks\"][index].value === \"\"}\n                        disabled={calling}\n                      />\n                    </td>\n                  ))}\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n      <div style={{ width: \"100%\", padding: \"1.5rem\", textAlign: \"center\" }}>\n        <Button color=\"primary\" type=\"submit\" disabled={calling}>\n          {calling ? <Spinner animation=\"border\" variant=\"dark\" /> : \"Submit\"}\n        </Button>\n      </div>\n      <Alert\n        color=\"success\"\n        isOpen={show}\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\n        fade={true}\n      >\n        Successfully Assigned Marks!\n      </Alert>\n      <Alert\n        color=\"danger\"\n        isOpen={fail}\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\n        fade={true}\n      >\n        Failed To Assign Marks!\n      </Alert>\n    </Form>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\ReturnModal.js",["2080","2081","2082"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nexport default function ReturnModal(props) {\n  const { open, setopen, book, book_issuer_data, update, setUpdate } = props;\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [returned_at, setReturnedAt] = useState(\"\");\n  const alert_message_time = 2500;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (returned_at != \"\" && returned_at != null && returned_at != undefined) {\n      const data = { returned_at };\n      const request = {\n        method: \"put\",\n        url: \"library/issue_books/\" + book.id,\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"Book\"\n                    name=\"book_name\"\n                    value={book[\"book_name\"]}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"Issued Date\"\n                    name=\"book_issued_date\"\n                    value={book[\"book_issued_date\"]}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"text\"\n                    placeholder=\"To Return Date\"\n                    name=\"book_return_date\"\n                    value={book.book_return_date}\n                    disabled={true}\n                  />\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"Returned Date\"\n                    name=\"returned_at\"\n                    value={returned_at}\n                    handleChange={(e) => setReturnedAt(e.target.value)}\n                    disabled={calling}\n                  />\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssuedBookDelete.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\student_payment\\PaymentInput.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\payments\\due_payment\\PaymentInput.js",[],"J:\\Web\\school_argon\\src\\components\\dashboard\\students\\class_assignment\\Promote.js",["2083","2084","2085","2086","2087","2088"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function Promote(props) {\n  const {\n    url,\n    open,\n    setOpen,\n    add_data,\n    initial_values,\n    update,\n    setUpdate,\n    std_data,\n    file = false,\n    modal_size = \"sm\",\n    title,\n  } = props;\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initial_values\n  );\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    // eslint-disable-next-line array-callback-return\n    Object.values(add_data).map((element, index) => {\n      if (!element.required) {\n        temp[element.name] = false;\n      } else if (element.name in fieldValues) {\n        temp[element.name] = ValidateInput(element, fieldValues);\n      }\n    });\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values)\n      // eslint-disable-next-line eqeqeq\n      return Object.values(temp).every((x) => x == false);\n  };\n  const alert_message_time = 4000;\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      let request = {};\n      const data = { ...values, student_id: std_data.student_id };\n      request = {\n        method: \"post\",\n        url: url,\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setUpdate(!update);\n          setSuccessMessage(res.message);\n          setCalling(false);\n          resetForm();\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size={modal_size}\n        isOpen={open}\n        toggle={() => setOpen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            {title != undefined ? title : \"Add\"}\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setOpen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <Button color=\"warning\" size=\"sm\">\n                Student Name: {std_data.student_name}\n              </Button>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{\n                    fontSize: \"12px\",\n                    textAlign: \"center\",\n                    whiteSpace: \"pre-wrap\",\n                  }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{\n                    fontSize: \"12px\",\n                    textAlign: \"center\",\n                    whiteSpace: \"pre-wrap\",\n                  }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                {add_data.map((element, index) => {\n                  return element.customInput == undefined ? (\n                    <InputField\n                      key={index}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      multiple={\n                        element.multiple != null &&\n                        element.multiple != undefined\n                          ? true\n                          : false\n                      }\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  ) : (\n                    <element.customInput\n                      key={index}\n                      title={element.title}\n                      type={element.type}\n                      placeholder={element.placeholder}\n                      name={element.name}\n                      handleChange={handleInputChange}\n                      value={values[element.name]}\n                      error={errors[element.name]}\n                      disabled={\n                        element.disabled != undefined\n                          ? element.disabled\n                          : calling\n                      }\n                      children={element.children}\n                      options={element.options}\n                      setState={element.setState}\n                    />\n                  );\n                })}\n\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkAssignModal.js",["2089","2090","2091","2092","2093","2094","2095","2096","2097","2098"],"J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\SellModal.js",["2099","2100","2101","2102","2103"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    books_show,\n    books_ids,\n    book_issuer_data,\n    price,\n  } = props;\n  const [book_ids, setBookIds] = useState([]);\n  const [book_to_show, setBookToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState([]);\n  const alert_message_time = 2500;\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setBookIds(books_ids.length > 0 ? books_ids : []);\n    setBookToShow(books_show.length > 0 ? books_show : []);\n    let val = [];\n    books_show.map((el, idx) =>\n      val.push({\n        book_id: books_ids[idx],\n        info: el,\n        amount: price[idx],\n        quantity: 1,\n        price: price[idx],\n      })\n    );\n    setValues(val);\n  }, [books_ids]);\n\n  const handleChange = (e, idx) => {\n    const { name, value } = e.target;\n    let new_val = [...values];\n    new_val[idx][\"quantity\"] = value;\n    new_val[idx][\"amount\"] = parseInt(value) * parseInt(price[idx]);\n    setValues(new_val);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { values, ...book_issuer_data };\n      const request = {\n        method: \"post\",\n        url: \"library/sell_books\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Books: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {book_to_show.length > 0\n                    ? book_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...book_ids];\n                            new_val.splice(index, 1);\n                            setBookIds(new_val);\n                            new_val = [...book_to_show];\n                            new_val.splice(index, 1);\n                            setBookToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  {values.length > 0\n                    ? values.map((el, idx) => (\n                        <div className=\"bg-dark my-2 p-3\">\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Book\"\n                            value={el.info}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Price\"\n                            value={el.amount}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"number\"\n                            placeholder=\"Quantity\"\n                            value={el.quantity}\n                            handleChange={(e) => handleChange(e, idx)}\n                            disabled={calling}\n                            min={0}\n                            max={100}\n                          />\n                        </div>\n                      ))\n                    : null}\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\library\\BookOperation\\IssueModal.js",["2104","2105","2106","2107","2108","2109","2110"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    books_show,\n    books_ids,\n    book_issuer_data,\n  } = props;\n  const [book_ids, setBookIds] = useState([]);\n  const [book_to_show, setBookToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState({\n    book_issued_date: \"\",\n    book_return_date: \"\",\n  });\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setBookIds(books_ids.length > 0 ? books_ids : []);\n    setBookToShow(books_show.length > 0 ? books_show : []);\n  }, [books_ids]);\n  const alert_message_time = 2500;\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { ...values, ...book_issuer_data, book_ids };\n      const request = {\n        method: \"post\",\n        url: \"library/issue_books\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Books\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {book_issuer_data.book_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {book_issuer_data.book_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Books: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {book_to_show.length > 0\n                    ? book_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...book_ids];\n                            new_val.splice(index, 1);\n                            setBookIds(new_val);\n                            new_val = [...book_to_show];\n                            new_val.splice(index, 1);\n                            setBookToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"Issued Date\"\n                    name=\"book_issued_date\"\n                    value={values[\"book_issued_date\"]}\n                    error={values[\"book_issued_date\"] == \"\"}\n                    handleChange={handleChange}\n                  />\n                  <InputField\n                    type=\"date\"\n                    placeholder=\"To Return Date\"\n                    name=\"book_return_date\"\n                    value={values.book_return_date}\n                    error={\n                      values.book_return_date == \"\" ||\n                      values.book_return_date == undefined ||\n                      values.book_return_date == null\n                    }\n                    handleChange={handleChange}\n                  />\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\CustomProductList.js",["2111","2112","2113","2114","2115"],"import React, { useState } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport Table from \"reactstrap/lib/Table\";\n\nimport uuid from \"react-uuid\";\nimport InputField from \"components/controls/InputField\";\nimport SellModal from \"./SellModal\";\n\nexport default function CustomProductList(props) {\n  const {\n    update,\n    setupdate,\n    list,\n    list_head,\n    loading,\n    indexed = true,\n    product_issuer_data,\n  } = props;\n  const [values, setvalues] = React.useState([]);\n  const [price, setPrice] = React.useState([]);\n  const [val_to_show, setValToShow] = React.useState([]);\n  const [issue, setIssue] = useState(false);\n  const [sell, setSell] = useState(false);\n  const handleChange = (id, product_name, prc) => {\n    let new_val = [...values];\n    const index = new_val.indexOf(id);\n    let new_val_to_show = [...val_to_show];\n    let new_price = [...price];\n    if (index != -1) {\n      new_val.splice(index, 1);\n      new_val_to_show.splice(index, 1);\n      new_price.splice(index, 1);\n    } else {\n      new_val.push(id);\n      new_val_to_show.push(id + \". \" + product_name);\n      new_price.push(prc);\n    }\n    setvalues(new_val);\n    setPrice(new_price);\n    setValToShow(new_val_to_show);\n  };\n  return (\n    <>\n      <div className=\"mb-3 ml-3\">\n        <p className=\"text-white\">Selected Products: </p>\n        <div className=\"d-flex space-between flex-wrap\">\n          {val_to_show.length > 0\n            ? val_to_show.map((element, index) => (\n                <Button\n                  key={index}\n                  color=\"success\"\n                  size=\"sm\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginRight: \"1rem\",\n                  }}\n                >\n                  {element}\n                </Button>\n              ))\n            : null}\n        </div>\n      </div>\n      <div className=\"d-flex\">\n        {list.length > 0 && values.length > 0 ? (\n          <Button\n            color=\"info\"\n            style={{\n              maxWidth: \"200px\",\n              marginLeft: \"1.5rem\",\n              marginBottom: \"1.5rem\",\n              float: \"left\",\n            }}\n            onClick={() => {\n              setSell(true);\n            }}\n          >\n            Sell Product\n          </Button>\n        ) : null}\n      </div>\n      <Table className=\"align-items-center table-dark table-flush\" responsive>\n        <thead className=\"thead-dark\">\n          <tr>\n            <th> </th>\n            {list_head.map((item, index) => (\n              <th key={uuid()}>{item.title}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {loading ? (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                <Spinner color=\"primary\" />\n              </td>\n            </tr>\n          ) : typeof list == \"object\" && list.length > 0 ? (\n            list.map((element, index) => (\n              <tr key={uuid()}>\n                <td>\n                  <InputField\n                    type=\"checkbox\"\n                    placeholder=\"\"\n                    checked={\n                      values.filter((val) => val == element.id).length > 0\n                    }\n                    handleChange={() => {\n                      handleChange(\n                        element.id,\n                        element.product_name,\n                        element.price\n                      );\n                    }}\n                  />\n                </td>\n                {list_head.map((item, index) => (\n                  <th key={uuid()} style={{ whiteSpace: \"pre\" }}>\n                    {element[item.identifier]}\n                  </th>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={list_head.length + 3} className=\"text-center\">\n                Found Nothing\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <SellModal\n        open={sell}\n        setopen={setSell}\n        products_ids={values}\n        products_show={val_to_show}\n        product_issuer_data={product_issuer_data}\n        price={price}\n        update={update}\n        setUpdate={setupdate}\n      />\n    </>\n  );\n}\n","J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\Tabulation\\TableRow.js",["2116","2117"],"J:\\Web\\school_argon\\src\\components\\dashboard\\exams\\MarkAssignment\\MarkAssignment.js",["2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137"],"import InputField from \"components/controls/InputField\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"reactstrap/lib/Alert\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport Form from \"reactstrap/lib/Form\";\r\nimport Input from \"reactstrap/lib/Input\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Table from \"reactstrap/lib/Table\";\r\nimport Toast from \"reactstrap/lib/Toast\";\r\nimport ToastBody from \"reactstrap/lib/ToastBody\";\r\nimport ToastHeader from \"reactstrap/lib/ToastHeader\";\r\nimport { Call } from \"services/API/Call\";\r\n\r\nexport default function MarkAssignment({ data }) {\r\n  const { exam_id, session_id, department_id, class_id, subject_id } = data;\r\n  const [calling, setCalling] = useState(true);\r\n  const [student_list, setStudentList] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [fail, setFail] = useState(false);\r\n  const deleteField = (idx) => {\r\n    let new_fields = [...mark_fields];\r\n    let new_data = [...form_data];\r\n    new_fields.splice(idx, 1);\r\n    new_data.map((el) => el.marks.splice(idx, 1));\r\n    setMarkFields(new_fields);\r\n    setFormData(new_data);\r\n  };\r\n  const validate = () => {\r\n    let status = false;\r\n    console.log(\"Mark Fields:\", mark_fields);\r\n    status = mark_fields.every((el) => {\r\n      return el.mark_name != \"\" && el.total_mark != \"\";\r\n    });\r\n    if (!status) return false;\r\n    status = form_data.every((el) => {\r\n      console.log(el.marks);\r\n      return el.marks.length > 0\r\n        ? el.marks.every((element) => {\r\n            return (\r\n              element.title != \"\" &&\r\n              element.title != null &&\r\n              element.value != \"\" &&\r\n              element.value != null\r\n            );\r\n          })\r\n        : false;\r\n    });\r\n    if (!status) return false;\r\n    return true;\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      setCalling(true);\r\n      Call({\r\n        method: \"post\",\r\n        url: \"exams/marks\",\r\n        data: {\r\n          mark_structure_id,\r\n          exam_id,\r\n          session_id,\r\n          department_id,\r\n          class_id,\r\n          subject_id,\r\n          total_exam_mark,\r\n          mark_data: form_data,\r\n          mark_structure: mark_fields,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setCalling(false);\r\n          setShow(true);\r\n          setTimeout(() => setShow(false), 1500);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          setCalling(false);\r\n          setFail(true);\r\n          setTimeout(() => setFail(false), 1500);\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      console.log(\"Invalidated!\");\r\n    }\r\n  };\r\n  const [form_data, setFormData] = useState([]);\r\n  const [mark_fields, setMarkFields] = useState([]);\r\n  const [mark_structure_id, setMarkStructureID] = useState(\"\");\r\n  const [total_exam_mark, setTotalExamMark] = useState();\r\n  React.useEffect(() => {\r\n    Call({\r\n      method: \"get\",\r\n      url:\r\n        \"exams/mark_structure?exam_id=\" + exam_id + \"&subject_id=\" + subject_id,\r\n    })\r\n      .then((res) => {\r\n        let structure = null;\r\n        if (res[0] != null) {\r\n          structure = JSON.parse(res[0].structure);\r\n          setTotalExamMark(res[0].total_exam_mark);\r\n          setMarkStructureID(res[0].id);\r\n          setMarkFields(\r\n            structure != undefined || structure != null ? structure : []\r\n          );\r\n        }\r\n\r\n        Call({\r\n          method: \"get\",\r\n          url:\r\n            \"exams/student_marks?exam_id=\" +\r\n            exam_id +\r\n            \"&session_id=\" +\r\n            session_id +\r\n            \"&department_id=\" +\r\n            department_id +\r\n            \"&class_id=\" +\r\n            class_id +\r\n            \"&subject_id=\" +\r\n            subject_id,\r\n        })\r\n          .then((res) => {\r\n            let new_form_data = [];\r\n            res.map((el, idx) => {\r\n              const t_mark = JSON.parse(\r\n                el.marks == null ? \"[]\" : el.marks\r\n              ).reduce(\r\n                (cb, val) =>\r\n                  (cb =\r\n                    parseInt(cb) + parseInt(val.value != \"\" ? val.value : 0)),\r\n                0\r\n              );\r\n              let std_marks = [];\r\n              if (\r\n                structure != undefined &&\r\n                structure != null &&\r\n                el.marks == null\r\n              ) {\r\n                structure.map((element) =>\r\n                  std_marks.push({ title: element.mark_name, value: \"0\" })\r\n                );\r\n              }\r\n              new_form_data.push({\r\n                id: el.id,\r\n                student_id: el.student_id,\r\n                exam_id: el.exam_id,\r\n                subject_id: el.subject_id,\r\n                subject_type: false,\r\n                absent: false,\r\n                total_mark: t_mark,\r\n                marks: el.marks == null ? std_marks : JSON.parse(el.marks),\r\n              });\r\n            });\r\n            setFormData(new_form_data);\r\n            setStudentList(res);\r\n\r\n            setCalling(false);\r\n          })\r\n          .catch((err) => {\r\n            setCalling(false);\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <Form role=\"form\" onSubmit={handleSubmit}>\r\n      <Table className=\"align-items-center\" responsive>\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\r\n              #\r\n            </th>\r\n            <th rowSpan=\"2\" style={{ padding: \"0.1rem\" }}>\r\n              Name\r\n            </th>\r\n            <th\r\n              colSpan={mark_fields.length + 1}\r\n              className=\"text-center\"\r\n              style={{ padding: \"0.1rem\" }}\r\n            >\r\n              Marks (Total Mark :{\" \"}\r\n              {mark_fields.reduce(\r\n                (cb, val) =>\r\n                  (cb =\r\n                    parseInt(cb) +\r\n                    parseInt(val.total_mark != \"\" ? val.total_mark : 0)),\r\n                0\r\n              )}\r\n              )\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            {mark_fields.length > 0\r\n              ? mark_fields.map((el, idx) => (\r\n                  <th key={idx} style={{ padding: \"0.1rem\" }}>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => deleteField(idx)}\r\n                    >\r\n                      <i className=\"fas fa-times\" />\r\n                    </Button>\r\n                    <InputField\r\n                      style={{ minWidth: \"110px\" }}\r\n                      type=\"text\"\r\n                      placeholder=\"Mark Name\"\r\n                      handleChange={(e) => {\r\n                        let new_val = [...mark_fields];\r\n                        new_val[idx].mark_name = e.target.value;\r\n                        let new_data = [...form_data];\r\n                        new_data.map((element, index) => {\r\n                          if (element[\"marks\"][idx])\r\n                            element[\"marks\"][idx].title = e.target.value;\r\n                        });\r\n                        setFormData(new_data);\r\n                        setMarkFields(new_val);\r\n                      }}\r\n                      value={mark_fields[idx].mark_name}\r\n                      error={mark_fields[idx].mark_name == \"\"}\r\n                      disabled={calling}\r\n                    />\r\n                    <InputField\r\n                      style={{ minWidth: \"50px\" }}\r\n                      type=\"text\"\r\n                      placeholder=\"Total Mark\"\r\n                      handleChange={(e) => {\r\n                        let new_val = [...mark_fields];\r\n                        new_val[idx].total_mark = e.target.value;\r\n                        let t_xm_mrk = mark_fields.reduce(\r\n                          (cb, val) =>\r\n                            (cb =\r\n                              parseInt(cb) +\r\n                              parseInt(\r\n                                val.total_mark != \"\" ? val.total_mark : 0\r\n                              )),\r\n                          0\r\n                        );\r\n                        setTotalExamMark(t_xm_mrk);\r\n                        setMarkFields(new_val);\r\n                      }}\r\n                      value={mark_fields[idx].total_mark}\r\n                      error={mark_fields[idx].total_mark == \"\"}\r\n                      disabled={calling}\r\n                    />\r\n                  </th>\r\n                ))\r\n              : null}\r\n            <th className=\"text-center\">\r\n              <Button\r\n                color=\"info\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  setMarkFields([\r\n                    ...mark_fields,\r\n                    { mark_name: \"\", total_mark: \"\" },\r\n                  ]);\r\n                  let new_data = [...form_data];\r\n                  new_data.map((el, idx) => {\r\n                    el[\"marks\"] = [\r\n                      ...el[\"marks\"],\r\n                      {\r\n                        title: \"\",\r\n                        value: \"0\",\r\n                      },\r\n                    ];\r\n                  });\r\n                  setFormData(new_data);\r\n                }}\r\n                disabled={calling}\r\n              >\r\n                <i className=\"fas fa-plus\" />\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {student_list.length > 0\r\n            ? student_list.map((el, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{el[\"role\"]}</td>\r\n                  <td style={{ padding: \"0.1rem\" }}>{el[\"student_name\"]}</td>\r\n\r\n                  {mark_fields.map((element, index) => (\r\n                    <td key={index} style={{ padding: \"0.1rem\" }}>\r\n                      <InputField\r\n                        style={{ minWidth: \"80px\" }}\r\n                        type=\"text\"\r\n                        placeholder={mark_fields[index].mark_name}\r\n                        handleChange={(e) => {\r\n                          let new_data = [...form_data];\r\n                          if (new_data[idx][\"marks\"]) {\r\n                            new_data[idx][\"marks\"][index].value =\r\n                              e.target.value;\r\n                            new_data[idx].total_mark = new_data[idx][\r\n                              \"marks\"\r\n                            ].reduce(\r\n                              (cb, val) =>\r\n                                (cb =\r\n                                  parseInt(cb) +\r\n                                  parseInt(val.value != \"\" ? val.value : 0)),\r\n                              0\r\n                            );\r\n                            setFormData(new_data);\r\n                          } else {\r\n                          }\r\n                        }}\r\n                        value={form_data[idx][\"marks\"][index]?.value}\r\n                        error={form_data[idx][\"marks\"][index]?.value === \"\"}\r\n                        disabled={calling}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n      <div style={{ width: \"100%\", padding: \"1.5rem\", textAlign: \"center\" }}>\r\n        <Button color=\"primary\" type=\"submit\" disabled={calling}>\r\n          {calling ? <Spinner animation=\"border\" variant=\"dark\" /> : \"Submit\"}\r\n        </Button>\r\n      </div>\r\n      <Alert\r\n        color=\"success\"\r\n        isOpen={show}\r\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\r\n        fade={true}\r\n      >\r\n        Successfully Assigned Marks!\r\n      </Alert>\r\n      <Alert\r\n        color=\"danger\"\r\n        isOpen={fail}\r\n        style={{ maxWidth: \"250px\", margin: \"auto\" }}\r\n        fade={true}\r\n      >\r\n        Failed To Assign Marks!\r\n      </Alert>\r\n    </Form>\r\n  );\r\n}\r\n","J:\\Web\\school_argon\\src\\components\\dashboard\\products\\product_operation\\SellModal.js",["2138","2139","2140","2141","2142"],"import { useForm } from \"components/useForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport Button from \"reactstrap/lib/Button\";\nimport Card from \"reactstrap/lib/Card\";\nimport CardBody from \"reactstrap/lib/CardBody\";\nimport CardHeader from \"reactstrap/lib/CardHeader\";\nimport Form from \"reactstrap/lib/Form\";\nimport Modal from \"reactstrap/lib/Modal\";\nimport Spinner from \"reactstrap/lib/Spinner\";\nimport { Call } from \"services/API/Call\";\nimport InputField from \"components/controls/InputField\";\nimport { ValidateInput } from \"components/crud/ValidateInput\";\nexport default function IssueModal(props) {\n  const {\n    update,\n    setUpdate,\n    open,\n    setopen,\n    products_show,\n    products_ids,\n    product_issuer_data,\n    price,\n  } = props;\n  const [product_ids, setProductIds] = useState([]);\n  const [product_to_show, setProductToShow] = useState([]);\n  const [failMessage, setFailMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [calling, setCalling] = useState(false);\n  const [values, setValues] = useState([]);\n  const alert_message_time = 2500;\n  const validate = (fieldValues = values) => {\n    return Object.values(fieldValues).every((el) => el != \"\");\n  };\n  React.useEffect(() => {\n    setProductIds(products_ids.length > 0 ? products_ids : []);\n    setProductToShow(products_show.length > 0 ? products_show : []);\n    let val = [];\n    products_show.map((el, idx) =>\n      val.push({\n        product_id: products_ids[idx],\n        info: el,\n        amount: price[idx],\n        quantity: 1,\n        price: price[idx],\n      })\n    );\n    setValues(val);\n  }, [products_ids]);\n\n  const handleChange = (e, idx) => {\n    const { name, value } = e.target;\n    let new_val = [...values];\n    new_val[idx][\"quantity\"] = value;\n    new_val[idx][\"amount\"] = parseInt(value) * parseInt(price[idx]);\n    setValues(new_val);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setCalling(true);\n    if (validate()) {\n      const data = { values, ...product_issuer_data };\n      const request = {\n        method: \"post\",\n        url: \"products/sell_products\",\n        data: data,\n      };\n      Call(request)\n        .then((res) => {\n          setSuccessMessage(res.message);\n          setCalling(false);\n          setUpdate(!update);\n          setTimeout(() => setSuccessMessage(\"\"), alert_message_time);\n        })\n        .catch((err) => {\n          setFailMessage(err);\n          setTimeout(() => setFailMessage(\"\"), alert_message_time * 2);\n          setCalling(false);\n        });\n    } else setCalling(false);\n  };\n  return (\n    <div>\n      <Modal\n        className=\"modal-dialog-centered\"\n        size=\"sm\"\n        isOpen={open}\n        toggle={() => setopen(false)}\n        modalTransition={{ timeout: 50 }}\n      >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n            Issue Products\n          </h5>\n          <button\n            aria-label=\"Close\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            type=\"button\"\n            onClick={() => setopen(false)}\n          >\n            <span aria-hidden={true}>×</span>\n          </button>\n        </div>\n        <div className=\"modal-body p-0\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent p-1\">\n              <div className=\"mb-3 ml-3\">\n                <p className=\"text-dark\">User Info: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student Name: {product_issuer_data.product_issued_to_name}\n                  </Button>\n                  <Button\n                    color=\"warning\"\n                    size=\"sm\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      marginRight: \"1rem\",\n                    }}\n                  >\n                    Student ID: {product_issuer_data.product_issued_to_id}\n                  </Button>\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-dark\">Selected Products: </p>\n                <div className=\"d-flex space-between flex-wrap\">\n                  {product_to_show.length > 0\n                    ? product_to_show.map((element, index) => (\n                        <Button\n                          key={index}\n                          color=\"success\"\n                          size=\"sm\"\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"0.3rem\",\n                          }}\n                          onClick={() => {\n                            let new_val = [...product_ids];\n                            new_val.splice(index, 1);\n                            setProductIds(new_val);\n                            new_val = [...product_to_show];\n                            new_val.splice(index, 1);\n                            setProductToShow(new_val);\n                          }}\n                        >\n                          {element}\n                        </Button>\n                      ))\n                    : null}\n                </div>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-4\">\n              <Form role=\"form\" onSubmit={handleSubmit}>\n                <div className=\"text-center\" style={{ clear: \"left\" }}>\n                  {values.length > 0\n                    ? values.map((el, idx) => (\n                        <div className=\"bg-dark my-2 p-3\">\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Product\"\n                            value={el.info}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"text\"\n                            placeholder=\"Price\"\n                            value={el.amount}\n                            disabled={true}\n                          />\n                          <InputField\n                            type=\"number\"\n                            placeholder=\"Quantity\"\n                            value={el.quantity}\n                            handleChange={(e) => handleChange(e, idx)}\n                            disabled={calling}\n                            min={0}\n                            max={100}\n                          />\n                        </div>\n                      ))\n                    : null}\n                  <Button\n                    className=\"my-4\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={calling}\n                  >\n                    {calling ? (\n                      <Spinner animation=\"border\" variant=\"dark\" />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </Button>\n                </div>\n              </Form>\n              {failMessage !== undefined && failMessage.length > 0 ? (\n                <Alert\n                  color=\"danger\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {failMessage}\n                </Alert>\n              ) : null}\n\n              {successMessage !== undefined && successMessage.length > 0 ? (\n                <Alert\n                  color=\"success\"\n                  style={{ fontSize: \"12px\", textAlign: \"center\" }}\n                >\n                  {successMessage}\n                </Alert>\n              ) : null}\n            </CardBody>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n",{"ruleId":"2143","replacedBy":"2144"},{"ruleId":"2145","replacedBy":"2146"},{"ruleId":"2147","severity":1,"message":"2148","line":7,"column":10,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":13},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":18,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":20},{"ruleId":"2147","severity":1,"message":"2155","line":38,"column":9,"nodeType":"2149","messageId":"2150","endLine":38,"endColumn":16},{"ruleId":"2151","severity":1,"message":"2156","line":20,"column":24,"nodeType":"2153","messageId":"2154","endLine":20,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2156","line":21,"column":22,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":24,"column":49,"nodeType":"2153","messageId":"2154","endLine":24,"endColumn":51},{"ruleId":"2147","severity":1,"message":"2157","line":2,"column":16,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":26},{"ruleId":"2147","severity":1,"message":"2158","line":3,"column":8,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":20},{"ruleId":"2147","severity":1,"message":"2159","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":13},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":22,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2156","line":36,"column":45,"nodeType":"2153","messageId":"2154","endLine":36,"endColumn":47},{"ruleId":"2151","severity":1,"message":"2156","line":33,"column":49,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":51},{"ruleId":"2160","severity":1,"message":"2161","line":35,"column":6,"nodeType":"2162","endLine":35,"endColumn":10,"suggestions":"2163"},{"ruleId":"2151","severity":1,"message":"2156","line":48,"column":49,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":51},{"ruleId":"2160","severity":1,"message":"2164","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":8,"suggestions":"2165"},{"ruleId":"2160","severity":1,"message":"2166","line":44,"column":6,"nodeType":"2162","endLine":44,"endColumn":8,"suggestions":"2167"},{"ruleId":"2160","severity":1,"message":"2166","line":44,"column":6,"nodeType":"2162","endLine":44,"endColumn":8,"suggestions":"2168"},{"ruleId":"2160","severity":1,"message":"2169","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":8,"suggestions":"2170"},{"ruleId":"2147","severity":1,"message":"2171","line":7,"column":8,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":14},{"ruleId":"2160","severity":1,"message":"2166","line":44,"column":6,"nodeType":"2162","endLine":44,"endColumn":8,"suggestions":"2172"},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":55,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":17,"column":21,"nodeType":"2153","messageId":"2154","endLine":17,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":53,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":21,"column":21,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":55,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":31,"column":21,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":32,"column":55,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":35,"column":21,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":36,"column":53,"nodeType":"2153","messageId":"2154","endLine":36,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":21,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":55,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":49,"column":21,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":53,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":53,"column":21,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":54,"column":55,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":57,"column":21,"nodeType":"2153","messageId":"2154","endLine":57,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":58,"column":55,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2173","line":2,"column":10,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":33},{"ruleId":"2147","severity":1,"message":"2174","line":3,"column":17,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":27},{"ruleId":"2175","severity":1,"message":"2176","line":15,"column":27,"nodeType":"2177","messageId":"2178","endLine":15,"endColumn":29},{"ruleId":"2175","severity":1,"message":"2176","line":24,"column":27,"nodeType":"2177","messageId":"2178","endLine":24,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":95,"column":21,"nodeType":"2153","messageId":"2154","endLine":95,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":96,"column":53,"nodeType":"2153","messageId":"2154","endLine":96,"endColumn":55},{"ruleId":"2175","severity":1,"message":"2176","line":12,"column":27,"nodeType":"2177","messageId":"2178","endLine":12,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":52,"column":21,"nodeType":"2153","messageId":"2154","endLine":52,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":53,"column":53,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":55},{"ruleId":"2175","severity":1,"message":"2176","line":14,"column":27,"nodeType":"2177","messageId":"2178","endLine":14,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":29,"column":21,"nodeType":"2153","messageId":"2154","endLine":29,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":30,"column":55,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":33,"column":21,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":34,"column":53,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":37,"column":21,"nodeType":"2153","messageId":"2154","endLine":37,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":38,"column":55,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":41,"column":21,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":55,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2179","line":3,"column":17,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2156","line":69,"column":21,"nodeType":"2153","messageId":"2154","endLine":69,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":70,"column":55,"nodeType":"2153","messageId":"2154","endLine":70,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":73,"column":21,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":74,"column":53,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":77,"column":21,"nodeType":"2153","messageId":"2154","endLine":77,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":78,"column":55,"nodeType":"2153","messageId":"2154","endLine":78,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":81,"column":21,"nodeType":"2153","messageId":"2154","endLine":81,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":82,"column":55,"nodeType":"2153","messageId":"2154","endLine":82,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":27,"column":21,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":28,"column":55,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":31,"column":21,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":32,"column":53,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":35,"column":21,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":36,"column":55,"nodeType":"2153","messageId":"2154","endLine":36,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":21,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":55,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2179","line":3,"column":17,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":24},{"ruleId":"2147","severity":1,"message":"2180","line":3,"column":26,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2156","line":51,"column":21,"nodeType":"2153","messageId":"2154","endLine":51,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":52,"column":55,"nodeType":"2153","messageId":"2154","endLine":52,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":55,"column":21,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":56,"column":53,"nodeType":"2153","messageId":"2154","endLine":56,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":59,"column":21,"nodeType":"2153","messageId":"2154","endLine":59,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":60,"column":55,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":63,"column":21,"nodeType":"2153","messageId":"2154","endLine":63,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":64,"column":55,"nodeType":"2153","messageId":"2154","endLine":64,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":74,"column":21,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":75,"column":55,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":78,"column":21,"nodeType":"2153","messageId":"2154","endLine":78,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":79,"column":53,"nodeType":"2153","messageId":"2154","endLine":79,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":82,"column":21,"nodeType":"2153","messageId":"2154","endLine":82,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":83,"column":55,"nodeType":"2153","messageId":"2154","endLine":83,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":86,"column":21,"nodeType":"2153","messageId":"2154","endLine":86,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":87,"column":55,"nodeType":"2153","messageId":"2154","endLine":87,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":37,"column":21,"nodeType":"2153","messageId":"2154","endLine":37,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":38,"column":55,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":41,"column":21,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":53,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":21,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":46,"column":55,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":49,"column":21,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":55,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":49,"column":21,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":55,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":53,"column":21,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":54,"column":53,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":57,"column":21,"nodeType":"2153","messageId":"2154","endLine":57,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":58,"column":55,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":34,"column":21,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":35,"column":55,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":21,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":39,"column":53,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":42,"column":21,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":55,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":46,"column":21,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":47,"column":55,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":21,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":55,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":43,"column":21,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":44,"column":53,"nodeType":"2153","messageId":"2154","endLine":44,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":21,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":48,"column":55,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":21,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":46,"column":55,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":57,"column":21,"nodeType":"2153","messageId":"2154","endLine":57,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":58,"column":53,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":61,"column":21,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":62,"column":55,"nodeType":"2153","messageId":"2154","endLine":62,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":24,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":24,"column":22,"nodeType":"2153","messageId":"2154","endLine":24,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":25,"column":27,"nodeType":"2153","messageId":"2154","endLine":25,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":18,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":38,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":61,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2156","line":80,"column":28,"nodeType":"2153","messageId":"2154","endLine":80,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":81,"column":30,"nodeType":"2153","messageId":"2154","endLine":81,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":133,"column":21,"nodeType":"2153","messageId":"2154","endLine":133,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":134,"column":55,"nodeType":"2153","messageId":"2154","endLine":134,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":137,"column":21,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":138,"column":53,"nodeType":"2153","messageId":"2154","endLine":138,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":141,"column":21,"nodeType":"2153","messageId":"2154","endLine":141,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":142,"column":55,"nodeType":"2153","messageId":"2154","endLine":142,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":145,"column":21,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":146,"column":55,"nodeType":"2153","messageId":"2154","endLine":146,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":183,"column":34,"nodeType":"2153","messageId":"2154","endLine":183,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":183,"column":68,"nodeType":"2153","messageId":"2154","endLine":183,"endColumn":70},{"ruleId":"2175","severity":1,"message":"2176","line":36,"column":22,"nodeType":"2177","messageId":"2178","endLine":36,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":55,"column":23,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2152","line":65,"column":18,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":65,"column":38,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":65,"column":55,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":154,"column":18,"nodeType":"2153","messageId":"2154","endLine":154,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":155,"column":49,"nodeType":"2153","messageId":"2154","endLine":155,"endColumn":51},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":21,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":68,"column":55,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":71,"column":21,"nodeType":"2153","messageId":"2154","endLine":71,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":72,"column":53,"nodeType":"2153","messageId":"2154","endLine":72,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":75,"column":21,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":76,"column":55,"nodeType":"2153","messageId":"2154","endLine":76,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":79,"column":21,"nodeType":"2153","messageId":"2154","endLine":79,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":80,"column":55,"nodeType":"2153","messageId":"2154","endLine":80,"endColumn":57},{"ruleId":"2175","severity":1,"message":"2176","line":11,"column":27,"nodeType":"2177","messageId":"2178","endLine":11,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":34,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":68,"column":36,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2152","line":7,"column":26,"nodeType":"2153","messageId":"2154","endLine":7,"endColumn":28},{"ruleId":"2147","severity":1,"message":"2181","line":5,"column":10,"nodeType":"2149","messageId":"2150","endLine":5,"endColumn":16},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":21,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":48,"column":53,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":75,"column":34,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":76,"column":36,"nodeType":"2153","messageId":"2154","endLine":76,"endColumn":38},{"ruleId":"2175","severity":1,"message":"2176","line":13,"column":32,"nodeType":"2177","messageId":"2178","endLine":13,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":21,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":39,"column":53,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":55},{"ruleId":"2147","severity":1,"message":"2180","line":3,"column":17,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2156","line":34,"column":26,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":35,"column":24,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":36,"column":38,"nodeType":"2153","messageId":"2154","endLine":36,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":38,"column":51,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":53},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":51,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":53},{"ruleId":"2147","severity":1,"message":"2182","line":14,"column":10,"nodeType":"2149","messageId":"2150","endLine":14,"endColumn":26},{"ruleId":"2147","severity":1,"message":"2183","line":14,"column":28,"nodeType":"2149","messageId":"2150","endLine":14,"endColumn":46},{"ruleId":"2147","severity":1,"message":"2184","line":15,"column":10,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":24},{"ruleId":"2147","severity":1,"message":"2185","line":15,"column":26,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":42},{"ruleId":"2175","severity":1,"message":"2176","line":21,"column":27,"nodeType":"2177","messageId":"2178","endLine":21,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":73,"column":21,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":74,"column":53,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":102,"column":34,"nodeType":"2153","messageId":"2154","endLine":102,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":102,"column":68,"nodeType":"2153","messageId":"2154","endLine":102,"endColumn":70},{"ruleId":"2147","severity":1,"message":"2186","line":5,"column":10,"nodeType":"2149","messageId":"2150","endLine":5,"endColumn":14},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":24,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":22,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":24,"column":27,"nodeType":"2153","messageId":"2154","endLine":24,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":41,"column":18,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":41,"column":38,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":41,"column":61,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2156","line":79,"column":28,"nodeType":"2153","messageId":"2154","endLine":79,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":80,"column":30,"nodeType":"2153","messageId":"2154","endLine":80,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":169,"column":34,"nodeType":"2153","messageId":"2154","endLine":169,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":169,"column":68,"nodeType":"2153","messageId":"2154","endLine":169,"endColumn":70},{"ruleId":"2147","severity":1,"message":"2186","line":2,"column":10,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2187","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2188","line":11,"column":10,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":19},{"ruleId":"2147","severity":1,"message":"2189","line":11,"column":21,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":32},{"ruleId":"2160","severity":1,"message":"2190","line":23,"column":6,"nodeType":"2162","endLine":23,"endColumn":8,"suggestions":"2191"},{"ruleId":"2147","severity":1,"message":"2186","line":7,"column":10,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":16,"column":5,"nodeType":"2149","messageId":"2150","endLine":16,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":15,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":48,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":50},{"ruleId":"2160","severity":1,"message":"2193","line":34,"column":6,"nodeType":"2162","endLine":34,"endColumn":12,"suggestions":"2194"},{"ruleId":"2151","severity":1,"message":"2152","line":70,"column":57,"nodeType":"2153","messageId":"2154","endLine":70,"endColumn":59},{"ruleId":"2147","severity":1,"message":"2186","line":7,"column":10,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":16,"column":5,"nodeType":"2149","messageId":"2150","endLine":16,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":15,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":48,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":50},{"ruleId":"2160","severity":1,"message":"2193","line":34,"column":6,"nodeType":"2162","endLine":34,"endColumn":12,"suggestions":"2195"},{"ruleId":"2151","severity":1,"message":"2152","line":70,"column":57,"nodeType":"2153","messageId":"2154","endLine":70,"endColumn":59},{"ruleId":"2147","severity":1,"message":"2196","line":22,"column":24,"nodeType":"2149","messageId":"2150","endLine":22,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":50,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":29,"column":58,"nodeType":"2153","messageId":"2154","endLine":29,"endColumn":60},{"ruleId":"2147","severity":1,"message":"2179","line":3,"column":17,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":24},{"ruleId":"2147","severity":1,"message":"2180","line":3,"column":26,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2156","line":51,"column":21,"nodeType":"2153","messageId":"2154","endLine":51,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":52,"column":55,"nodeType":"2153","messageId":"2154","endLine":52,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":55,"column":21,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":56,"column":53,"nodeType":"2153","messageId":"2154","endLine":56,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":59,"column":21,"nodeType":"2153","messageId":"2154","endLine":59,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":60,"column":55,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":63,"column":21,"nodeType":"2153","messageId":"2154","endLine":63,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":64,"column":55,"nodeType":"2153","messageId":"2154","endLine":64,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2151","severity":1,"message":"2156","line":12,"column":54,"nodeType":"2153","messageId":"2154","endLine":12,"endColumn":56},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":36,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":55,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2175","severity":1,"message":"2176","line":13,"column":27,"nodeType":"2177","messageId":"2178","endLine":13,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":43,"column":21,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":44,"column":55,"nodeType":"2153","messageId":"2154","endLine":44,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":21,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":48,"column":53,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":51,"column":21,"nodeType":"2153","messageId":"2154","endLine":51,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":52,"column":55,"nodeType":"2153","messageId":"2154","endLine":52,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":55,"column":21,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":56,"column":55,"nodeType":"2153","messageId":"2154","endLine":56,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2180","line":1,"column":17,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2156","line":41,"column":50,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":29,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2156","line":56,"column":27,"nodeType":"2153","messageId":"2154","endLine":56,"endColumn":29},{"ruleId":"2175","severity":1,"message":"2176","line":19,"column":23,"nodeType":"2177","messageId":"2178","endLine":19,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2176","line":28,"column":23,"nodeType":"2177","messageId":"2178","endLine":28,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2176","line":37,"column":23,"nodeType":"2177","messageId":"2178","endLine":37,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2156","line":89,"column":40,"nodeType":"2153","messageId":"2154","endLine":89,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2156","line":179,"column":40,"nodeType":"2153","messageId":"2154","endLine":179,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2156","line":283,"column":16,"nodeType":"2153","messageId":"2154","endLine":283,"endColumn":18},{"ruleId":"2151","severity":1,"message":"2152","line":284,"column":50,"nodeType":"2153","messageId":"2154","endLine":284,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":287,"column":16,"nodeType":"2153","messageId":"2154","endLine":287,"endColumn":18},{"ruleId":"2151","severity":1,"message":"2152","line":288,"column":48,"nodeType":"2153","messageId":"2154","endLine":288,"endColumn":50},{"ruleId":"2151","severity":1,"message":"2156","line":291,"column":16,"nodeType":"2153","messageId":"2154","endLine":291,"endColumn":18},{"ruleId":"2151","severity":1,"message":"2152","line":292,"column":50,"nodeType":"2153","messageId":"2154","endLine":292,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":295,"column":16,"nodeType":"2153","messageId":"2154","endLine":295,"endColumn":18},{"ruleId":"2151","severity":1,"message":"2152","line":296,"column":50,"nodeType":"2153","messageId":"2154","endLine":296,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2152","line":78,"column":26,"nodeType":"2153","messageId":"2154","endLine":78,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2152","line":80,"column":26,"nodeType":"2153","messageId":"2154","endLine":80,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":34,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":68,"column":36,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":38},{"ruleId":"2147","severity":1,"message":"2197","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":20},{"ruleId":"2147","severity":1,"message":"2198","line":5,"column":8,"nodeType":"2149","messageId":"2150","endLine":5,"endColumn":18},{"ruleId":"2147","severity":1,"message":"2192","line":11,"column":23,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":30},{"ruleId":"2147","severity":1,"message":"2187","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":12},{"ruleId":"2160","severity":1,"message":"2190","line":30,"column":6,"nodeType":"2162","endLine":30,"endColumn":8,"suggestions":"2199"},{"ruleId":"2160","severity":1,"message":"2190","line":14,"column":6,"nodeType":"2162","endLine":14,"endColumn":8,"suggestions":"2200"},{"ruleId":"2160","severity":1,"message":"2190","line":25,"column":6,"nodeType":"2162","endLine":25,"endColumn":8,"suggestions":"2201"},{"ruleId":"2160","severity":1,"message":"2190","line":28,"column":6,"nodeType":"2162","endLine":28,"endColumn":8,"suggestions":"2202"},{"ruleId":"2151","severity":1,"message":"2156","line":36,"column":26,"nodeType":"2153","messageId":"2154","endLine":36,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":26,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":42,"column":26,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":28},{"ruleId":"2160","severity":1,"message":"2190","line":54,"column":6,"nodeType":"2162","endLine":54,"endColumn":49,"suggestions":"2203"},{"ruleId":"2160","severity":1,"message":"2190","line":19,"column":6,"nodeType":"2162","endLine":19,"endColumn":8,"suggestions":"2204"},{"ruleId":"2151","severity":1,"message":"2156","line":46,"column":50,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":52},{"ruleId":"2160","severity":1,"message":"2190","line":48,"column":6,"nodeType":"2162","endLine":48,"endColumn":20,"suggestions":"2205"},{"ruleId":"2151","severity":1,"message":"2156","line":57,"column":26,"nodeType":"2153","messageId":"2154","endLine":57,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":60,"column":26,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":63,"column":26,"nodeType":"2153","messageId":"2154","endLine":63,"endColumn":28},{"ruleId":"2160","severity":1,"message":"2190","line":70,"column":6,"nodeType":"2162","endLine":70,"endColumn":49,"suggestions":"2206"},{"ruleId":"2151","severity":1,"message":"2152","line":73,"column":31,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":33},{"ruleId":"2151","severity":1,"message":"2156","line":33,"column":46,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":48},{"ruleId":"2160","severity":1,"message":"2190","line":43,"column":6,"nodeType":"2162","endLine":43,"endColumn":20,"suggestions":"2207"},{"ruleId":"2151","severity":1,"message":"2152","line":46,"column":31,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":33},{"ruleId":"2160","severity":1,"message":"2190","line":15,"column":6,"nodeType":"2162","endLine":15,"endColumn":8,"suggestions":"2208"},{"ruleId":"2160","severity":1,"message":"2190","line":25,"column":6,"nodeType":"2162","endLine":25,"endColumn":8,"suggestions":"2209"},{"ruleId":"2160","severity":1,"message":"2190","line":15,"column":6,"nodeType":"2162","endLine":15,"endColumn":8,"suggestions":"2210"},{"ruleId":"2160","severity":1,"message":"2190","line":15,"column":6,"nodeType":"2162","endLine":15,"endColumn":8,"suggestions":"2211"},{"ruleId":"2160","severity":1,"message":"2190","line":23,"column":6,"nodeType":"2162","endLine":23,"endColumn":8,"suggestions":"2212"},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":26,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":35,"column":26,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":26,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":28},{"ruleId":"2160","severity":1,"message":"2190","line":45,"column":6,"nodeType":"2162","endLine":45,"endColumn":49,"suggestions":"2213"},{"ruleId":"2160","severity":1,"message":"2190","line":24,"column":6,"nodeType":"2162","endLine":24,"endColumn":8,"suggestions":"2214"},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":26,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":35,"column":26,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":26,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":28},{"ruleId":"2160","severity":1,"message":"2190","line":45,"column":6,"nodeType":"2162","endLine":45,"endColumn":49,"suggestions":"2215"},{"ruleId":"2147","severity":1,"message":"2216","line":5,"column":3,"nodeType":"2149","messageId":"2150","endLine":5,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2217","line":8,"column":3,"nodeType":"2149","messageId":"2150","endLine":8,"endColumn":16},{"ruleId":"2151","severity":1,"message":"2152","line":137,"column":18,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":20},{"ruleId":"2147","severity":1,"message":"2181","line":3,"column":8,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":9,"column":31,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":38},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2222"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2224"},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":41,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":133,"column":43,"nodeType":"2153","messageId":"2154","endLine":133,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":145,"column":43,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":45},{"ruleId":"2175","severity":1,"message":"2176","line":62,"column":38,"nodeType":"2177","messageId":"2178","endLine":62,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":66,"column":32,"nodeType":"2153","messageId":"2154","endLine":66,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2152","line":116,"column":20,"nodeType":"2153","messageId":"2154","endLine":116,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2156","line":158,"column":46,"nodeType":"2153","messageId":"2154","endLine":158,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2152","line":168,"column":42,"nodeType":"2153","messageId":"2154","endLine":168,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":174,"column":42,"nodeType":"2153","messageId":"2154","endLine":174,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":192,"column":42,"nodeType":"2153","messageId":"2154","endLine":192,"endColumn":44},{"ruleId":"2147","severity":1,"message":"2186","line":8,"column":10,"nodeType":"2149","messageId":"2150","endLine":8,"endColumn":14},{"ruleId":"2151","severity":1,"message":"2156","line":212,"column":37,"nodeType":"2153","messageId":"2154","endLine":212,"endColumn":39},{"ruleId":"2147","severity":1,"message":"2225","line":23,"column":5,"nodeType":"2149","messageId":"2150","endLine":23,"endColumn":9},{"ruleId":"2147","severity":1,"message":"2226","line":31,"column":57,"nodeType":"2149","messageId":"2150","endLine":31,"endColumn":66},{"ruleId":"2151","severity":1,"message":"2152","line":92,"column":20,"nodeType":"2153","messageId":"2154","endLine":92,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2156","line":134,"column":46,"nodeType":"2153","messageId":"2154","endLine":134,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2152","line":144,"column":42,"nodeType":"2153","messageId":"2154","endLine":144,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":150,"column":42,"nodeType":"2153","messageId":"2154","endLine":150,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":168,"column":42,"nodeType":"2153","messageId":"2154","endLine":168,"endColumn":44},{"ruleId":"2147","severity":1,"message":"2225","line":23,"column":5,"nodeType":"2149","messageId":"2150","endLine":23,"endColumn":9},{"ruleId":"2147","severity":1,"message":"2226","line":31,"column":57,"nodeType":"2149","messageId":"2150","endLine":31,"endColumn":66},{"ruleId":"2151","severity":1,"message":"2152","line":92,"column":20,"nodeType":"2153","messageId":"2154","endLine":92,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2156","line":134,"column":46,"nodeType":"2153","messageId":"2154","endLine":134,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2152","line":144,"column":42,"nodeType":"2153","messageId":"2154","endLine":144,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":150,"column":42,"nodeType":"2153","messageId":"2154","endLine":150,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":168,"column":42,"nodeType":"2153","messageId":"2154","endLine":168,"endColumn":44},{"ruleId":"2147","severity":1,"message":"2227","line":2,"column":10,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":15},{"ruleId":"2147","severity":1,"message":"2228","line":14,"column":35,"nodeType":"2149","messageId":"2150","endLine":14,"endColumn":47},{"ruleId":"2147","severity":1,"message":"2196","line":22,"column":24,"nodeType":"2149","messageId":"2150","endLine":22,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":27,"column":50,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":58,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":60},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":22,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":39,"column":49,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":51},{"ruleId":"2151","severity":1,"message":"2156","line":40,"column":58,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":60},{"ruleId":"2151","severity":1,"message":"2156","line":11,"column":54,"nodeType":"2153","messageId":"2154","endLine":11,"endColumn":56},{"ruleId":"2151","severity":1,"message":"2152","line":60,"column":36,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":38},{"ruleId":"2147","severity":1,"message":"2180","line":1,"column":17,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":32,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2156","line":50,"column":30,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":32},{"ruleId":"2147","severity":1,"message":"2196","line":22,"column":24,"nodeType":"2149","messageId":"2150","endLine":22,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":50,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":29,"column":58,"nodeType":"2153","messageId":"2154","endLine":29,"endColumn":60},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2151","severity":1,"message":"2156","line":12,"column":54,"nodeType":"2153","messageId":"2154","endLine":12,"endColumn":56},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":36,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":38},{"ruleId":"2147","severity":1,"message":"2186","line":7,"column":10,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":16,"column":5,"nodeType":"2149","messageId":"2150","endLine":16,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":15,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":48,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":50},{"ruleId":"2160","severity":1,"message":"2193","line":34,"column":6,"nodeType":"2162","endLine":34,"endColumn":12,"suggestions":"2229"},{"ruleId":"2151","severity":1,"message":"2152","line":70,"column":57,"nodeType":"2153","messageId":"2154","endLine":70,"endColumn":59},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2230","line":6,"column":8,"nodeType":"2149","messageId":"2150","endLine":6,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2186","line":7,"column":10,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2231","line":8,"column":8,"nodeType":"2149","messageId":"2150","endLine":8,"endColumn":16},{"ruleId":"2151","severity":1,"message":"2152","line":41,"column":24,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2176","line":46,"column":25,"nodeType":"2177","messageId":"2178","endLine":46,"endColumn":27},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":52,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":54},{"ruleId":"2151","severity":1,"message":"2156","line":48,"column":21,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":62,"column":51,"nodeType":"2153","messageId":"2154","endLine":62,"endColumn":53},{"ruleId":"2160","severity":1,"message":"2232","line":81,"column":5,"nodeType":"2162","endLine":81,"endColumn":7,"suggestions":"2233"},{"ruleId":"2151","severity":1,"message":"2152","line":137,"column":18,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2156","line":137,"column":39,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2156","line":137,"column":66,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":68},{"ruleId":"2151","severity":1,"message":"2156","line":150,"column":39,"nodeType":"2153","messageId":"2154","endLine":150,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2156","line":150,"column":66,"nodeType":"2153","messageId":"2154","endLine":150,"endColumn":68},{"ruleId":"2151","severity":1,"message":"2156","line":183,"column":41,"nodeType":"2153","messageId":"2154","endLine":183,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2156","line":183,"column":68,"nodeType":"2153","messageId":"2154","endLine":183,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":213,"column":41,"nodeType":"2153","messageId":"2154","endLine":213,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2156","line":213,"column":68,"nodeType":"2153","messageId":"2154","endLine":213,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":241,"column":53,"nodeType":"2153","messageId":"2154","endLine":241,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":247,"column":44,"nodeType":"2153","messageId":"2154","endLine":247,"endColumn":46},{"ruleId":"2151","severity":1,"message":"2156","line":278,"column":39,"nodeType":"2153","messageId":"2154","endLine":278,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2156","line":278,"column":66,"nodeType":"2153","messageId":"2154","endLine":278,"endColumn":68},{"ruleId":"2151","severity":1,"message":"2156","line":291,"column":39,"nodeType":"2153","messageId":"2154","endLine":291,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2156","line":291,"column":66,"nodeType":"2153","messageId":"2154","endLine":291,"endColumn":68},{"ruleId":"2151","severity":1,"message":"2156","line":324,"column":41,"nodeType":"2153","messageId":"2154","endLine":324,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2156","line":324,"column":68,"nodeType":"2153","messageId":"2154","endLine":324,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":354,"column":41,"nodeType":"2153","messageId":"2154","endLine":354,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2156","line":354,"column":68,"nodeType":"2153","messageId":"2154","endLine":354,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":382,"column":53,"nodeType":"2153","messageId":"2154","endLine":382,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":388,"column":44,"nodeType":"2153","messageId":"2154","endLine":388,"endColumn":46},{"ruleId":"2151","severity":1,"message":"2156","line":46,"column":21,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":47,"column":53,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":55},{"ruleId":"2160","severity":1,"message":"2234","line":59,"column":5,"nodeType":"2162","endLine":59,"endColumn":10,"suggestions":"2235"},{"ruleId":"2151","severity":1,"message":"2156","line":20,"column":13,"nodeType":"2153","messageId":"2154","endLine":20,"endColumn":15},{"ruleId":"2175","severity":1,"message":"2176","line":31,"column":24,"nodeType":"2177","messageId":"2178","endLine":31,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2176","line":31,"column":24,"nodeType":"2177","messageId":"2178","endLine":31,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":18,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":38,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":61,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":21,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":53,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":43,"column":21,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":44,"column":55,"nodeType":"2153","messageId":"2154","endLine":44,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":21,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":48,"column":55,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":118,"column":34,"nodeType":"2153","messageId":"2154","endLine":118,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":118,"column":68,"nodeType":"2153","messageId":"2154","endLine":118,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":18,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":38,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":61,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":21,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":39,"column":53,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":93,"column":34,"nodeType":"2153","messageId":"2154","endLine":93,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":93,"column":68,"nodeType":"2153","messageId":"2154","endLine":93,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2152","line":17,"column":24,"nodeType":"2153","messageId":"2154","endLine":17,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":22,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":27,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":40,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2152","line":69,"column":40,"nodeType":"2153","messageId":"2154","endLine":69,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2156","line":73,"column":34,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":74,"column":36,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2152","line":83,"column":32,"nodeType":"2153","messageId":"2154","endLine":83,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2152","line":84,"column":30,"nodeType":"2153","messageId":"2154","endLine":84,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2152","line":85,"column":35,"nodeType":"2153","messageId":"2154","endLine":85,"endColumn":37},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":53,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":30,"column":21,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":55,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":34,"column":21,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":35,"column":55,"nodeType":"2153","messageId":"2154","endLine":35,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":68,"column":21,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":69,"column":55,"nodeType":"2153","messageId":"2154","endLine":69,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":72,"column":21,"nodeType":"2153","messageId":"2154","endLine":72,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":73,"column":53,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":76,"column":21,"nodeType":"2153","messageId":"2154","endLine":76,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":77,"column":55,"nodeType":"2153","messageId":"2154","endLine":77,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":80,"column":21,"nodeType":"2153","messageId":"2154","endLine":80,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":81,"column":55,"nodeType":"2153","messageId":"2154","endLine":81,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2152","line":21,"column":22,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":24,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":27,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":60,"column":21,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":53,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":87,"column":34,"nodeType":"2153","messageId":"2154","endLine":87,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":88,"column":36,"nodeType":"2153","messageId":"2154","endLine":88,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":99,"column":34,"nodeType":"2153","messageId":"2154","endLine":99,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":100,"column":36,"nodeType":"2153","messageId":"2154","endLine":100,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":101,"column":39,"nodeType":"2153","messageId":"2154","endLine":101,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":20,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":38,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":61,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":28,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":62,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":64},{"ruleId":"2151","severity":1,"message":"2156","line":93,"column":21,"nodeType":"2153","messageId":"2154","endLine":93,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":94,"column":55,"nodeType":"2153","messageId":"2154","endLine":94,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":97,"column":21,"nodeType":"2153","messageId":"2154","endLine":97,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":98,"column":53,"nodeType":"2153","messageId":"2154","endLine":98,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":101,"column":21,"nodeType":"2153","messageId":"2154","endLine":101,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":102,"column":55,"nodeType":"2153","messageId":"2154","endLine":102,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":136,"column":34,"nodeType":"2153","messageId":"2154","endLine":136,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":137,"column":36,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":38},{"ruleId":"2160","severity":1,"message":"2236","line":38,"column":5,"nodeType":"2162","endLine":38,"endColumn":7,"suggestions":"2237"},{"ruleId":"2151","severity":1,"message":"2152","line":171,"column":18,"nodeType":"2153","messageId":"2154","endLine":171,"endColumn":20},{"ruleId":"2160","severity":1,"message":"2236","line":38,"column":5,"nodeType":"2162","endLine":38,"endColumn":7,"suggestions":"2238"},{"ruleId":"2151","severity":1,"message":"2152","line":171,"column":18,"nodeType":"2153","messageId":"2154","endLine":171,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2156","line":20,"column":21,"nodeType":"2153","messageId":"2154","endLine":20,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":21,"column":53,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":34,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":48,"column":36,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":21,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":48,"column":53,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":74,"column":34,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":75,"column":36,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":48,"column":21,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":49,"column":53,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":75,"column":34,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":76,"column":36,"nodeType":"2153","messageId":"2154","endLine":76,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2152","line":16,"column":20,"nodeType":"2153","messageId":"2154","endLine":16,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2152","line":16,"column":38,"nodeType":"2153","messageId":"2154","endLine":16,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":16,"column":61,"nodeType":"2153","messageId":"2154","endLine":16,"endColumn":63},{"ruleId":"2175","severity":1,"message":"2176","line":28,"column":29,"nodeType":"2177","messageId":"2178","endLine":28,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2156","line":65,"column":34,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":65,"column":68,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":70},{"ruleId":"2147","severity":1,"message":"2180","line":1,"column":17,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":25},{"ruleId":"2147","severity":1,"message":"2239","line":10,"column":5,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":18},{"ruleId":"2147","severity":1,"message":"2240","line":11,"column":5,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":18},{"ruleId":"2147","severity":1,"message":"2241","line":14,"column":5,"nodeType":"2149","messageId":"2150","endLine":14,"endColumn":11},{"ruleId":"2151","severity":1,"message":"2156","line":47,"column":22,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":47,"column":49,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":51},{"ruleId":"2151","severity":1,"message":"2156","line":48,"column":58,"nodeType":"2153","messageId":"2154","endLine":48,"endColumn":60},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2242","line":11,"column":22,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":31},{"ruleId":"2147","severity":1,"message":"2192","line":11,"column":42,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":49},{"ruleId":"2147","severity":1,"message":"2243","line":12,"column":10,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2244","line":12,"column":16,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":23},{"ruleId":"2147","severity":1,"message":"2245","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2246","line":13,"column":16,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":19,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":21},{"ruleId":"2147","severity":1,"message":"2247","line":20,"column":10,"nodeType":"2149","messageId":"2150","endLine":20,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2226","line":21,"column":57,"nodeType":"2149","messageId":"2150","endLine":21,"endColumn":66},{"ruleId":"2175","severity":1,"message":"2176","line":50,"column":39,"nodeType":"2177","messageId":"2178","endLine":50,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":30,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":32},{"ruleId":"2175","severity":1,"message":"2176","line":63,"column":28,"nodeType":"2177","messageId":"2178","endLine":63,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2152","line":69,"column":37,"nodeType":"2153","messageId":"2154","endLine":69,"endColumn":39},{"ruleId":"2151","severity":1,"message":"2156","line":166,"column":46,"nodeType":"2153","messageId":"2154","endLine":166,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2152","line":176,"column":42,"nodeType":"2153","messageId":"2154","endLine":176,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":182,"column":42,"nodeType":"2153","messageId":"2154","endLine":182,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":200,"column":42,"nodeType":"2153","messageId":"2154","endLine":200,"endColumn":44},{"ruleId":"2147","severity":1,"message":"2181","line":3,"column":8,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":9,"column":31,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":38},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2248"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2249"},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":41,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":133,"column":43,"nodeType":"2153","messageId":"2154","endLine":133,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":145,"column":43,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":45},{"ruleId":"2147","severity":1,"message":"2181","line":3,"column":8,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":9,"column":31,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":38},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2250"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2251"},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":41,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":133,"column":43,"nodeType":"2153","messageId":"2154","endLine":133,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":145,"column":43,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":19,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":21},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":19,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":21},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":19,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":21},{"ruleId":"2151","severity":1,"message":"2156","line":20,"column":27,"nodeType":"2153","messageId":"2154","endLine":20,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":21,"column":24,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":30,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":58,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":60},{"ruleId":"2151","severity":1,"message":"2156","line":42,"column":32,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2156","line":42,"column":60,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":62},{"ruleId":"2160","severity":1,"message":"2252","line":58,"column":5,"nodeType":"2162","endLine":58,"endColumn":20,"suggestions":"2253"},{"ruleId":"2147","severity":1,"message":"2254","line":10,"column":53,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":63},{"ruleId":"2147","severity":1,"message":"2227","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2230","line":7,"column":8,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2255","line":13,"column":19,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":26},{"ruleId":"2147","severity":1,"message":"2192","line":13,"column":28,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":35},{"ruleId":"2151","severity":1,"message":"2156","line":19,"column":26,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":19,"column":54,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":56},{"ruleId":"2151","severity":1,"message":"2152","line":17,"column":15,"nodeType":"2153","messageId":"2154","endLine":17,"endColumn":17},{"ruleId":"2160","severity":1,"message":"2256","line":30,"column":6,"nodeType":"2162","endLine":30,"endColumn":15,"suggestions":"2257"},{"ruleId":"2151","severity":1,"message":"2156","line":102,"column":43,"nodeType":"2153","messageId":"2154","endLine":102,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2156","line":104,"column":30,"nodeType":"2153","messageId":"2154","endLine":104,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2152","line":131,"column":57,"nodeType":"2153","messageId":"2154","endLine":131,"endColumn":59},{"ruleId":"2175","severity":1,"message":"2176","line":23,"column":29,"nodeType":"2177","messageId":"2178","endLine":23,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2156","line":24,"column":25,"nodeType":"2153","messageId":"2154","endLine":24,"endColumn":27},{"ruleId":"2151","severity":1,"message":"2156","line":30,"column":63,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":65},{"ruleId":"2151","severity":1,"message":"2152","line":32,"column":65,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":67},{"ruleId":"2151","severity":1,"message":"2156","line":74,"column":53,"nodeType":"2153","messageId":"2154","endLine":74,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":104,"column":55,"nodeType":"2153","messageId":"2154","endLine":104,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":104,"column":77,"nodeType":"2153","messageId":"2154","endLine":104,"endColumn":79},{"ruleId":"2151","severity":1,"message":"2156","line":107,"column":55,"nodeType":"2153","messageId":"2154","endLine":107,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":108,"column":59,"nodeType":"2153","messageId":"2154","endLine":108,"endColumn":61},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":39,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":41},{"ruleId":"2151","severity":1,"message":"2152","line":29,"column":53,"nodeType":"2153","messageId":"2154","endLine":29,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":103,"column":53,"nodeType":"2153","messageId":"2154","endLine":103,"endColumn":55},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2242","line":11,"column":22,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":31},{"ruleId":"2147","severity":1,"message":"2192","line":11,"column":42,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":49},{"ruleId":"2147","severity":1,"message":"2243","line":12,"column":10,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2244","line":12,"column":16,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":23},{"ruleId":"2147","severity":1,"message":"2245","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2246","line":13,"column":16,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":46,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2156","line":27,"column":28,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":27,"column":52,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":54},{"ruleId":"2151","severity":1,"message":"2152","line":53,"column":7,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":9},{"ruleId":"2151","severity":1,"message":"2152","line":56,"column":15,"nodeType":"2153","messageId":"2154","endLine":56,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":14,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":16},{"ruleId":"2160","severity":1,"message":"2258","line":70,"column":5,"nodeType":"2162","endLine":70,"endColumn":7,"suggestions":"2259"},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2260"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2261"},{"ruleId":"2151","severity":1,"message":"2156","line":159,"column":41,"nodeType":"2153","messageId":"2154","endLine":159,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":169,"column":43,"nodeType":"2153","messageId":"2154","endLine":169,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":188,"column":43,"nodeType":"2153","messageId":"2154","endLine":188,"endColumn":45},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2262"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2263"},{"ruleId":"2151","severity":1,"message":"2156","line":159,"column":41,"nodeType":"2153","messageId":"2154","endLine":159,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":169,"column":43,"nodeType":"2153","messageId":"2154","endLine":169,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":188,"column":43,"nodeType":"2153","messageId":"2154","endLine":188,"endColumn":45},{"ruleId":"2147","severity":1,"message":"2264","line":6,"column":10,"nodeType":"2149","messageId":"2150","endLine":6,"endColumn":19},{"ruleId":"2151","severity":1,"message":"2156","line":21,"column":11,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":13},{"ruleId":"2265","severity":1,"message":"2266","line":63,"column":5,"nodeType":"2267","endLine":67,"endColumn":7},{"ruleId":"2151","severity":1,"message":"2156","line":40,"column":34,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":41,"column":36,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2152","line":24,"column":24,"nodeType":"2153","messageId":"2154","endLine":24,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":25,"column":22,"nodeType":"2153","messageId":"2154","endLine":25,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":26,"column":27,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":18,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":20},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":38,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":40},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":61,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":63},{"ruleId":"2151","severity":1,"message":"2152","line":60,"column":24,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":22,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":62,"column":27,"nodeType":"2153","messageId":"2154","endLine":62,"endColumn":29},{"ruleId":"2175","severity":1,"message":"2176","line":81,"column":27,"nodeType":"2177","messageId":"2178","endLine":81,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":112,"column":28,"nodeType":"2153","messageId":"2154","endLine":112,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":113,"column":30,"nodeType":"2153","messageId":"2154","endLine":113,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":168,"column":34,"nodeType":"2153","messageId":"2154","endLine":168,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":168,"column":68,"nodeType":"2153","messageId":"2154","endLine":168,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":189,"column":21,"nodeType":"2153","messageId":"2154","endLine":189,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":190,"column":55,"nodeType":"2153","messageId":"2154","endLine":190,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":193,"column":21,"nodeType":"2153","messageId":"2154","endLine":193,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":194,"column":53,"nodeType":"2153","messageId":"2154","endLine":194,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":197,"column":21,"nodeType":"2153","messageId":"2154","endLine":197,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":198,"column":55,"nodeType":"2153","messageId":"2154","endLine":198,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":28,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":39,"column":30,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":90,"column":21,"nodeType":"2153","messageId":"2154","endLine":90,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":91,"column":55,"nodeType":"2153","messageId":"2154","endLine":91,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":94,"column":21,"nodeType":"2153","messageId":"2154","endLine":94,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":95,"column":53,"nodeType":"2153","messageId":"2154","endLine":95,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":98,"column":21,"nodeType":"2153","messageId":"2154","endLine":98,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":99,"column":55,"nodeType":"2153","messageId":"2154","endLine":99,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":102,"column":21,"nodeType":"2153","messageId":"2154","endLine":102,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":103,"column":55,"nodeType":"2153","messageId":"2154","endLine":103,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":145,"column":34,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":146,"column":36,"nodeType":"2153","messageId":"2154","endLine":146,"endColumn":38},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2151","severity":1,"message":"2156","line":12,"column":54,"nodeType":"2153","messageId":"2154","endLine":12,"endColumn":56},{"ruleId":"2151","severity":1,"message":"2152","line":61,"column":36,"nodeType":"2153","messageId":"2154","endLine":61,"endColumn":38},{"ruleId":"2147","severity":1,"message":"2196","line":22,"column":24,"nodeType":"2149","messageId":"2150","endLine":22,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":27,"column":50,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":28,"column":58,"nodeType":"2153","messageId":"2154","endLine":28,"endColumn":60},{"ruleId":"2151","severity":1,"message":"2156","line":115,"column":21,"nodeType":"2153","messageId":"2154","endLine":115,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":116,"column":53,"nodeType":"2153","messageId":"2154","endLine":116,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":119,"column":21,"nodeType":"2153","messageId":"2154","endLine":119,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":120,"column":55,"nodeType":"2153","messageId":"2154","endLine":120,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":123,"column":21,"nodeType":"2153","messageId":"2154","endLine":123,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":124,"column":55,"nodeType":"2153","messageId":"2154","endLine":124,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":99,"column":21,"nodeType":"2153","messageId":"2154","endLine":99,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":100,"column":55,"nodeType":"2153","messageId":"2154","endLine":100,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":103,"column":21,"nodeType":"2153","messageId":"2154","endLine":103,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":104,"column":53,"nodeType":"2153","messageId":"2154","endLine":104,"endColumn":55},{"ruleId":"2175","severity":1,"message":"2176","line":22,"column":27,"nodeType":"2177","messageId":"2178","endLine":22,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":28,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":126,"column":30,"nodeType":"2153","messageId":"2154","endLine":126,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2156","line":269,"column":21,"nodeType":"2153","messageId":"2154","endLine":269,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":270,"column":55,"nodeType":"2153","messageId":"2154","endLine":270,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":273,"column":21,"nodeType":"2153","messageId":"2154","endLine":273,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":274,"column":53,"nodeType":"2153","messageId":"2154","endLine":274,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":277,"column":21,"nodeType":"2153","messageId":"2154","endLine":277,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":278,"column":55,"nodeType":"2153","messageId":"2154","endLine":278,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":281,"column":21,"nodeType":"2153","messageId":"2154","endLine":281,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":282,"column":55,"nodeType":"2153","messageId":"2154","endLine":282,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":327,"column":34,"nodeType":"2153","messageId":"2154","endLine":327,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":327,"column":68,"nodeType":"2153","messageId":"2154","endLine":327,"endColumn":70},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":21,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":39,"column":55,"nodeType":"2153","messageId":"2154","endLine":39,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":42,"column":21,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":43,"column":53,"nodeType":"2153","messageId":"2154","endLine":43,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":53,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":55,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":21,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":46,"column":55,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":49,"column":21,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":53,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":53,"column":21,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":54,"column":55,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":57,"column":21,"nodeType":"2153","messageId":"2154","endLine":57,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":58,"column":55,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":22,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2156","line":46,"column":21,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":47,"column":55,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":50,"column":21,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":51,"column":53,"nodeType":"2153","messageId":"2154","endLine":51,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":54,"column":21,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":55,"column":55,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":58,"column":21,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":59,"column":55,"nodeType":"2153","messageId":"2154","endLine":59,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":22,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2156","line":46,"column":21,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":47,"column":55,"nodeType":"2153","messageId":"2154","endLine":47,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":50,"column":21,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":51,"column":53,"nodeType":"2153","messageId":"2154","endLine":51,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":54,"column":21,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":55,"column":55,"nodeType":"2153","messageId":"2154","endLine":55,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":58,"column":21,"nodeType":"2153","messageId":"2154","endLine":58,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":59,"column":55,"nodeType":"2153","messageId":"2154","endLine":59,"endColumn":57},{"ruleId":"2175","severity":1,"message":"2176","line":31,"column":24,"nodeType":"2177","messageId":"2178","endLine":31,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2176","line":33,"column":24,"nodeType":"2177","messageId":"2178","endLine":33,"endColumn":26},{"ruleId":"2147","severity":1,"message":"2182","line":15,"column":10,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2176","line":23,"column":27,"nodeType":"2177","messageId":"2178","endLine":23,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":55,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":53,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":30,"column":21,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":55,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2152","line":17,"column":24,"nodeType":"2153","messageId":"2154","endLine":17,"endColumn":26},{"ruleId":"2151","severity":1,"message":"2152","line":18,"column":22,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":24},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":27,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":60,"column":40,"nodeType":"2153","messageId":"2154","endLine":60,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2152","line":68,"column":40,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":42},{"ruleId":"2151","severity":1,"message":"2156","line":72,"column":34,"nodeType":"2153","messageId":"2154","endLine":72,"endColumn":36},{"ruleId":"2151","severity":1,"message":"2156","line":73,"column":36,"nodeType":"2153","messageId":"2154","endLine":73,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2152","line":82,"column":32,"nodeType":"2153","messageId":"2154","endLine":82,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2152","line":83,"column":30,"nodeType":"2153","messageId":"2154","endLine":83,"endColumn":32},{"ruleId":"2151","severity":1,"message":"2152","line":84,"column":35,"nodeType":"2153","messageId":"2154","endLine":84,"endColumn":37},{"ruleId":"2151","severity":1,"message":"2156","line":7,"column":56,"nodeType":"2153","messageId":"2154","endLine":7,"endColumn":58},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":45,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":47},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":55,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":53,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":30,"column":21,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":55,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":41,"column":21,"nodeType":"2153","messageId":"2154","endLine":41,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":55,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":45,"column":21,"nodeType":"2153","messageId":"2154","endLine":45,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":46,"column":53,"nodeType":"2153","messageId":"2154","endLine":46,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":49,"column":21,"nodeType":"2153","messageId":"2154","endLine":49,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":50,"column":55,"nodeType":"2153","messageId":"2154","endLine":50,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":53,"column":21,"nodeType":"2153","messageId":"2154","endLine":53,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":54,"column":55,"nodeType":"2153","messageId":"2154","endLine":54,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":21,"column":21,"nodeType":"2153","messageId":"2154","endLine":21,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":22,"column":55,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":25,"column":21,"nodeType":"2153","messageId":"2154","endLine":25,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":26,"column":53,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":29,"column":21,"nodeType":"2153","messageId":"2154","endLine":29,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":30,"column":55,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":33,"column":21,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":34,"column":55,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":64,"column":33,"nodeType":"2153","messageId":"2154","endLine":64,"endColumn":35},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":55,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2175","severity":1,"message":"2176","line":17,"column":27,"nodeType":"2177","messageId":"2178","endLine":17,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2156","line":86,"column":21,"nodeType":"2153","messageId":"2154","endLine":86,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":87,"column":55,"nodeType":"2153","messageId":"2154","endLine":87,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":90,"column":21,"nodeType":"2153","messageId":"2154","endLine":90,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":91,"column":53,"nodeType":"2153","messageId":"2154","endLine":91,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":94,"column":21,"nodeType":"2153","messageId":"2154","endLine":94,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":95,"column":55,"nodeType":"2153","messageId":"2154","endLine":95,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":98,"column":21,"nodeType":"2153","messageId":"2154","endLine":98,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":99,"column":55,"nodeType":"2153","messageId":"2154","endLine":99,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":55,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2268","line":10,"column":10,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":30},{"ruleId":"2151","severity":1,"message":"2156","line":63,"column":21,"nodeType":"2153","messageId":"2154","endLine":63,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":64,"column":55,"nodeType":"2153","messageId":"2154","endLine":64,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":67,"column":21,"nodeType":"2153","messageId":"2154","endLine":67,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":68,"column":53,"nodeType":"2153","messageId":"2154","endLine":68,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":71,"column":21,"nodeType":"2153","messageId":"2154","endLine":71,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":72,"column":55,"nodeType":"2153","messageId":"2154","endLine":72,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":75,"column":21,"nodeType":"2153","messageId":"2154","endLine":75,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":76,"column":55,"nodeType":"2153","messageId":"2154","endLine":76,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":14,"column":21,"nodeType":"2153","messageId":"2154","endLine":14,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":55,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":21,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":19,"column":53,"nodeType":"2153","messageId":"2154","endLine":19,"endColumn":55},{"ruleId":"2151","severity":1,"message":"2156","line":22,"column":21,"nodeType":"2153","messageId":"2154","endLine":22,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":55,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":26,"column":21,"nodeType":"2153","messageId":"2154","endLine":26,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":27,"column":55,"nodeType":"2153","messageId":"2154","endLine":27,"endColumn":57},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2270","line":8,"column":8,"nodeType":"2149","messageId":"2150","endLine":8,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2271","line":10,"column":8,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":15},{"ruleId":"2147","severity":1,"message":"2186","line":11,"column":10,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2272","line":12,"column":10,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":23},{"ruleId":"2147","severity":1,"message":"2273","line":15,"column":11,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2274","line":15,"column":37,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":43},{"ruleId":"2147","severity":1,"message":"2275","line":15,"column":45,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":54},{"ruleId":"2147","severity":1,"message":"2276","line":17,"column":23,"nodeType":"2149","messageId":"2150","endLine":17,"endColumn":37},{"ruleId":"2147","severity":1,"message":"2277","line":18,"column":26,"nodeType":"2149","messageId":"2150","endLine":18,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":89,"column":13,"nodeType":"2153","messageId":"2154","endLine":89,"endColumn":15},{"ruleId":"2151","severity":1,"message":"2156","line":8,"column":56,"nodeType":"2153","messageId":"2154","endLine":8,"endColumn":58},{"ruleId":"2151","severity":1,"message":"2152","line":16,"column":47,"nodeType":"2153","messageId":"2154","endLine":16,"endColumn":49},{"ruleId":"2147","severity":1,"message":"2181","line":3,"column":8,"nodeType":"2149","messageId":"2150","endLine":3,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2192","line":9,"column":31,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":38},{"ruleId":"2218","severity":1,"message":"2219","line":30,"column":9,"nodeType":"2149","messageId":"2220","endLine":30,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2156","line":32,"column":41,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":43},{"ruleId":"2160","severity":1,"message":"2221","line":50,"column":6,"nodeType":"2162","endLine":50,"endColumn":12,"suggestions":"2278"},{"ruleId":"2160","severity":1,"message":"2223","line":53,"column":6,"nodeType":"2162","endLine":53,"endColumn":23,"suggestions":"2279"},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":41,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":43},{"ruleId":"2151","severity":1,"message":"2152","line":133,"column":43,"nodeType":"2153","messageId":"2154","endLine":133,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":145,"column":43,"nodeType":"2153","messageId":"2154","endLine":145,"endColumn":45},{"ruleId":"2151","severity":1,"message":"2152","line":65,"column":32,"nodeType":"2153","messageId":"2154","endLine":65,"endColumn":34},{"ruleId":"2151","severity":1,"message":"2152","line":119,"column":26,"nodeType":"2153","messageId":"2154","endLine":119,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":146,"column":36,"nodeType":"2153","messageId":"2154","endLine":146,"endColumn":38},{"ruleId":"2151","severity":1,"message":"2156","line":147,"column":38,"nodeType":"2153","messageId":"2154","endLine":147,"endColumn":40},{"ruleId":"2147","severity":1,"message":"2254","line":10,"column":53,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":63},{"ruleId":"2147","severity":1,"message":"2192","line":18,"column":5,"nodeType":"2149","messageId":"2150","endLine":18,"endColumn":12},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":15,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":125,"column":50,"nodeType":"2153","messageId":"2154","endLine":125,"endColumn":52},{"ruleId":"2147","severity":1,"message":"2181","line":2,"column":8,"nodeType":"2149","messageId":"2150","endLine":2,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2242","line":11,"column":22,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":31},{"ruleId":"2147","severity":1,"message":"2192","line":11,"column":42,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":49},{"ruleId":"2147","severity":1,"message":"2243","line":12,"column":10,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2244","line":12,"column":16,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":23},{"ruleId":"2147","severity":1,"message":"2245","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2246","line":13,"column":16,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2156","line":38,"column":46,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":48},{"ruleId":"2147","severity":1,"message":"2227","line":4,"column":8,"nodeType":"2149","messageId":"2150","endLine":4,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2230","line":7,"column":8,"nodeType":"2149","messageId":"2150","endLine":7,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2255","line":12,"column":19,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":26},{"ruleId":"2147","severity":1,"message":"2192","line":12,"column":28,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":35},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":26,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":28},{"ruleId":"2151","severity":1,"message":"2156","line":18,"column":54,"nodeType":"2153","messageId":"2154","endLine":18,"endColumn":56},{"ruleId":"2147","severity":1,"message":"2280","line":6,"column":8,"nodeType":"2149","messageId":"2150","endLine":6,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2281","line":9,"column":8,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2282","line":10,"column":8,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2283","line":11,"column":8,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":19},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":27,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":31,"column":50,"nodeType":"2153","messageId":"2154","endLine":31,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2152","line":38,"column":29,"nodeType":"2153","messageId":"2154","endLine":38,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":29,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2152","line":99,"column":23,"nodeType":"2153","messageId":"2154","endLine":99,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2176","line":120,"column":27,"nodeType":"2177","messageId":"2178","endLine":120,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":123,"column":55,"nodeType":"2153","messageId":"2154","endLine":123,"endColumn":57},{"ruleId":"2160","severity":1,"message":"2284","line":146,"column":6,"nodeType":"2162","endLine":146,"endColumn":8,"suggestions":"2285"},{"ruleId":"2151","severity":1,"message":"2152","line":177,"column":45,"nodeType":"2153","messageId":"2154","endLine":177,"endColumn":47},{"ruleId":"2151","severity":1,"message":"2156","line":210,"column":57,"nodeType":"2153","messageId":"2154","endLine":210,"endColumn":59},{"ruleId":"2151","severity":1,"message":"2152","line":225,"column":48,"nodeType":"2153","messageId":"2154","endLine":225,"endColumn":50},{"ruleId":"2151","severity":1,"message":"2156","line":233,"column":58,"nodeType":"2153","messageId":"2154","endLine":233,"endColumn":60},{"ruleId":"2175","severity":1,"message":"2176","line":249,"column":42,"nodeType":"2177","messageId":"2178","endLine":249,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":315,"column":52,"nodeType":"2153","messageId":"2154","endLine":315,"endColumn":54},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":21,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":23,"column":65,"nodeType":"2153","messageId":"2154","endLine":23,"endColumn":67},{"ruleId":"2147","severity":1,"message":"2225","line":24,"column":5,"nodeType":"2149","messageId":"2150","endLine":24,"endColumn":9},{"ruleId":"2151","severity":1,"message":"2152","line":91,"column":20,"nodeType":"2153","messageId":"2154","endLine":91,"endColumn":22},{"ruleId":"2151","severity":1,"message":"2156","line":137,"column":46,"nodeType":"2153","messageId":"2154","endLine":137,"endColumn":48},{"ruleId":"2151","severity":1,"message":"2152","line":147,"column":42,"nodeType":"2153","messageId":"2154","endLine":147,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":153,"column":42,"nodeType":"2153","messageId":"2154","endLine":153,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":171,"column":42,"nodeType":"2153","messageId":"2154","endLine":171,"endColumn":44},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2270","line":8,"column":8,"nodeType":"2149","messageId":"2150","endLine":8,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2271","line":10,"column":8,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":15},{"ruleId":"2147","severity":1,"message":"2186","line":11,"column":10,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2272","line":12,"column":10,"nodeType":"2149","messageId":"2150","endLine":12,"endColumn":23},{"ruleId":"2147","severity":1,"message":"2273","line":15,"column":11,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":14},{"ruleId":"2147","severity":1,"message":"2274","line":15,"column":37,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":43},{"ruleId":"2147","severity":1,"message":"2275","line":15,"column":45,"nodeType":"2149","messageId":"2150","endLine":15,"endColumn":54},{"ruleId":"2147","severity":1,"message":"2276","line":17,"column":23,"nodeType":"2149","messageId":"2150","endLine":17,"endColumn":37},{"ruleId":"2147","severity":1,"message":"2277","line":18,"column":26,"nodeType":"2149","messageId":"2150","endLine":18,"endColumn":43},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2272","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":33,"column":56,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":58},{"ruleId":"2160","severity":1,"message":"2286","line":49,"column":6,"nodeType":"2162","endLine":49,"endColumn":17,"suggestions":"2287"},{"ruleId":"2147","severity":1,"message":"2288","line":52,"column":13,"nodeType":"2149","messageId":"2150","endLine":52,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2272","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":34,"column":56,"nodeType":"2153","messageId":"2154","endLine":34,"endColumn":58},{"ruleId":"2160","severity":1,"message":"2289","line":39,"column":6,"nodeType":"2162","endLine":39,"endColumn":17,"suggestions":"2290"},{"ruleId":"2151","severity":1,"message":"2156","line":160,"column":55,"nodeType":"2153","messageId":"2154","endLine":160,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":169,"column":47,"nodeType":"2153","messageId":"2154","endLine":169,"endColumn":49},{"ruleId":"2151","severity":1,"message":"2156","line":170,"column":47,"nodeType":"2153","messageId":"2154","endLine":170,"endColumn":49},{"ruleId":"2147","severity":1,"message":"2192","line":17,"column":5,"nodeType":"2149","messageId":"2150","endLine":17,"endColumn":12},{"ruleId":"2147","severity":1,"message":"2291","line":23,"column":10,"nodeType":"2149","messageId":"2150","endLine":23,"endColumn":15},{"ruleId":"2147","severity":1,"message":"2292","line":23,"column":17,"nodeType":"2149","messageId":"2150","endLine":23,"endColumn":25},{"ruleId":"2151","severity":1,"message":"2152","line":30,"column":15,"nodeType":"2153","messageId":"2154","endLine":30,"endColumn":17},{"ruleId":"2151","severity":1,"message":"2156","line":108,"column":50,"nodeType":"2153","messageId":"2154","endLine":108,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2156","line":7,"column":56,"nodeType":"2153","messageId":"2154","endLine":7,"endColumn":58},{"ruleId":"2151","severity":1,"message":"2152","line":15,"column":45,"nodeType":"2153","messageId":"2154","endLine":15,"endColumn":47},{"ruleId":"2147","severity":1,"message":"2280","line":6,"column":8,"nodeType":"2149","messageId":"2150","endLine":6,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2281","line":9,"column":8,"nodeType":"2149","messageId":"2150","endLine":9,"endColumn":13},{"ruleId":"2147","severity":1,"message":"2282","line":10,"column":8,"nodeType":"2149","messageId":"2150","endLine":10,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2283","line":11,"column":8,"nodeType":"2149","messageId":"2150","endLine":11,"endColumn":19},{"ruleId":"2151","severity":1,"message":"2152","line":32,"column":27,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":29},{"ruleId":"2151","severity":1,"message":"2152","line":32,"column":50,"nodeType":"2153","messageId":"2154","endLine":32,"endColumn":52},{"ruleId":"2151","severity":1,"message":"2152","line":40,"column":29,"nodeType":"2153","messageId":"2154","endLine":40,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2152","line":42,"column":29,"nodeType":"2153","messageId":"2154","endLine":42,"endColumn":31},{"ruleId":"2151","severity":1,"message":"2152","line":103,"column":23,"nodeType":"2153","messageId":"2154","endLine":103,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2176","line":123,"column":31,"nodeType":"2177","messageId":"2178","endLine":123,"endColumn":33},{"ruleId":"2151","severity":1,"message":"2152","line":129,"column":55,"nodeType":"2153","messageId":"2154","endLine":129,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2152","line":134,"column":27,"nodeType":"2153","messageId":"2154","endLine":134,"endColumn":29},{"ruleId":"2160","severity":1,"message":"2284","line":164,"column":6,"nodeType":"2162","endLine":164,"endColumn":8,"suggestions":"2293"},{"ruleId":"2151","severity":1,"message":"2152","line":186,"column":45,"nodeType":"2153","messageId":"2154","endLine":186,"endColumn":47},{"ruleId":"2175","severity":1,"message":"2176","line":211,"column":55,"nodeType":"2177","messageId":"2178","endLine":211,"endColumn":57},{"ruleId":"2151","severity":1,"message":"2156","line":219,"column":57,"nodeType":"2153","messageId":"2154","endLine":219,"endColumn":59},{"ruleId":"2151","severity":1,"message":"2152","line":234,"column":48,"nodeType":"2153","messageId":"2154","endLine":234,"endColumn":50},{"ruleId":"2151","severity":1,"message":"2156","line":242,"column":58,"nodeType":"2153","messageId":"2154","endLine":242,"endColumn":60},{"ruleId":"2175","severity":1,"message":"2176","line":258,"column":42,"nodeType":"2177","messageId":"2178","endLine":258,"endColumn":44},{"ruleId":"2151","severity":1,"message":"2152","line":300,"column":54,"nodeType":"2153","messageId":"2154","endLine":300,"endColumn":56},{"ruleId":"2147","severity":1,"message":"2269","line":1,"column":10,"nodeType":"2149","messageId":"2150","endLine":1,"endColumn":17},{"ruleId":"2147","severity":1,"message":"2272","line":13,"column":10,"nodeType":"2149","messageId":"2150","endLine":13,"endColumn":23},{"ruleId":"2151","severity":1,"message":"2152","line":33,"column":56,"nodeType":"2153","messageId":"2154","endLine":33,"endColumn":58},{"ruleId":"2160","severity":1,"message":"2294","line":49,"column":6,"nodeType":"2162","endLine":49,"endColumn":20,"suggestions":"2295"},{"ruleId":"2147","severity":1,"message":"2288","line":52,"column":13,"nodeType":"2149","messageId":"2150","endLine":52,"endColumn":17},"no-native-reassign",["2296"],"no-negated-in-lhs",["2297"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useHistory' is defined but never used.","'FormFeedback' is defined but never used.","'Label' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'albums'. Either include it or remove the dependency array.","ArrayExpression",["2298"],"React Hook React.useEffect has missing dependencies: 'albums' and 'id'. Either include them or remove the dependency array.",["2299"],"React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2300"],["2301"],"React Hook React.useEffect has a missing dependency: 'employee_type'. Either include it or remove the dependency array.",["2302"],"'TopBar' is defined but never used.",["2303"],"'ClassDeptSessionContext' is defined but never used.","'useContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useMemo' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'selected_session' is assigned a value but never used.","'setSelectedSession' is assigned a value but never used.","'selected_class' is assigned a value but never used.","'setSelectedClass' is assigned a value but never used.","'Call' is defined but never used.","'List' is defined but never used.","'exam_data' is assigned a value but never used.","'setExamData' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["2304"],"'indexed' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'query_tags'. Either include it or remove the dependency array.",["2305"],["2306"],"'setSliceLength' is assigned a value but never used.","'PrintOptions' is defined but never used.","'SchoolInfo' is defined but never used.",["2307"],["2308"],["2309"],["2310"],["2311"],["2312"],["2313"],["2314"],["2315"],["2316"],["2317"],["2318"],["2319"],["2320"],["2321"],["2322"],["2323"],"'convertFromRaw' is defined but never used.","'convertToHTML' is defined but never used.","no-redeclare","'day' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'month' and 'year'. Either include them or remove the dependency array.",["2324"],"React Hook React.useEffect has missing dependencies: 'getWeekdaysInMonth', 'month', and 'year'. Either include them or remove the dependency array.",["2325"],"'file' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'Table' is defined but never used.","'border_color' is assigned a value but never used.",["2326"],"'uuid' is defined but never used.","'TableRow' is defined but never used.","React Hook React.useEffect has missing dependencies: 'list.exams', 'list.result_name', and 'list.student_marks'. Either include them or remove the dependency array.",["2327"],"React Hook React.useEffect has a missing dependency: 'student_id'. Either include it or remove the dependency array.",["2328"],"React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["2329"],["2330"],"'setOpenDelete' is assigned a value but never used.","'setDeleteInfo' is assigned a value but never used.","'remove' is assigned a value but never used.","'list_head' is assigned a value but never used.","'open' is assigned a value but never used.","'setopen' is assigned a value but never used.","'data' is assigned a value but never used.","'setdata' is assigned a value but never used.","'calling' is assigned a value but never used.",["2331"],["2332"],["2333"],["2334"],"React Hook React.useEffect has missing dependencies: 'exams', 'gpa_list', 'grade_list', 'subject.id', and 'subject.percentaged_full_mark'. Either include them or remove the dependency array.",["2335"],"'query_tags' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'list'. Either include it or remove the dependency array.",["2336"],"React Hook React.useEffect has missing dependencies: 'all_std_mark', 'exams', 'gpa_list', 'grade_list', 'student_id', 'student_marks', and 'subjects'. Either include them or remove the dependency array.",["2337"],["2338"],["2339"],["2340"],["2341"],"'logo_size' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'selected_query_class' is assigned a value but never used.","'useForm' is defined but never used.","'Form' is defined but never used.","'Spinner' is defined but never used.","'ValidateInput' is defined but never used.","'url' is assigned a value but never used.","'update' is assigned a value but never used.","'setUpdate' is assigned a value but never used.","'setFailMessage' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.",["2342"],["2343"],"'Input' is defined but never used.","'Toast' is defined but never used.","'ToastBody' is defined but never used.","'ToastHeader' is defined but never used.","React Hook React.useEffect has missing dependencies: 'class_id', 'department_id', 'exam_id', 'session_id', and 'subject_id'. Either include them or remove the dependency array.",["2344"],"React Hook React.useEffect has missing dependencies: 'books_show' and 'price'. Either include them or remove the dependency array.",["2345"],"'name' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'books_show'. Either include it or remove the dependency array.",["2346"],"'issue' is assigned a value but never used.","'setIssue' is assigned a value but never used.",["2347"],"React Hook React.useEffect has missing dependencies: 'price' and 'products_show'. Either include them or remove the dependency array.",["2348"],"no-global-assign","no-unsafe-negation",{"desc":"2349","fix":"2350"},{"desc":"2349","fix":"2351"},{"desc":"2352","fix":"2353"},{"desc":"2352","fix":"2354"},{"desc":"2355","fix":"2356"},{"desc":"2352","fix":"2357"},{"desc":"2358","fix":"2359"},{"desc":"2360","fix":"2361"},{"desc":"2360","fix":"2362"},{"desc":"2358","fix":"2363"},{"desc":"2358","fix":"2364"},{"desc":"2358","fix":"2365"},{"desc":"2358","fix":"2366"},{"desc":"2367","fix":"2368"},{"desc":"2358","fix":"2369"},{"desc":"2370","fix":"2371"},{"desc":"2367","fix":"2372"},{"desc":"2370","fix":"2373"},{"desc":"2358","fix":"2374"},{"desc":"2358","fix":"2375"},{"desc":"2358","fix":"2376"},{"desc":"2358","fix":"2377"},{"desc":"2358","fix":"2378"},{"desc":"2367","fix":"2379"},{"desc":"2358","fix":"2380"},{"desc":"2367","fix":"2381"},{"desc":"2382","fix":"2383"},{"desc":"2384","fix":"2385"},{"desc":"2360","fix":"2386"},{"desc":"2387","fix":"2388"},{"desc":"2389","fix":"2390"},{"desc":"2391","fix":"2392"},{"desc":"2391","fix":"2393"},{"desc":"2382","fix":"2394"},{"desc":"2384","fix":"2395"},{"desc":"2382","fix":"2396"},{"desc":"2384","fix":"2397"},{"desc":"2398","fix":"2399"},{"desc":"2400","fix":"2401"},{"desc":"2402","fix":"2403"},{"desc":"2382","fix":"2404"},{"desc":"2384","fix":"2405"},{"desc":"2382","fix":"2406"},{"desc":"2384","fix":"2407"},{"desc":"2382","fix":"2408"},{"desc":"2384","fix":"2409"},{"desc":"2410","fix":"2411"},{"desc":"2412","fix":"2413"},{"desc":"2414","fix":"2415"},{"desc":"2410","fix":"2416"},{"desc":"2417","fix":"2418"},"Update the dependencies array to be: [albums, id]",{"range":"2419","text":"2420"},{"range":"2421","text":"2420"},"Update the dependencies array to be: [id]",{"range":"2422","text":"2423"},{"range":"2424","text":"2423"},"Update the dependencies array to be: [employee_type]",{"range":"2425","text":"2426"},{"range":"2427","text":"2423"},"Update the dependencies array to be: [query]",{"range":"2428","text":"2429"},"Update the dependencies array to be: [list, query_tags]",{"range":"2430","text":"2431"},{"range":"2432","text":"2431"},{"range":"2433","text":"2429"},{"range":"2434","text":"2429"},{"range":"2435","text":"2429"},{"range":"2436","text":"2429"},"Update the dependencies array to be: [class_list, department_list, query, session_list]",{"range":"2437","text":"2438"},{"range":"2439","text":"2429"},"Update the dependencies array to be: [query, session_list]",{"range":"2440","text":"2441"},{"range":"2442","text":"2438"},{"range":"2443","text":"2441"},{"range":"2444","text":"2429"},{"range":"2445","text":"2429"},{"range":"2446","text":"2429"},{"range":"2447","text":"2429"},{"range":"2448","text":"2429"},{"range":"2449","text":"2438"},{"range":"2450","text":"2429"},{"range":"2451","text":"2438"},"Update the dependencies array to be: [list, month, year]",{"range":"2452","text":"2453"},"Update the dependencies array to be: [getWeekdaysInMonth, month, week_day_active, year]",{"range":"2454","text":"2455"},{"range":"2456","text":"2431"},"Update the dependencies array to be: [list.exams, list.result_name, list.student_marks]",{"range":"2457","text":"2458"},"Update the dependencies array to be: [student_id, url]",{"range":"2459","text":"2460"},"Update the dependencies array to be: [url]",{"range":"2461","text":"2462"},{"range":"2463","text":"2462"},{"range":"2464","text":"2453"},{"range":"2465","text":"2455"},{"range":"2466","text":"2453"},{"range":"2467","text":"2455"},"Update the dependencies array to be: [exams, gpa_list, grade_list, student_marks, subject.id, subject.percentaged_full_mark]",{"range":"2468","text":"2469"},"Update the dependencies array to be: [list, loading]",{"range":"2470","text":"2471"},"Update the dependencies array to be: [all_std_mark, exams, gpa_list, grade_list, student_id, student_marks, subjects]",{"range":"2472","text":"2473"},{"range":"2474","text":"2453"},{"range":"2475","text":"2455"},{"range":"2476","text":"2453"},{"range":"2477","text":"2455"},{"range":"2478","text":"2453"},{"range":"2479","text":"2455"},"Update the dependencies array to be: [class_id, department_id, exam_id, session_id, subject_id]",{"range":"2480","text":"2481"},"Update the dependencies array to be: [books_ids, books_show, price]",{"range":"2482","text":"2483"},"Update the dependencies array to be: [books_ids, books_show]",{"range":"2484","text":"2485"},{"range":"2486","text":"2481"},"Update the dependencies array to be: [price, products_ids, products_show]",{"range":"2487","text":"2488"},[1167,1171],"[albums, id]",[1619,1621],[1278,1280],"[id]",[1279,1281],[1401,1403],"[employee_type]",[1367,1369],[738,740],"[query]",[998,1004],"[list, query_tags]",[998,1004],[1010,1012],[406,408],[805,807],[975,977],[1779,1822],"[class_list, department_list, query, session_list]",[616,618],[1524,1538],"[query, session_list]",[2277,2320],[1252,1266],[439,441],[816,818],[408,410],[428,430],[894,896],[1657,1700],[905,907],[1666,1709],[1625,1631],"[list, month, year]",[1715,1732],"[getWeekdaysInMonth, month, week_day_active, year]",[998,1004],[2162,2164],"[list.exams, list.result_name, list.student_marks]",[1846,1851],"[student_id, url]",[1627,1629],"[url]",[1627,1629],[1625,1631],[1715,1732],[1625,1631],[1715,1732],[1608,1623],"[exams, gpa_list, grade_list, student_marks, subject.id, subject.percentaged_full_mark]",[973,982],"[list, loading]",[1584,1586],"[all_std_mark, exams, gpa_list, grade_list, student_id, student_marks, subjects]",[1648,1654],[1738,1755],[1648,1654],[1738,1755],[1625,1631],[1715,1732],[4363,4365],"[class_id, department_id, exam_id, session_id, subject_id]",[1618,1629],"[books_ids, books_show, price]",[1397,1408],"[books_ids, books_show]",[5241,5243],[1666,1680],"[price, products_ids, products_show]"]